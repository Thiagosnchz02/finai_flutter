// coverage:ignore-file
// GENERATED CODE - DO NOT MODIFY BY HAND
// ignore_for_file: type=lint
// ignore_for_file: unused_element, deprecated_member_use, deprecated_member_use_from_same_package, use_function_type_syntax_for_parameters, unnecessary_const, avoid_init_to_null, invalid_override_different_default_values_named, prefer_expression_function_bodies, annotate_overrides, invalid_annotation_target

part of 'avataaar_parts.dart';

// **************************************************************************
// FreezedGenerator
// **************************************************************************

T _$identity<T>(T value) => value;

final _privateConstructorUsedError = UnsupportedError(
    'It seems like you constructed your class using `MyClass._()`. This constructor is only meant to be used by freezed and you are not supposed to need it nor use it.\nPlease check the documentation here for more informations: https://github.com/rrousselGit/freezed#custom-getters-and-methods');

AvataaarEyes _$AvataaarEyesFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'closed':
      return AvataaarTypeEyesClosed.fromJson(json);
    case 'cry':
      return AvataaarTypeEyesCry.fromJson(json);
    case 'default0':
      return AvataaarTypeEyesDefault0.fromJson(json);
    case 'dizzy':
      return AvataaarTypeEyesDizzy.fromJson(json);
    case 'eyeRoll':
      return AvataaarTypeEyesEyeRoll.fromJson(json);
    case 'happy':
      return AvataaarTypeEyesHappy.fromJson(json);
    case 'hearts':
      return AvataaarTypeEyesHearts.fromJson(json);
    case 'side':
      return AvataaarTypeEyesSide.fromJson(json);
    case 'surprised':
      return AvataaarTypeEyesSurprised.fromJson(json);
    case 'wink':
      return AvataaarTypeEyesWink.fromJson(json);
    case 'winkWacky':
      return AvataaarTypeEyesWinkWacky.fromJson(json);
    case 'squint':
      return AvataaarTypeEyesSquint.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarEyes',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarEyesTearOff {
  const _$AvataaarEyesTearOff();

  AvataaarTypeEyesClosed closed() {
    return const AvataaarTypeEyesClosed();
  }

  AvataaarTypeEyesCry cry() {
    return const AvataaarTypeEyesCry();
  }

  AvataaarTypeEyesDefault0 default0() {
    return const AvataaarTypeEyesDefault0();
  }

  AvataaarTypeEyesDizzy dizzy() {
    return const AvataaarTypeEyesDizzy();
  }

  AvataaarTypeEyesEyeRoll eyeRoll() {
    return const AvataaarTypeEyesEyeRoll();
  }

  AvataaarTypeEyesHappy happy() {
    return const AvataaarTypeEyesHappy();
  }

  AvataaarTypeEyesHearts hearts() {
    return const AvataaarTypeEyesHearts();
  }

  AvataaarTypeEyesSide side() {
    return const AvataaarTypeEyesSide();
  }

  AvataaarTypeEyesSurprised surprised() {
    return const AvataaarTypeEyesSurprised();
  }

  AvataaarTypeEyesWink wink() {
    return const AvataaarTypeEyesWink();
  }

  AvataaarTypeEyesWinkWacky winkWacky() {
    return const AvataaarTypeEyesWinkWacky();
  }

  AvataaarTypeEyesSquint squint() {
    return const AvataaarTypeEyesSquint();
  }

  AvataaarEyes fromJson(Map<String, Object?> json) {
    return AvataaarEyes.fromJson(json);
  }
}

/// @nodoc
const $AvataaarEyes = _$AvataaarEyesTearOff();

/// @nodoc
mixin _$AvataaarEyes {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarEyesCopyWith<$Res> {
  factory $AvataaarEyesCopyWith(
          AvataaarEyes value, $Res Function(AvataaarEyes) then) =
      _$AvataaarEyesCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarEyesCopyWithImpl<$Res> implements $AvataaarEyesCopyWith<$Res> {
  _$AvataaarEyesCopyWithImpl(this._value, this._then);

  final AvataaarEyes _value;
  // ignore: unused_field
  final $Res Function(AvataaarEyes) _then;
}

/// @nodoc
abstract class $AvataaarTypeEyesClosedCopyWith<$Res> {
  factory $AvataaarTypeEyesClosedCopyWith(AvataaarTypeEyesClosed value,
          $Res Function(AvataaarTypeEyesClosed) then) =
      _$AvataaarTypeEyesClosedCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesClosedCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesClosedCopyWith<$Res> {
  _$AvataaarTypeEyesClosedCopyWithImpl(AvataaarTypeEyesClosed _value,
      $Res Function(AvataaarTypeEyesClosed) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesClosed));

  @override
  AvataaarTypeEyesClosed get _value => super._value as AvataaarTypeEyesClosed;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesClosed extends AvataaarTypeEyesClosed {
  const _$AvataaarTypeEyesClosed({String? $type})
      : $type = $type ?? 'closed',
        super._();

  factory _$AvataaarTypeEyesClosed.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesClosedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.closed()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeEyesClosed);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return closed();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return closed?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (closed != null) {
      return closed();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return closed(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return closed?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (closed != null) {
      return closed(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesClosedToJson(this);
  }
}

abstract class AvataaarTypeEyesClosed extends AvataaarEyes {
  const factory AvataaarTypeEyesClosed() = _$AvataaarTypeEyesClosed;
  const AvataaarTypeEyesClosed._() : super._();

  factory AvataaarTypeEyesClosed.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesClosed.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyesCryCopyWith<$Res> {
  factory $AvataaarTypeEyesCryCopyWith(
          AvataaarTypeEyesCry value, $Res Function(AvataaarTypeEyesCry) then) =
      _$AvataaarTypeEyesCryCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesCryCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesCryCopyWith<$Res> {
  _$AvataaarTypeEyesCryCopyWithImpl(
      AvataaarTypeEyesCry _value, $Res Function(AvataaarTypeEyesCry) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesCry));

  @override
  AvataaarTypeEyesCry get _value => super._value as AvataaarTypeEyesCry;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesCry extends AvataaarTypeEyesCry {
  const _$AvataaarTypeEyesCry({String? $type})
      : $type = $type ?? 'cry',
        super._();

  factory _$AvataaarTypeEyesCry.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesCryFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.cry()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeEyesCry);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return cry();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return cry?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (cry != null) {
      return cry();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return cry(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return cry?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (cry != null) {
      return cry(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesCryToJson(this);
  }
}

abstract class AvataaarTypeEyesCry extends AvataaarEyes {
  const factory AvataaarTypeEyesCry() = _$AvataaarTypeEyesCry;
  const AvataaarTypeEyesCry._() : super._();

  factory AvataaarTypeEyesCry.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesCry.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyesDefault0CopyWith<$Res> {
  factory $AvataaarTypeEyesDefault0CopyWith(AvataaarTypeEyesDefault0 value,
          $Res Function(AvataaarTypeEyesDefault0) then) =
      _$AvataaarTypeEyesDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesDefault0CopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesDefault0CopyWith<$Res> {
  _$AvataaarTypeEyesDefault0CopyWithImpl(AvataaarTypeEyesDefault0 _value,
      $Res Function(AvataaarTypeEyesDefault0) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesDefault0));

  @override
  AvataaarTypeEyesDefault0 get _value =>
      super._value as AvataaarTypeEyesDefault0;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesDefault0 extends AvataaarTypeEyesDefault0 {
  const _$AvataaarTypeEyesDefault0({String? $type})
      : $type = $type ?? 'default0',
        super._();

  factory _$AvataaarTypeEyesDefault0.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesDefault0FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeEyesDefault0);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesDefault0ToJson(this);
  }
}

abstract class AvataaarTypeEyesDefault0 extends AvataaarEyes {
  const factory AvataaarTypeEyesDefault0() = _$AvataaarTypeEyesDefault0;
  const AvataaarTypeEyesDefault0._() : super._();

  factory AvataaarTypeEyesDefault0.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesDefault0.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyesDizzyCopyWith<$Res> {
  factory $AvataaarTypeEyesDizzyCopyWith(AvataaarTypeEyesDizzy value,
          $Res Function(AvataaarTypeEyesDizzy) then) =
      _$AvataaarTypeEyesDizzyCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesDizzyCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesDizzyCopyWith<$Res> {
  _$AvataaarTypeEyesDizzyCopyWithImpl(
      AvataaarTypeEyesDizzy _value, $Res Function(AvataaarTypeEyesDizzy) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesDizzy));

  @override
  AvataaarTypeEyesDizzy get _value => super._value as AvataaarTypeEyesDizzy;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesDizzy extends AvataaarTypeEyesDizzy {
  const _$AvataaarTypeEyesDizzy({String? $type})
      : $type = $type ?? 'dizzy',
        super._();

  factory _$AvataaarTypeEyesDizzy.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesDizzyFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.dizzy()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeEyesDizzy);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return dizzy();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return dizzy?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (dizzy != null) {
      return dizzy();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return dizzy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return dizzy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (dizzy != null) {
      return dizzy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesDizzyToJson(this);
  }
}

abstract class AvataaarTypeEyesDizzy extends AvataaarEyes {
  const factory AvataaarTypeEyesDizzy() = _$AvataaarTypeEyesDizzy;
  const AvataaarTypeEyesDizzy._() : super._();

  factory AvataaarTypeEyesDizzy.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesDizzy.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyesEyeRollCopyWith<$Res> {
  factory $AvataaarTypeEyesEyeRollCopyWith(AvataaarTypeEyesEyeRoll value,
          $Res Function(AvataaarTypeEyesEyeRoll) then) =
      _$AvataaarTypeEyesEyeRollCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesEyeRollCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesEyeRollCopyWith<$Res> {
  _$AvataaarTypeEyesEyeRollCopyWithImpl(AvataaarTypeEyesEyeRoll _value,
      $Res Function(AvataaarTypeEyesEyeRoll) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesEyeRoll));

  @override
  AvataaarTypeEyesEyeRoll get _value => super._value as AvataaarTypeEyesEyeRoll;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesEyeRoll extends AvataaarTypeEyesEyeRoll {
  const _$AvataaarTypeEyesEyeRoll({String? $type})
      : $type = $type ?? 'eyeRoll',
        super._();

  factory _$AvataaarTypeEyesEyeRoll.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesEyeRollFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.eyeRoll()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeEyesEyeRoll);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return eyeRoll();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return eyeRoll?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (eyeRoll != null) {
      return eyeRoll();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return eyeRoll(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return eyeRoll?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (eyeRoll != null) {
      return eyeRoll(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesEyeRollToJson(this);
  }
}

abstract class AvataaarTypeEyesEyeRoll extends AvataaarEyes {
  const factory AvataaarTypeEyesEyeRoll() = _$AvataaarTypeEyesEyeRoll;
  const AvataaarTypeEyesEyeRoll._() : super._();

  factory AvataaarTypeEyesEyeRoll.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesEyeRoll.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyesHappyCopyWith<$Res> {
  factory $AvataaarTypeEyesHappyCopyWith(AvataaarTypeEyesHappy value,
          $Res Function(AvataaarTypeEyesHappy) then) =
      _$AvataaarTypeEyesHappyCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesHappyCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesHappyCopyWith<$Res> {
  _$AvataaarTypeEyesHappyCopyWithImpl(
      AvataaarTypeEyesHappy _value, $Res Function(AvataaarTypeEyesHappy) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesHappy));

  @override
  AvataaarTypeEyesHappy get _value => super._value as AvataaarTypeEyesHappy;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesHappy extends AvataaarTypeEyesHappy {
  const _$AvataaarTypeEyesHappy({String? $type})
      : $type = $type ?? 'happy',
        super._();

  factory _$AvataaarTypeEyesHappy.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesHappyFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.happy()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeEyesHappy);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return happy();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return happy?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (happy != null) {
      return happy();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return happy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return happy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (happy != null) {
      return happy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesHappyToJson(this);
  }
}

abstract class AvataaarTypeEyesHappy extends AvataaarEyes {
  const factory AvataaarTypeEyesHappy() = _$AvataaarTypeEyesHappy;
  const AvataaarTypeEyesHappy._() : super._();

  factory AvataaarTypeEyesHappy.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesHappy.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyesHeartsCopyWith<$Res> {
  factory $AvataaarTypeEyesHeartsCopyWith(AvataaarTypeEyesHearts value,
          $Res Function(AvataaarTypeEyesHearts) then) =
      _$AvataaarTypeEyesHeartsCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesHeartsCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesHeartsCopyWith<$Res> {
  _$AvataaarTypeEyesHeartsCopyWithImpl(AvataaarTypeEyesHearts _value,
      $Res Function(AvataaarTypeEyesHearts) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesHearts));

  @override
  AvataaarTypeEyesHearts get _value => super._value as AvataaarTypeEyesHearts;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesHearts extends AvataaarTypeEyesHearts {
  const _$AvataaarTypeEyesHearts({String? $type})
      : $type = $type ?? 'hearts',
        super._();

  factory _$AvataaarTypeEyesHearts.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesHeartsFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.hearts()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeEyesHearts);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return hearts();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return hearts?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (hearts != null) {
      return hearts();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return hearts(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return hearts?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (hearts != null) {
      return hearts(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesHeartsToJson(this);
  }
}

abstract class AvataaarTypeEyesHearts extends AvataaarEyes {
  const factory AvataaarTypeEyesHearts() = _$AvataaarTypeEyesHearts;
  const AvataaarTypeEyesHearts._() : super._();

  factory AvataaarTypeEyesHearts.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesHearts.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyesSideCopyWith<$Res> {
  factory $AvataaarTypeEyesSideCopyWith(AvataaarTypeEyesSide value,
          $Res Function(AvataaarTypeEyesSide) then) =
      _$AvataaarTypeEyesSideCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesSideCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesSideCopyWith<$Res> {
  _$AvataaarTypeEyesSideCopyWithImpl(
      AvataaarTypeEyesSide _value, $Res Function(AvataaarTypeEyesSide) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesSide));

  @override
  AvataaarTypeEyesSide get _value => super._value as AvataaarTypeEyesSide;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesSide extends AvataaarTypeEyesSide {
  const _$AvataaarTypeEyesSide({String? $type})
      : $type = $type ?? 'side',
        super._();

  factory _$AvataaarTypeEyesSide.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesSideFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.side()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeEyesSide);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return side();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return side?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (side != null) {
      return side();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return side(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return side?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (side != null) {
      return side(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesSideToJson(this);
  }
}

abstract class AvataaarTypeEyesSide extends AvataaarEyes {
  const factory AvataaarTypeEyesSide() = _$AvataaarTypeEyesSide;
  const AvataaarTypeEyesSide._() : super._();

  factory AvataaarTypeEyesSide.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesSide.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyesSurprisedCopyWith<$Res> {
  factory $AvataaarTypeEyesSurprisedCopyWith(AvataaarTypeEyesSurprised value,
          $Res Function(AvataaarTypeEyesSurprised) then) =
      _$AvataaarTypeEyesSurprisedCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesSurprisedCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesSurprisedCopyWith<$Res> {
  _$AvataaarTypeEyesSurprisedCopyWithImpl(AvataaarTypeEyesSurprised _value,
      $Res Function(AvataaarTypeEyesSurprised) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesSurprised));

  @override
  AvataaarTypeEyesSurprised get _value =>
      super._value as AvataaarTypeEyesSurprised;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesSurprised extends AvataaarTypeEyesSurprised {
  const _$AvataaarTypeEyesSurprised({String? $type})
      : $type = $type ?? 'surprised',
        super._();

  factory _$AvataaarTypeEyesSurprised.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesSurprisedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.surprised()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyesSurprised);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return surprised();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return surprised?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (surprised != null) {
      return surprised();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return surprised(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return surprised?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (surprised != null) {
      return surprised(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesSurprisedToJson(this);
  }
}

abstract class AvataaarTypeEyesSurprised extends AvataaarEyes {
  const factory AvataaarTypeEyesSurprised() = _$AvataaarTypeEyesSurprised;
  const AvataaarTypeEyesSurprised._() : super._();

  factory AvataaarTypeEyesSurprised.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesSurprised.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyesWinkCopyWith<$Res> {
  factory $AvataaarTypeEyesWinkCopyWith(AvataaarTypeEyesWink value,
          $Res Function(AvataaarTypeEyesWink) then) =
      _$AvataaarTypeEyesWinkCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesWinkCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesWinkCopyWith<$Res> {
  _$AvataaarTypeEyesWinkCopyWithImpl(
      AvataaarTypeEyesWink _value, $Res Function(AvataaarTypeEyesWink) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesWink));

  @override
  AvataaarTypeEyesWink get _value => super._value as AvataaarTypeEyesWink;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesWink extends AvataaarTypeEyesWink {
  const _$AvataaarTypeEyesWink({String? $type})
      : $type = $type ?? 'wink',
        super._();

  factory _$AvataaarTypeEyesWink.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesWinkFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.wink()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeEyesWink);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return wink();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return wink?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (wink != null) {
      return wink();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return wink(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return wink?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (wink != null) {
      return wink(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesWinkToJson(this);
  }
}

abstract class AvataaarTypeEyesWink extends AvataaarEyes {
  const factory AvataaarTypeEyesWink() = _$AvataaarTypeEyesWink;
  const AvataaarTypeEyesWink._() : super._();

  factory AvataaarTypeEyesWink.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesWink.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyesWinkWackyCopyWith<$Res> {
  factory $AvataaarTypeEyesWinkWackyCopyWith(AvataaarTypeEyesWinkWacky value,
          $Res Function(AvataaarTypeEyesWinkWacky) then) =
      _$AvataaarTypeEyesWinkWackyCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesWinkWackyCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesWinkWackyCopyWith<$Res> {
  _$AvataaarTypeEyesWinkWackyCopyWithImpl(AvataaarTypeEyesWinkWacky _value,
      $Res Function(AvataaarTypeEyesWinkWacky) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesWinkWacky));

  @override
  AvataaarTypeEyesWinkWacky get _value =>
      super._value as AvataaarTypeEyesWinkWacky;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesWinkWacky extends AvataaarTypeEyesWinkWacky {
  const _$AvataaarTypeEyesWinkWacky({String? $type})
      : $type = $type ?? 'winkWacky',
        super._();

  factory _$AvataaarTypeEyesWinkWacky.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesWinkWackyFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.winkWacky()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyesWinkWacky);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return winkWacky();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return winkWacky?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (winkWacky != null) {
      return winkWacky();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return winkWacky(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return winkWacky?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (winkWacky != null) {
      return winkWacky(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesWinkWackyToJson(this);
  }
}

abstract class AvataaarTypeEyesWinkWacky extends AvataaarEyes {
  const factory AvataaarTypeEyesWinkWacky() = _$AvataaarTypeEyesWinkWacky;
  const AvataaarTypeEyesWinkWacky._() : super._();

  factory AvataaarTypeEyesWinkWacky.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesWinkWacky.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyesSquintCopyWith<$Res> {
  factory $AvataaarTypeEyesSquintCopyWith(AvataaarTypeEyesSquint value,
          $Res Function(AvataaarTypeEyesSquint) then) =
      _$AvataaarTypeEyesSquintCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyesSquintCopyWithImpl<$Res>
    extends _$AvataaarEyesCopyWithImpl<$Res>
    implements $AvataaarTypeEyesSquintCopyWith<$Res> {
  _$AvataaarTypeEyesSquintCopyWithImpl(AvataaarTypeEyesSquint _value,
      $Res Function(AvataaarTypeEyesSquint) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyesSquint));

  @override
  AvataaarTypeEyesSquint get _value => super._value as AvataaarTypeEyesSquint;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyesSquint extends AvataaarTypeEyesSquint {
  const _$AvataaarTypeEyesSquint({String? $type})
      : $type = $type ?? 'squint',
        super._();

  factory _$AvataaarTypeEyesSquint.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyesSquintFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyes.squint()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeEyesSquint);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() closed,
    required TResult Function() cry,
    required TResult Function() default0,
    required TResult Function() dizzy,
    required TResult Function() eyeRoll,
    required TResult Function() happy,
    required TResult Function() hearts,
    required TResult Function() side,
    required TResult Function() surprised,
    required TResult Function() wink,
    required TResult Function() winkWacky,
    required TResult Function() squint,
  }) {
    return squint();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
  }) {
    return squint?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? closed,
    TResult Function()? cry,
    TResult Function()? default0,
    TResult Function()? dizzy,
    TResult Function()? eyeRoll,
    TResult Function()? happy,
    TResult Function()? hearts,
    TResult Function()? side,
    TResult Function()? surprised,
    TResult Function()? wink,
    TResult Function()? winkWacky,
    TResult Function()? squint,
    required TResult orElse(),
  }) {
    if (squint != null) {
      return squint();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyesClosed value) closed,
    required TResult Function(AvataaarTypeEyesCry value) cry,
    required TResult Function(AvataaarTypeEyesDefault0 value) default0,
    required TResult Function(AvataaarTypeEyesDizzy value) dizzy,
    required TResult Function(AvataaarTypeEyesEyeRoll value) eyeRoll,
    required TResult Function(AvataaarTypeEyesHappy value) happy,
    required TResult Function(AvataaarTypeEyesHearts value) hearts,
    required TResult Function(AvataaarTypeEyesSide value) side,
    required TResult Function(AvataaarTypeEyesSurprised value) surprised,
    required TResult Function(AvataaarTypeEyesWink value) wink,
    required TResult Function(AvataaarTypeEyesWinkWacky value) winkWacky,
    required TResult Function(AvataaarTypeEyesSquint value) squint,
  }) {
    return squint(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
  }) {
    return squint?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyesClosed value)? closed,
    TResult Function(AvataaarTypeEyesCry value)? cry,
    TResult Function(AvataaarTypeEyesDefault0 value)? default0,
    TResult Function(AvataaarTypeEyesDizzy value)? dizzy,
    TResult Function(AvataaarTypeEyesEyeRoll value)? eyeRoll,
    TResult Function(AvataaarTypeEyesHappy value)? happy,
    TResult Function(AvataaarTypeEyesHearts value)? hearts,
    TResult Function(AvataaarTypeEyesSide value)? side,
    TResult Function(AvataaarTypeEyesSurprised value)? surprised,
    TResult Function(AvataaarTypeEyesWink value)? wink,
    TResult Function(AvataaarTypeEyesWinkWacky value)? winkWacky,
    TResult Function(AvataaarTypeEyesSquint value)? squint,
    required TResult orElse(),
  }) {
    if (squint != null) {
      return squint(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyesSquintToJson(this);
  }
}

abstract class AvataaarTypeEyesSquint extends AvataaarEyes {
  const factory AvataaarTypeEyesSquint() = _$AvataaarTypeEyesSquint;
  const AvataaarTypeEyesSquint._() : super._();

  factory AvataaarTypeEyesSquint.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyesSquint.fromJson;
}

AvataaarAccessories _$AvataaarAccessoriesFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'blank':
      return AvataaarTypeAccessoriesBlank.fromJson(json);
    case 'kurt':
      return AvataaarTypeAccessoriesKurt.fromJson(json);
    case 'prescription01':
      return AvataaarTypeAccessoriesPrescription01.fromJson(json);
    case 'prescription02':
      return AvataaarTypeAccessoriesPrescription02.fromJson(json);
    case 'round':
      return AvataaarTypeAccessoriesRound.fromJson(json);
    case 'sunglasses':
      return AvataaarTypeAccessoriesSunglasses.fromJson(json);
    case 'wayfarers':
      return AvataaarTypeAccessoriesWayfarers.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarAccessories',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarAccessoriesTearOff {
  const _$AvataaarAccessoriesTearOff();

  AvataaarTypeAccessoriesBlank blank() {
    return const AvataaarTypeAccessoriesBlank();
  }

  AvataaarTypeAccessoriesKurt kurt() {
    return const AvataaarTypeAccessoriesKurt();
  }

  AvataaarTypeAccessoriesPrescription01 prescription01() {
    return const AvataaarTypeAccessoriesPrescription01();
  }

  AvataaarTypeAccessoriesPrescription02 prescription02() {
    return const AvataaarTypeAccessoriesPrescription02();
  }

  AvataaarTypeAccessoriesRound round() {
    return const AvataaarTypeAccessoriesRound();
  }

  AvataaarTypeAccessoriesSunglasses sunglasses() {
    return const AvataaarTypeAccessoriesSunglasses();
  }

  AvataaarTypeAccessoriesWayfarers wayfarers() {
    return const AvataaarTypeAccessoriesWayfarers();
  }

  AvataaarAccessories fromJson(Map<String, Object?> json) {
    return AvataaarAccessories.fromJson(json);
  }
}

/// @nodoc
const $AvataaarAccessories = _$AvataaarAccessoriesTearOff();

/// @nodoc
mixin _$AvataaarAccessories {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarAccessoriesCopyWith<$Res> {
  factory $AvataaarAccessoriesCopyWith(
          AvataaarAccessories value, $Res Function(AvataaarAccessories) then) =
      _$AvataaarAccessoriesCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements $AvataaarAccessoriesCopyWith<$Res> {
  _$AvataaarAccessoriesCopyWithImpl(this._value, this._then);

  final AvataaarAccessories _value;
  // ignore: unused_field
  final $Res Function(AvataaarAccessories) _then;
}

/// @nodoc
abstract class $AvataaarTypeAccessoriesBlankCopyWith<$Res> {
  factory $AvataaarTypeAccessoriesBlankCopyWith(
          AvataaarTypeAccessoriesBlank value,
          $Res Function(AvataaarTypeAccessoriesBlank) then) =
      _$AvataaarTypeAccessoriesBlankCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeAccessoriesBlankCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements $AvataaarTypeAccessoriesBlankCopyWith<$Res> {
  _$AvataaarTypeAccessoriesBlankCopyWithImpl(
      AvataaarTypeAccessoriesBlank _value,
      $Res Function(AvataaarTypeAccessoriesBlank) _then)
      : super(_value, (v) => _then(v as AvataaarTypeAccessoriesBlank));

  @override
  AvataaarTypeAccessoriesBlank get _value =>
      super._value as AvataaarTypeAccessoriesBlank;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesBlank extends AvataaarTypeAccessoriesBlank {
  const _$AvataaarTypeAccessoriesBlank({String? $type})
      : $type = $type ?? 'blank',
        super._();

  factory _$AvataaarTypeAccessoriesBlank.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesBlankFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.blank()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeAccessoriesBlank);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return blank();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return blank?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return blank(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return blank?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesBlankToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesBlank extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesBlank() = _$AvataaarTypeAccessoriesBlank;
  const AvataaarTypeAccessoriesBlank._() : super._();

  factory AvataaarTypeAccessoriesBlank.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesBlank.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeAccessoriesKurtCopyWith<$Res> {
  factory $AvataaarTypeAccessoriesKurtCopyWith(
          AvataaarTypeAccessoriesKurt value,
          $Res Function(AvataaarTypeAccessoriesKurt) then) =
      _$AvataaarTypeAccessoriesKurtCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeAccessoriesKurtCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements $AvataaarTypeAccessoriesKurtCopyWith<$Res> {
  _$AvataaarTypeAccessoriesKurtCopyWithImpl(AvataaarTypeAccessoriesKurt _value,
      $Res Function(AvataaarTypeAccessoriesKurt) _then)
      : super(_value, (v) => _then(v as AvataaarTypeAccessoriesKurt));

  @override
  AvataaarTypeAccessoriesKurt get _value =>
      super._value as AvataaarTypeAccessoriesKurt;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesKurt extends AvataaarTypeAccessoriesKurt {
  const _$AvataaarTypeAccessoriesKurt({String? $type})
      : $type = $type ?? 'kurt',
        super._();

  factory _$AvataaarTypeAccessoriesKurt.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesKurtFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.kurt()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeAccessoriesKurt);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return kurt();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return kurt?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (kurt != null) {
      return kurt();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return kurt(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return kurt?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (kurt != null) {
      return kurt(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesKurtToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesKurt extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesKurt() = _$AvataaarTypeAccessoriesKurt;
  const AvataaarTypeAccessoriesKurt._() : super._();

  factory AvataaarTypeAccessoriesKurt.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesKurt.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeAccessoriesPrescription01CopyWith<$Res> {
  factory $AvataaarTypeAccessoriesPrescription01CopyWith(
          AvataaarTypeAccessoriesPrescription01 value,
          $Res Function(AvataaarTypeAccessoriesPrescription01) then) =
      _$AvataaarTypeAccessoriesPrescription01CopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeAccessoriesPrescription01CopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements $AvataaarTypeAccessoriesPrescription01CopyWith<$Res> {
  _$AvataaarTypeAccessoriesPrescription01CopyWithImpl(
      AvataaarTypeAccessoriesPrescription01 _value,
      $Res Function(AvataaarTypeAccessoriesPrescription01) _then)
      : super(_value, (v) => _then(v as AvataaarTypeAccessoriesPrescription01));

  @override
  AvataaarTypeAccessoriesPrescription01 get _value =>
      super._value as AvataaarTypeAccessoriesPrescription01;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesPrescription01
    extends AvataaarTypeAccessoriesPrescription01 {
  const _$AvataaarTypeAccessoriesPrescription01({String? $type})
      : $type = $type ?? 'prescription01',
        super._();

  factory _$AvataaarTypeAccessoriesPrescription01.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesPrescription01FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.prescription01()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeAccessoriesPrescription01);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return prescription01();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return prescription01?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription01 != null) {
      return prescription01();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return prescription01(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return prescription01?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription01 != null) {
      return prescription01(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesPrescription01ToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesPrescription01
    extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesPrescription01() =
      _$AvataaarTypeAccessoriesPrescription01;
  const AvataaarTypeAccessoriesPrescription01._() : super._();

  factory AvataaarTypeAccessoriesPrescription01.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesPrescription01.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeAccessoriesPrescription02CopyWith<$Res> {
  factory $AvataaarTypeAccessoriesPrescription02CopyWith(
          AvataaarTypeAccessoriesPrescription02 value,
          $Res Function(AvataaarTypeAccessoriesPrescription02) then) =
      _$AvataaarTypeAccessoriesPrescription02CopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeAccessoriesPrescription02CopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements $AvataaarTypeAccessoriesPrescription02CopyWith<$Res> {
  _$AvataaarTypeAccessoriesPrescription02CopyWithImpl(
      AvataaarTypeAccessoriesPrescription02 _value,
      $Res Function(AvataaarTypeAccessoriesPrescription02) _then)
      : super(_value, (v) => _then(v as AvataaarTypeAccessoriesPrescription02));

  @override
  AvataaarTypeAccessoriesPrescription02 get _value =>
      super._value as AvataaarTypeAccessoriesPrescription02;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesPrescription02
    extends AvataaarTypeAccessoriesPrescription02 {
  const _$AvataaarTypeAccessoriesPrescription02({String? $type})
      : $type = $type ?? 'prescription02',
        super._();

  factory _$AvataaarTypeAccessoriesPrescription02.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesPrescription02FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.prescription02()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeAccessoriesPrescription02);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return prescription02();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return prescription02?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription02 != null) {
      return prescription02();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return prescription02(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return prescription02?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (prescription02 != null) {
      return prescription02(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesPrescription02ToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesPrescription02
    extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesPrescription02() =
      _$AvataaarTypeAccessoriesPrescription02;
  const AvataaarTypeAccessoriesPrescription02._() : super._();

  factory AvataaarTypeAccessoriesPrescription02.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesPrescription02.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeAccessoriesRoundCopyWith<$Res> {
  factory $AvataaarTypeAccessoriesRoundCopyWith(
          AvataaarTypeAccessoriesRound value,
          $Res Function(AvataaarTypeAccessoriesRound) then) =
      _$AvataaarTypeAccessoriesRoundCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeAccessoriesRoundCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements $AvataaarTypeAccessoriesRoundCopyWith<$Res> {
  _$AvataaarTypeAccessoriesRoundCopyWithImpl(
      AvataaarTypeAccessoriesRound _value,
      $Res Function(AvataaarTypeAccessoriesRound) _then)
      : super(_value, (v) => _then(v as AvataaarTypeAccessoriesRound));

  @override
  AvataaarTypeAccessoriesRound get _value =>
      super._value as AvataaarTypeAccessoriesRound;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesRound extends AvataaarTypeAccessoriesRound {
  const _$AvataaarTypeAccessoriesRound({String? $type})
      : $type = $type ?? 'round',
        super._();

  factory _$AvataaarTypeAccessoriesRound.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesRoundFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.round()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeAccessoriesRound);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return round();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return round?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (round != null) {
      return round();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return round(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return round?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (round != null) {
      return round(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesRoundToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesRound extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesRound() = _$AvataaarTypeAccessoriesRound;
  const AvataaarTypeAccessoriesRound._() : super._();

  factory AvataaarTypeAccessoriesRound.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesRound.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeAccessoriesSunglassesCopyWith<$Res> {
  factory $AvataaarTypeAccessoriesSunglassesCopyWith(
          AvataaarTypeAccessoriesSunglasses value,
          $Res Function(AvataaarTypeAccessoriesSunglasses) then) =
      _$AvataaarTypeAccessoriesSunglassesCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeAccessoriesSunglassesCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements $AvataaarTypeAccessoriesSunglassesCopyWith<$Res> {
  _$AvataaarTypeAccessoriesSunglassesCopyWithImpl(
      AvataaarTypeAccessoriesSunglasses _value,
      $Res Function(AvataaarTypeAccessoriesSunglasses) _then)
      : super(_value, (v) => _then(v as AvataaarTypeAccessoriesSunglasses));

  @override
  AvataaarTypeAccessoriesSunglasses get _value =>
      super._value as AvataaarTypeAccessoriesSunglasses;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesSunglasses
    extends AvataaarTypeAccessoriesSunglasses {
  const _$AvataaarTypeAccessoriesSunglasses({String? $type})
      : $type = $type ?? 'sunglasses',
        super._();

  factory _$AvataaarTypeAccessoriesSunglasses.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesSunglassesFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.sunglasses()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeAccessoriesSunglasses);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return sunglasses();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return sunglasses?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (sunglasses != null) {
      return sunglasses();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return sunglasses(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return sunglasses?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (sunglasses != null) {
      return sunglasses(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesSunglassesToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesSunglasses extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesSunglasses() =
      _$AvataaarTypeAccessoriesSunglasses;
  const AvataaarTypeAccessoriesSunglasses._() : super._();

  factory AvataaarTypeAccessoriesSunglasses.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeAccessoriesSunglasses.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeAccessoriesWayfarersCopyWith<$Res> {
  factory $AvataaarTypeAccessoriesWayfarersCopyWith(
          AvataaarTypeAccessoriesWayfarers value,
          $Res Function(AvataaarTypeAccessoriesWayfarers) then) =
      _$AvataaarTypeAccessoriesWayfarersCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeAccessoriesWayfarersCopyWithImpl<$Res>
    extends _$AvataaarAccessoriesCopyWithImpl<$Res>
    implements $AvataaarTypeAccessoriesWayfarersCopyWith<$Res> {
  _$AvataaarTypeAccessoriesWayfarersCopyWithImpl(
      AvataaarTypeAccessoriesWayfarers _value,
      $Res Function(AvataaarTypeAccessoriesWayfarers) _then)
      : super(_value, (v) => _then(v as AvataaarTypeAccessoriesWayfarers));

  @override
  AvataaarTypeAccessoriesWayfarers get _value =>
      super._value as AvataaarTypeAccessoriesWayfarers;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeAccessoriesWayfarers
    extends AvataaarTypeAccessoriesWayfarers {
  const _$AvataaarTypeAccessoriesWayfarers({String? $type})
      : $type = $type ?? 'wayfarers',
        super._();

  factory _$AvataaarTypeAccessoriesWayfarers.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeAccessoriesWayfarersFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarAccessories.wayfarers()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeAccessoriesWayfarers);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() blank,
    required TResult Function() kurt,
    required TResult Function() prescription01,
    required TResult Function() prescription02,
    required TResult Function() round,
    required TResult Function() sunglasses,
    required TResult Function() wayfarers,
  }) {
    return wayfarers();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
  }) {
    return wayfarers?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? blank,
    TResult Function()? kurt,
    TResult Function()? prescription01,
    TResult Function()? prescription02,
    TResult Function()? round,
    TResult Function()? sunglasses,
    TResult Function()? wayfarers,
    required TResult orElse(),
  }) {
    if (wayfarers != null) {
      return wayfarers();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeAccessoriesBlank value) blank,
    required TResult Function(AvataaarTypeAccessoriesKurt value) kurt,
    required TResult Function(AvataaarTypeAccessoriesPrescription01 value)
        prescription01,
    required TResult Function(AvataaarTypeAccessoriesPrescription02 value)
        prescription02,
    required TResult Function(AvataaarTypeAccessoriesRound value) round,
    required TResult Function(AvataaarTypeAccessoriesSunglasses value)
        sunglasses,
    required TResult Function(AvataaarTypeAccessoriesWayfarers value) wayfarers,
  }) {
    return wayfarers(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
  }) {
    return wayfarers?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeAccessoriesBlank value)? blank,
    TResult Function(AvataaarTypeAccessoriesKurt value)? kurt,
    TResult Function(AvataaarTypeAccessoriesPrescription01 value)?
        prescription01,
    TResult Function(AvataaarTypeAccessoriesPrescription02 value)?
        prescription02,
    TResult Function(AvataaarTypeAccessoriesRound value)? round,
    TResult Function(AvataaarTypeAccessoriesSunglasses value)? sunglasses,
    TResult Function(AvataaarTypeAccessoriesWayfarers value)? wayfarers,
    required TResult orElse(),
  }) {
    if (wayfarers != null) {
      return wayfarers(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeAccessoriesWayfarersToJson(this);
  }
}

abstract class AvataaarTypeAccessoriesWayfarers extends AvataaarAccessories {
  const factory AvataaarTypeAccessoriesWayfarers() =
      _$AvataaarTypeAccessoriesWayfarers;
  const AvataaarTypeAccessoriesWayfarers._() : super._();

  factory AvataaarTypeAccessoriesWayfarers.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeAccessoriesWayfarers.fromJson;
}

AvataaarClothes _$AvataaarClothesFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'blazerShirt':
      return AvataaarTypeClothesBlazerShirt.fromJson(json);
    case 'blazerSweater':
      return AvataaarTypeClothesBlazerSweater.fromJson(json);
    case 'collarSweater':
      return AvataaarTypeClothesColarSweater.fromJson(json);
    case 'graphicShirt':
      return AvataaarTypeClothesGraphicShirt.fromJson(json);
    case 'hoodie':
      return AvataaarTypeClothesHoodie.fromJson(json);
    case 'overall':
      return AvataaarTypeClothesOverall.fromJson(json);
    case 'shirtCrewNeck':
      return AvataaarTypeClothesShirtCrewNeck.fromJson(json);
    case 'shirtScoopNeck':
      return AvataaarTypeClothesShirtScoopNeck.fromJson(json);
    case 'shirtVNeck':
      return AvataaarTypeClothesShirtVNeck.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarClothes',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarClothesTearOff {
  const _$AvataaarClothesTearOff();

  AvataaarTypeClothesBlazerShirt blazerShirt(
      [@ColorSerialiser() Color color = Colors.black]) {
    return AvataaarTypeClothesBlazerShirt(
      color,
    );
  }

  AvataaarTypeClothesBlazerSweater blazerSweater(
      [@ColorSerialiser() Color color = Colors.black]) {
    return AvataaarTypeClothesBlazerSweater(
      color,
    );
  }

  AvataaarTypeClothesColarSweater collarSweater(
      [@ColorSerialiser() Color color = AvataaarClothes._defaultColor]) {
    return AvataaarTypeClothesColarSweater(
      color,
    );
  }

  AvataaarTypeClothesGraphicShirt graphicShirt(
      [@ColorSerialiser() Color color = AvataaarClothes._defaultColor]) {
    return AvataaarTypeClothesGraphicShirt(
      color,
    );
  }

  AvataaarTypeClothesHoodie hoodie(
      [@ColorSerialiser() Color color = AvataaarClothes._defaultColor]) {
    return AvataaarTypeClothesHoodie(
      color,
    );
  }

  AvataaarTypeClothesOverall overall(
      [@ColorSerialiser() Color color = AvataaarClothes._defaultColor]) {
    return AvataaarTypeClothesOverall(
      color,
    );
  }

  AvataaarTypeClothesShirtCrewNeck shirtCrewNeck(
      [@ColorSerialiser() Color color = AvataaarClothes._defaultColor]) {
    return AvataaarTypeClothesShirtCrewNeck(
      color,
    );
  }

  AvataaarTypeClothesShirtScoopNeck shirtScoopNeck(
      [@ColorSerialiser() Color color = AvataaarClothes._defaultColor]) {
    return AvataaarTypeClothesShirtScoopNeck(
      color,
    );
  }

  AvataaarTypeClothesShirtVNeck shirtVNeck(
      [@ColorSerialiser() Color color = AvataaarClothes._defaultColor]) {
    return AvataaarTypeClothesShirtVNeck(
      color,
    );
  }

  AvataaarClothes fromJson(Map<String, Object?> json) {
    return AvataaarClothes.fromJson(json);
  }
}

/// @nodoc
const $AvataaarClothes = _$AvataaarClothesTearOff();

/// @nodoc
mixin _$AvataaarClothes {
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;

  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $AvataaarClothesCopyWith<AvataaarClothes> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarClothesCopyWith(
          AvataaarClothes value, $Res Function(AvataaarClothes) then) =
      _$AvataaarClothesCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  _$AvataaarClothesCopyWithImpl(this._value, this._then);

  final AvataaarClothes _value;
  // ignore: unused_field
  final $Res Function(AvataaarClothes) _then;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_value.copyWith(
      color: color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
abstract class $AvataaarTypeClothesBlazerShirtCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarTypeClothesBlazerShirtCopyWith(
          AvataaarTypeClothesBlazerShirt value,
          $Res Function(AvataaarTypeClothesBlazerShirt) then) =
      _$AvataaarTypeClothesBlazerShirtCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeClothesBlazerShirtCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarTypeClothesBlazerShirtCopyWith<$Res> {
  _$AvataaarTypeClothesBlazerShirtCopyWithImpl(
      AvataaarTypeClothesBlazerShirt _value,
      $Res Function(AvataaarTypeClothesBlazerShirt) _then)
      : super(_value, (v) => _then(v as AvataaarTypeClothesBlazerShirt));

  @override
  AvataaarTypeClothesBlazerShirt get _value =>
      super._value as AvataaarTypeClothesBlazerShirt;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeClothesBlazerShirt(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesBlazerShirt extends AvataaarTypeClothesBlazerShirt {
  const _$AvataaarTypeClothesBlazerShirt(
      [@ColorSerialiser() this.color = Colors.black, String? $type])
      : $type = $type ?? 'blazerShirt',
        super._();

  factory _$AvataaarTypeClothesBlazerShirt.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesBlazerShirtFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.blazerShirt(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeClothesBlazerShirt &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeClothesBlazerShirtCopyWith<AvataaarTypeClothesBlazerShirt>
      get copyWith => _$AvataaarTypeClothesBlazerShirtCopyWithImpl<
          AvataaarTypeClothesBlazerShirt>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return blazerShirt(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return blazerShirt?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerShirt != null) {
      return blazerShirt(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return blazerShirt(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return blazerShirt?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerShirt != null) {
      return blazerShirt(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesBlazerShirtToJson(this);
  }
}

abstract class AvataaarTypeClothesBlazerShirt extends AvataaarClothes {
  const factory AvataaarTypeClothesBlazerShirt(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeClothesBlazerShirt;
  const AvataaarTypeClothesBlazerShirt._() : super._();

  factory AvataaarTypeClothesBlazerShirt.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesBlazerShirt.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeClothesBlazerShirtCopyWith<AvataaarTypeClothesBlazerShirt>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeClothesBlazerSweaterCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarTypeClothesBlazerSweaterCopyWith(
          AvataaarTypeClothesBlazerSweater value,
          $Res Function(AvataaarTypeClothesBlazerSweater) then) =
      _$AvataaarTypeClothesBlazerSweaterCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeClothesBlazerSweaterCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarTypeClothesBlazerSweaterCopyWith<$Res> {
  _$AvataaarTypeClothesBlazerSweaterCopyWithImpl(
      AvataaarTypeClothesBlazerSweater _value,
      $Res Function(AvataaarTypeClothesBlazerSweater) _then)
      : super(_value, (v) => _then(v as AvataaarTypeClothesBlazerSweater));

  @override
  AvataaarTypeClothesBlazerSweater get _value =>
      super._value as AvataaarTypeClothesBlazerSweater;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeClothesBlazerSweater(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesBlazerSweater
    extends AvataaarTypeClothesBlazerSweater {
  const _$AvataaarTypeClothesBlazerSweater(
      [@ColorSerialiser() this.color = Colors.black, String? $type])
      : $type = $type ?? 'blazerSweater',
        super._();

  factory _$AvataaarTypeClothesBlazerSweater.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesBlazerSweaterFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.blazerSweater(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeClothesBlazerSweater &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeClothesBlazerSweaterCopyWith<AvataaarTypeClothesBlazerSweater>
      get copyWith => _$AvataaarTypeClothesBlazerSweaterCopyWithImpl<
          AvataaarTypeClothesBlazerSweater>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return blazerSweater(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return blazerSweater?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerSweater != null) {
      return blazerSweater(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return blazerSweater(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return blazerSweater?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (blazerSweater != null) {
      return blazerSweater(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesBlazerSweaterToJson(this);
  }
}

abstract class AvataaarTypeClothesBlazerSweater extends AvataaarClothes {
  const factory AvataaarTypeClothesBlazerSweater(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeClothesBlazerSweater;
  const AvataaarTypeClothesBlazerSweater._() : super._();

  factory AvataaarTypeClothesBlazerSweater.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesBlazerSweater.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeClothesBlazerSweaterCopyWith<AvataaarTypeClothesBlazerSweater>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeClothesColarSweaterCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarTypeClothesColarSweaterCopyWith(
          AvataaarTypeClothesColarSweater value,
          $Res Function(AvataaarTypeClothesColarSweater) then) =
      _$AvataaarTypeClothesColarSweaterCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeClothesColarSweaterCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarTypeClothesColarSweaterCopyWith<$Res> {
  _$AvataaarTypeClothesColarSweaterCopyWithImpl(
      AvataaarTypeClothesColarSweater _value,
      $Res Function(AvataaarTypeClothesColarSweater) _then)
      : super(_value, (v) => _then(v as AvataaarTypeClothesColarSweater));

  @override
  AvataaarTypeClothesColarSweater get _value =>
      super._value as AvataaarTypeClothesColarSweater;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeClothesColarSweater(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesColarSweater
    extends AvataaarTypeClothesColarSweater {
  const _$AvataaarTypeClothesColarSweater(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      String? $type])
      : $type = $type ?? 'collarSweater',
        super._();

  factory _$AvataaarTypeClothesColarSweater.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesColarSweaterFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.collarSweater(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeClothesColarSweater &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeClothesColarSweaterCopyWith<AvataaarTypeClothesColarSweater>
      get copyWith => _$AvataaarTypeClothesColarSweaterCopyWithImpl<
          AvataaarTypeClothesColarSweater>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return collarSweater(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return collarSweater?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (collarSweater != null) {
      return collarSweater(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return collarSweater(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return collarSweater?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (collarSweater != null) {
      return collarSweater(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesColarSweaterToJson(this);
  }
}

abstract class AvataaarTypeClothesColarSweater extends AvataaarClothes {
  const factory AvataaarTypeClothesColarSweater(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeClothesColarSweater;
  const AvataaarTypeClothesColarSweater._() : super._();

  factory AvataaarTypeClothesColarSweater.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesColarSweater.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeClothesColarSweaterCopyWith<AvataaarTypeClothesColarSweater>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeClothesGraphicShirtCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarTypeClothesGraphicShirtCopyWith(
          AvataaarTypeClothesGraphicShirt value,
          $Res Function(AvataaarTypeClothesGraphicShirt) then) =
      _$AvataaarTypeClothesGraphicShirtCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeClothesGraphicShirtCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarTypeClothesGraphicShirtCopyWith<$Res> {
  _$AvataaarTypeClothesGraphicShirtCopyWithImpl(
      AvataaarTypeClothesGraphicShirt _value,
      $Res Function(AvataaarTypeClothesGraphicShirt) _then)
      : super(_value, (v) => _then(v as AvataaarTypeClothesGraphicShirt));

  @override
  AvataaarTypeClothesGraphicShirt get _value =>
      super._value as AvataaarTypeClothesGraphicShirt;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeClothesGraphicShirt(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesGraphicShirt
    extends AvataaarTypeClothesGraphicShirt {
  const _$AvataaarTypeClothesGraphicShirt(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      String? $type])
      : $type = $type ?? 'graphicShirt',
        super._();

  factory _$AvataaarTypeClothesGraphicShirt.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesGraphicShirtFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.graphicShirt(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeClothesGraphicShirt &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeClothesGraphicShirtCopyWith<AvataaarTypeClothesGraphicShirt>
      get copyWith => _$AvataaarTypeClothesGraphicShirtCopyWithImpl<
          AvataaarTypeClothesGraphicShirt>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return graphicShirt(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return graphicShirt?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (graphicShirt != null) {
      return graphicShirt(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return graphicShirt(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return graphicShirt?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (graphicShirt != null) {
      return graphicShirt(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesGraphicShirtToJson(this);
  }
}

abstract class AvataaarTypeClothesGraphicShirt extends AvataaarClothes {
  const factory AvataaarTypeClothesGraphicShirt(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeClothesGraphicShirt;
  const AvataaarTypeClothesGraphicShirt._() : super._();

  factory AvataaarTypeClothesGraphicShirt.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesGraphicShirt.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeClothesGraphicShirtCopyWith<AvataaarTypeClothesGraphicShirt>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeClothesHoodieCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarTypeClothesHoodieCopyWith(AvataaarTypeClothesHoodie value,
          $Res Function(AvataaarTypeClothesHoodie) then) =
      _$AvataaarTypeClothesHoodieCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeClothesHoodieCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarTypeClothesHoodieCopyWith<$Res> {
  _$AvataaarTypeClothesHoodieCopyWithImpl(AvataaarTypeClothesHoodie _value,
      $Res Function(AvataaarTypeClothesHoodie) _then)
      : super(_value, (v) => _then(v as AvataaarTypeClothesHoodie));

  @override
  AvataaarTypeClothesHoodie get _value =>
      super._value as AvataaarTypeClothesHoodie;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeClothesHoodie(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesHoodie extends AvataaarTypeClothesHoodie {
  const _$AvataaarTypeClothesHoodie(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      String? $type])
      : $type = $type ?? 'hoodie',
        super._();

  factory _$AvataaarTypeClothesHoodie.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesHoodieFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.hoodie(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeClothesHoodie &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeClothesHoodieCopyWith<AvataaarTypeClothesHoodie> get copyWith =>
      _$AvataaarTypeClothesHoodieCopyWithImpl<AvataaarTypeClothesHoodie>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return hoodie(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return hoodie?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (hoodie != null) {
      return hoodie(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return hoodie(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return hoodie?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (hoodie != null) {
      return hoodie(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesHoodieToJson(this);
  }
}

abstract class AvataaarTypeClothesHoodie extends AvataaarClothes {
  const factory AvataaarTypeClothesHoodie([@ColorSerialiser() Color color]) =
      _$AvataaarTypeClothesHoodie;
  const AvataaarTypeClothesHoodie._() : super._();

  factory AvataaarTypeClothesHoodie.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesHoodie.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeClothesHoodieCopyWith<AvataaarTypeClothesHoodie> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeClothesOverallCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarTypeClothesOverallCopyWith(AvataaarTypeClothesOverall value,
          $Res Function(AvataaarTypeClothesOverall) then) =
      _$AvataaarTypeClothesOverallCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeClothesOverallCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarTypeClothesOverallCopyWith<$Res> {
  _$AvataaarTypeClothesOverallCopyWithImpl(AvataaarTypeClothesOverall _value,
      $Res Function(AvataaarTypeClothesOverall) _then)
      : super(_value, (v) => _then(v as AvataaarTypeClothesOverall));

  @override
  AvataaarTypeClothesOverall get _value =>
      super._value as AvataaarTypeClothesOverall;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeClothesOverall(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesOverall extends AvataaarTypeClothesOverall {
  const _$AvataaarTypeClothesOverall(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      String? $type])
      : $type = $type ?? 'overall',
        super._();

  factory _$AvataaarTypeClothesOverall.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesOverallFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.overall(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeClothesOverall &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeClothesOverallCopyWith<AvataaarTypeClothesOverall>
      get copyWith =>
          _$AvataaarTypeClothesOverallCopyWithImpl<AvataaarTypeClothesOverall>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return overall(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return overall?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (overall != null) {
      return overall(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return overall(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return overall?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (overall != null) {
      return overall(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesOverallToJson(this);
  }
}

abstract class AvataaarTypeClothesOverall extends AvataaarClothes {
  const factory AvataaarTypeClothesOverall([@ColorSerialiser() Color color]) =
      _$AvataaarTypeClothesOverall;
  const AvataaarTypeClothesOverall._() : super._();

  factory AvataaarTypeClothesOverall.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesOverall.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeClothesOverallCopyWith<AvataaarTypeClothesOverall>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeClothesShirtCrewNeckCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarTypeClothesShirtCrewNeckCopyWith(
          AvataaarTypeClothesShirtCrewNeck value,
          $Res Function(AvataaarTypeClothesShirtCrewNeck) then) =
      _$AvataaarTypeClothesShirtCrewNeckCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeClothesShirtCrewNeckCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarTypeClothesShirtCrewNeckCopyWith<$Res> {
  _$AvataaarTypeClothesShirtCrewNeckCopyWithImpl(
      AvataaarTypeClothesShirtCrewNeck _value,
      $Res Function(AvataaarTypeClothesShirtCrewNeck) _then)
      : super(_value, (v) => _then(v as AvataaarTypeClothesShirtCrewNeck));

  @override
  AvataaarTypeClothesShirtCrewNeck get _value =>
      super._value as AvataaarTypeClothesShirtCrewNeck;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeClothesShirtCrewNeck(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesShirtCrewNeck
    extends AvataaarTypeClothesShirtCrewNeck {
  const _$AvataaarTypeClothesShirtCrewNeck(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      String? $type])
      : $type = $type ?? 'shirtCrewNeck',
        super._();

  factory _$AvataaarTypeClothesShirtCrewNeck.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesShirtCrewNeckFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.shirtCrewNeck(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeClothesShirtCrewNeck &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeClothesShirtCrewNeckCopyWith<AvataaarTypeClothesShirtCrewNeck>
      get copyWith => _$AvataaarTypeClothesShirtCrewNeckCopyWithImpl<
          AvataaarTypeClothesShirtCrewNeck>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return shirtCrewNeck(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return shirtCrewNeck?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtCrewNeck != null) {
      return shirtCrewNeck(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return shirtCrewNeck(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return shirtCrewNeck?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtCrewNeck != null) {
      return shirtCrewNeck(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesShirtCrewNeckToJson(this);
  }
}

abstract class AvataaarTypeClothesShirtCrewNeck extends AvataaarClothes {
  const factory AvataaarTypeClothesShirtCrewNeck(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeClothesShirtCrewNeck;
  const AvataaarTypeClothesShirtCrewNeck._() : super._();

  factory AvataaarTypeClothesShirtCrewNeck.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesShirtCrewNeck.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeClothesShirtCrewNeckCopyWith<AvataaarTypeClothesShirtCrewNeck>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeClothesShirtScoopNeckCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarTypeClothesShirtScoopNeckCopyWith(
          AvataaarTypeClothesShirtScoopNeck value,
          $Res Function(AvataaarTypeClothesShirtScoopNeck) then) =
      _$AvataaarTypeClothesShirtScoopNeckCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeClothesShirtScoopNeckCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarTypeClothesShirtScoopNeckCopyWith<$Res> {
  _$AvataaarTypeClothesShirtScoopNeckCopyWithImpl(
      AvataaarTypeClothesShirtScoopNeck _value,
      $Res Function(AvataaarTypeClothesShirtScoopNeck) _then)
      : super(_value, (v) => _then(v as AvataaarTypeClothesShirtScoopNeck));

  @override
  AvataaarTypeClothesShirtScoopNeck get _value =>
      super._value as AvataaarTypeClothesShirtScoopNeck;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeClothesShirtScoopNeck(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesShirtScoopNeck
    extends AvataaarTypeClothesShirtScoopNeck {
  const _$AvataaarTypeClothesShirtScoopNeck(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      String? $type])
      : $type = $type ?? 'shirtScoopNeck',
        super._();

  factory _$AvataaarTypeClothesShirtScoopNeck.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesShirtScoopNeckFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.shirtScoopNeck(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeClothesShirtScoopNeck &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeClothesShirtScoopNeckCopyWith<AvataaarTypeClothesShirtScoopNeck>
      get copyWith => _$AvataaarTypeClothesShirtScoopNeckCopyWithImpl<
          AvataaarTypeClothesShirtScoopNeck>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return shirtScoopNeck(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return shirtScoopNeck?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtScoopNeck != null) {
      return shirtScoopNeck(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return shirtScoopNeck(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return shirtScoopNeck?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtScoopNeck != null) {
      return shirtScoopNeck(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesShirtScoopNeckToJson(this);
  }
}

abstract class AvataaarTypeClothesShirtScoopNeck extends AvataaarClothes {
  const factory AvataaarTypeClothesShirtScoopNeck(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeClothesShirtScoopNeck;
  const AvataaarTypeClothesShirtScoopNeck._() : super._();

  factory AvataaarTypeClothesShirtScoopNeck.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeClothesShirtScoopNeck.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeClothesShirtScoopNeckCopyWith<AvataaarTypeClothesShirtScoopNeck>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeClothesShirtVNeckCopyWith<$Res>
    implements $AvataaarClothesCopyWith<$Res> {
  factory $AvataaarTypeClothesShirtVNeckCopyWith(
          AvataaarTypeClothesShirtVNeck value,
          $Res Function(AvataaarTypeClothesShirtVNeck) then) =
      _$AvataaarTypeClothesShirtVNeckCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeClothesShirtVNeckCopyWithImpl<$Res>
    extends _$AvataaarClothesCopyWithImpl<$Res>
    implements $AvataaarTypeClothesShirtVNeckCopyWith<$Res> {
  _$AvataaarTypeClothesShirtVNeckCopyWithImpl(
      AvataaarTypeClothesShirtVNeck _value,
      $Res Function(AvataaarTypeClothesShirtVNeck) _then)
      : super(_value, (v) => _then(v as AvataaarTypeClothesShirtVNeck));

  @override
  AvataaarTypeClothesShirtVNeck get _value =>
      super._value as AvataaarTypeClothesShirtVNeck;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeClothesShirtVNeck(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeClothesShirtVNeck extends AvataaarTypeClothesShirtVNeck {
  const _$AvataaarTypeClothesShirtVNeck(
      [@ColorSerialiser() this.color = AvataaarClothes._defaultColor,
      String? $type])
      : $type = $type ?? 'shirtVNeck',
        super._();

  factory _$AvataaarTypeClothesShirtVNeck.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeClothesShirtVNeckFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarClothes.shirtVNeck(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeClothesShirtVNeck &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeClothesShirtVNeckCopyWith<AvataaarTypeClothesShirtVNeck>
      get copyWith => _$AvataaarTypeClothesShirtVNeckCopyWithImpl<
          AvataaarTypeClothesShirtVNeck>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blazerShirt,
    required TResult Function(@ColorSerialiser() Color color) blazerSweater,
    required TResult Function(@ColorSerialiser() Color color) collarSweater,
    required TResult Function(@ColorSerialiser() Color color) graphicShirt,
    required TResult Function(@ColorSerialiser() Color color) hoodie,
    required TResult Function(@ColorSerialiser() Color color) overall,
    required TResult Function(@ColorSerialiser() Color color) shirtCrewNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtScoopNeck,
    required TResult Function(@ColorSerialiser() Color color) shirtVNeck,
  }) {
    return shirtVNeck(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
  }) {
    return shirtVNeck?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blazerShirt,
    TResult Function(@ColorSerialiser() Color color)? blazerSweater,
    TResult Function(@ColorSerialiser() Color color)? collarSweater,
    TResult Function(@ColorSerialiser() Color color)? graphicShirt,
    TResult Function(@ColorSerialiser() Color color)? hoodie,
    TResult Function(@ColorSerialiser() Color color)? overall,
    TResult Function(@ColorSerialiser() Color color)? shirtCrewNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtScoopNeck,
    TResult Function(@ColorSerialiser() Color color)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtVNeck != null) {
      return shirtVNeck(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeClothesBlazerShirt value) blazerShirt,
    required TResult Function(AvataaarTypeClothesBlazerSweater value)
        blazerSweater,
    required TResult Function(AvataaarTypeClothesColarSweater value)
        collarSweater,
    required TResult Function(AvataaarTypeClothesGraphicShirt value)
        graphicShirt,
    required TResult Function(AvataaarTypeClothesHoodie value) hoodie,
    required TResult Function(AvataaarTypeClothesOverall value) overall,
    required TResult Function(AvataaarTypeClothesShirtCrewNeck value)
        shirtCrewNeck,
    required TResult Function(AvataaarTypeClothesShirtScoopNeck value)
        shirtScoopNeck,
    required TResult Function(AvataaarTypeClothesShirtVNeck value) shirtVNeck,
  }) {
    return shirtVNeck(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
  }) {
    return shirtVNeck?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeClothesBlazerShirt value)? blazerShirt,
    TResult Function(AvataaarTypeClothesBlazerSweater value)? blazerSweater,
    TResult Function(AvataaarTypeClothesColarSweater value)? collarSweater,
    TResult Function(AvataaarTypeClothesGraphicShirt value)? graphicShirt,
    TResult Function(AvataaarTypeClothesHoodie value)? hoodie,
    TResult Function(AvataaarTypeClothesOverall value)? overall,
    TResult Function(AvataaarTypeClothesShirtCrewNeck value)? shirtCrewNeck,
    TResult Function(AvataaarTypeClothesShirtScoopNeck value)? shirtScoopNeck,
    TResult Function(AvataaarTypeClothesShirtVNeck value)? shirtVNeck,
    required TResult orElse(),
  }) {
    if (shirtVNeck != null) {
      return shirtVNeck(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeClothesShirtVNeckToJson(this);
  }
}

abstract class AvataaarTypeClothesShirtVNeck extends AvataaarClothes {
  const factory AvataaarTypeClothesShirtVNeck(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeClothesShirtVNeck;
  const AvataaarTypeClothesShirtVNeck._() : super._();

  factory AvataaarTypeClothesShirtVNeck.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeClothesShirtVNeck.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeClothesShirtVNeckCopyWith<AvataaarTypeClothesShirtVNeck>
      get copyWith => throw _privateConstructorUsedError;
}

AvataaarGraphics _$AvataaarGraphicsFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'bat':
      return AvataaarTypeGraphicsBat.fromJson(json);
    case 'bear':
      return AvataaarTypeGraphicsBear.fromJson(json);
    case 'cumbia':
      return AvataaarTypeGraphicsCumbia.fromJson(json);
    case 'deer':
      return AvataaarTypeGraphicsDeer.fromJson(json);
    case 'diamond':
      return AvataaarTypeGraphicsDiamond.fromJson(json);
    case 'hola':
      return AvataaarTypeGraphicsHola.fromJson(json);
    case 'pizza':
      return AvataaarTypeGraphicsPizza.fromJson(json);
    case 'resist':
      return AvataaarTypeGraphicsResist.fromJson(json);
    case 'selena':
      return AvataaarTypeGraphicsSelena.fromJson(json);
    case 'skull':
      return AvataaarTypeGraphicsSkull.fromJson(json);
    case 'skullOutline':
      return AvataaarTypeGraphicsSkullOutline.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarGraphics',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarGraphicsTearOff {
  const _$AvataaarGraphicsTearOff();

  AvataaarTypeGraphicsBat bat() {
    return const AvataaarTypeGraphicsBat();
  }

  AvataaarTypeGraphicsBear bear() {
    return const AvataaarTypeGraphicsBear();
  }

  AvataaarTypeGraphicsCumbia cumbia() {
    return const AvataaarTypeGraphicsCumbia();
  }

  AvataaarTypeGraphicsDeer deer() {
    return const AvataaarTypeGraphicsDeer();
  }

  AvataaarTypeGraphicsDiamond diamond() {
    return const AvataaarTypeGraphicsDiamond();
  }

  AvataaarTypeGraphicsHola hola() {
    return const AvataaarTypeGraphicsHola();
  }

  AvataaarTypeGraphicsPizza pizza() {
    return const AvataaarTypeGraphicsPizza();
  }

  AvataaarTypeGraphicsResist resist() {
    return const AvataaarTypeGraphicsResist();
  }

  AvataaarTypeGraphicsSelena selena() {
    return const AvataaarTypeGraphicsSelena();
  }

  AvataaarTypeGraphicsSkull skull() {
    return const AvataaarTypeGraphicsSkull();
  }

  AvataaarTypeGraphicsSkullOutline skullOutline() {
    return const AvataaarTypeGraphicsSkullOutline();
  }

  AvataaarGraphics fromJson(Map<String, Object?> json) {
    return AvataaarGraphics.fromJson(json);
  }
}

/// @nodoc
const $AvataaarGraphics = _$AvataaarGraphicsTearOff();

/// @nodoc
mixin _$AvataaarGraphics {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarGraphicsCopyWith<$Res> {
  factory $AvataaarGraphicsCopyWith(
          AvataaarGraphics value, $Res Function(AvataaarGraphics) then) =
      _$AvataaarGraphicsCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarGraphicsCopyWith<$Res> {
  _$AvataaarGraphicsCopyWithImpl(this._value, this._then);

  final AvataaarGraphics _value;
  // ignore: unused_field
  final $Res Function(AvataaarGraphics) _then;
}

/// @nodoc
abstract class $AvataaarTypeGraphicsBatCopyWith<$Res> {
  factory $AvataaarTypeGraphicsBatCopyWith(AvataaarTypeGraphicsBat value,
          $Res Function(AvataaarTypeGraphicsBat) then) =
      _$AvataaarTypeGraphicsBatCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeGraphicsBatCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarTypeGraphicsBatCopyWith<$Res> {
  _$AvataaarTypeGraphicsBatCopyWithImpl(AvataaarTypeGraphicsBat _value,
      $Res Function(AvataaarTypeGraphicsBat) _then)
      : super(_value, (v) => _then(v as AvataaarTypeGraphicsBat));

  @override
  AvataaarTypeGraphicsBat get _value => super._value as AvataaarTypeGraphicsBat;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsBat extends AvataaarTypeGraphicsBat {
  const _$AvataaarTypeGraphicsBat({String? $type})
      : $type = $type ?? 'bat',
        super._();

  factory _$AvataaarTypeGraphicsBat.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsBatFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.bat()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeGraphicsBat);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return bat();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return bat?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (bat != null) {
      return bat();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return bat(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return bat?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (bat != null) {
      return bat(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsBatToJson(this);
  }
}

abstract class AvataaarTypeGraphicsBat extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsBat() = _$AvataaarTypeGraphicsBat;
  const AvataaarTypeGraphicsBat._() : super._();

  factory AvataaarTypeGraphicsBat.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsBat.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeGraphicsBearCopyWith<$Res> {
  factory $AvataaarTypeGraphicsBearCopyWith(AvataaarTypeGraphicsBear value,
          $Res Function(AvataaarTypeGraphicsBear) then) =
      _$AvataaarTypeGraphicsBearCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeGraphicsBearCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarTypeGraphicsBearCopyWith<$Res> {
  _$AvataaarTypeGraphicsBearCopyWithImpl(AvataaarTypeGraphicsBear _value,
      $Res Function(AvataaarTypeGraphicsBear) _then)
      : super(_value, (v) => _then(v as AvataaarTypeGraphicsBear));

  @override
  AvataaarTypeGraphicsBear get _value =>
      super._value as AvataaarTypeGraphicsBear;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsBear extends AvataaarTypeGraphicsBear {
  const _$AvataaarTypeGraphicsBear({String? $type})
      : $type = $type ?? 'bear',
        super._();

  factory _$AvataaarTypeGraphicsBear.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsBearFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.bear()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeGraphicsBear);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return bear();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return bear?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (bear != null) {
      return bear();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return bear(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return bear?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (bear != null) {
      return bear(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsBearToJson(this);
  }
}

abstract class AvataaarTypeGraphicsBear extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsBear() = _$AvataaarTypeGraphicsBear;
  const AvataaarTypeGraphicsBear._() : super._();

  factory AvataaarTypeGraphicsBear.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsBear.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeGraphicsCumbiaCopyWith<$Res> {
  factory $AvataaarTypeGraphicsCumbiaCopyWith(AvataaarTypeGraphicsCumbia value,
          $Res Function(AvataaarTypeGraphicsCumbia) then) =
      _$AvataaarTypeGraphicsCumbiaCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeGraphicsCumbiaCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarTypeGraphicsCumbiaCopyWith<$Res> {
  _$AvataaarTypeGraphicsCumbiaCopyWithImpl(AvataaarTypeGraphicsCumbia _value,
      $Res Function(AvataaarTypeGraphicsCumbia) _then)
      : super(_value, (v) => _then(v as AvataaarTypeGraphicsCumbia));

  @override
  AvataaarTypeGraphicsCumbia get _value =>
      super._value as AvataaarTypeGraphicsCumbia;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsCumbia extends AvataaarTypeGraphicsCumbia {
  const _$AvataaarTypeGraphicsCumbia({String? $type})
      : $type = $type ?? 'cumbia',
        super._();

  factory _$AvataaarTypeGraphicsCumbia.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsCumbiaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.cumbia()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeGraphicsCumbia);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return cumbia();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return cumbia?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (cumbia != null) {
      return cumbia();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return cumbia(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return cumbia?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (cumbia != null) {
      return cumbia(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsCumbiaToJson(this);
  }
}

abstract class AvataaarTypeGraphicsCumbia extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsCumbia() = _$AvataaarTypeGraphicsCumbia;
  const AvataaarTypeGraphicsCumbia._() : super._();

  factory AvataaarTypeGraphicsCumbia.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsCumbia.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeGraphicsDeerCopyWith<$Res> {
  factory $AvataaarTypeGraphicsDeerCopyWith(AvataaarTypeGraphicsDeer value,
          $Res Function(AvataaarTypeGraphicsDeer) then) =
      _$AvataaarTypeGraphicsDeerCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeGraphicsDeerCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarTypeGraphicsDeerCopyWith<$Res> {
  _$AvataaarTypeGraphicsDeerCopyWithImpl(AvataaarTypeGraphicsDeer _value,
      $Res Function(AvataaarTypeGraphicsDeer) _then)
      : super(_value, (v) => _then(v as AvataaarTypeGraphicsDeer));

  @override
  AvataaarTypeGraphicsDeer get _value =>
      super._value as AvataaarTypeGraphicsDeer;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsDeer extends AvataaarTypeGraphicsDeer {
  const _$AvataaarTypeGraphicsDeer({String? $type})
      : $type = $type ?? 'deer',
        super._();

  factory _$AvataaarTypeGraphicsDeer.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsDeerFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.deer()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeGraphicsDeer);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return deer();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return deer?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (deer != null) {
      return deer();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return deer(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return deer?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (deer != null) {
      return deer(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsDeerToJson(this);
  }
}

abstract class AvataaarTypeGraphicsDeer extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsDeer() = _$AvataaarTypeGraphicsDeer;
  const AvataaarTypeGraphicsDeer._() : super._();

  factory AvataaarTypeGraphicsDeer.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsDeer.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeGraphicsDiamondCopyWith<$Res> {
  factory $AvataaarTypeGraphicsDiamondCopyWith(
          AvataaarTypeGraphicsDiamond value,
          $Res Function(AvataaarTypeGraphicsDiamond) then) =
      _$AvataaarTypeGraphicsDiamondCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeGraphicsDiamondCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarTypeGraphicsDiamondCopyWith<$Res> {
  _$AvataaarTypeGraphicsDiamondCopyWithImpl(AvataaarTypeGraphicsDiamond _value,
      $Res Function(AvataaarTypeGraphicsDiamond) _then)
      : super(_value, (v) => _then(v as AvataaarTypeGraphicsDiamond));

  @override
  AvataaarTypeGraphicsDiamond get _value =>
      super._value as AvataaarTypeGraphicsDiamond;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsDiamond extends AvataaarTypeGraphicsDiamond {
  const _$AvataaarTypeGraphicsDiamond({String? $type})
      : $type = $type ?? 'diamond',
        super._();

  factory _$AvataaarTypeGraphicsDiamond.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsDiamondFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.diamond()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeGraphicsDiamond);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return diamond();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return diamond?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (diamond != null) {
      return diamond();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return diamond(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return diamond?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (diamond != null) {
      return diamond(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsDiamondToJson(this);
  }
}

abstract class AvataaarTypeGraphicsDiamond extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsDiamond() = _$AvataaarTypeGraphicsDiamond;
  const AvataaarTypeGraphicsDiamond._() : super._();

  factory AvataaarTypeGraphicsDiamond.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsDiamond.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeGraphicsHolaCopyWith<$Res> {
  factory $AvataaarTypeGraphicsHolaCopyWith(AvataaarTypeGraphicsHola value,
          $Res Function(AvataaarTypeGraphicsHola) then) =
      _$AvataaarTypeGraphicsHolaCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeGraphicsHolaCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarTypeGraphicsHolaCopyWith<$Res> {
  _$AvataaarTypeGraphicsHolaCopyWithImpl(AvataaarTypeGraphicsHola _value,
      $Res Function(AvataaarTypeGraphicsHola) _then)
      : super(_value, (v) => _then(v as AvataaarTypeGraphicsHola));

  @override
  AvataaarTypeGraphicsHola get _value =>
      super._value as AvataaarTypeGraphicsHola;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsHola extends AvataaarTypeGraphicsHola {
  const _$AvataaarTypeGraphicsHola({String? $type})
      : $type = $type ?? 'hola',
        super._();

  factory _$AvataaarTypeGraphicsHola.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsHolaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.hola()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeGraphicsHola);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return hola();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return hola?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (hola != null) {
      return hola();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return hola(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return hola?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (hola != null) {
      return hola(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsHolaToJson(this);
  }
}

abstract class AvataaarTypeGraphicsHola extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsHola() = _$AvataaarTypeGraphicsHola;
  const AvataaarTypeGraphicsHola._() : super._();

  factory AvataaarTypeGraphicsHola.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsHola.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeGraphicsPizzaCopyWith<$Res> {
  factory $AvataaarTypeGraphicsPizzaCopyWith(AvataaarTypeGraphicsPizza value,
          $Res Function(AvataaarTypeGraphicsPizza) then) =
      _$AvataaarTypeGraphicsPizzaCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeGraphicsPizzaCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarTypeGraphicsPizzaCopyWith<$Res> {
  _$AvataaarTypeGraphicsPizzaCopyWithImpl(AvataaarTypeGraphicsPizza _value,
      $Res Function(AvataaarTypeGraphicsPizza) _then)
      : super(_value, (v) => _then(v as AvataaarTypeGraphicsPizza));

  @override
  AvataaarTypeGraphicsPizza get _value =>
      super._value as AvataaarTypeGraphicsPizza;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsPizza extends AvataaarTypeGraphicsPizza {
  const _$AvataaarTypeGraphicsPizza({String? $type})
      : $type = $type ?? 'pizza',
        super._();

  factory _$AvataaarTypeGraphicsPizza.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsPizzaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.pizza()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeGraphicsPizza);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return pizza();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return pizza?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (pizza != null) {
      return pizza();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return pizza(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return pizza?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (pizza != null) {
      return pizza(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsPizzaToJson(this);
  }
}

abstract class AvataaarTypeGraphicsPizza extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsPizza() = _$AvataaarTypeGraphicsPizza;
  const AvataaarTypeGraphicsPizza._() : super._();

  factory AvataaarTypeGraphicsPizza.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsPizza.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeGraphicsResistCopyWith<$Res> {
  factory $AvataaarTypeGraphicsResistCopyWith(AvataaarTypeGraphicsResist value,
          $Res Function(AvataaarTypeGraphicsResist) then) =
      _$AvataaarTypeGraphicsResistCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeGraphicsResistCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarTypeGraphicsResistCopyWith<$Res> {
  _$AvataaarTypeGraphicsResistCopyWithImpl(AvataaarTypeGraphicsResist _value,
      $Res Function(AvataaarTypeGraphicsResist) _then)
      : super(_value, (v) => _then(v as AvataaarTypeGraphicsResist));

  @override
  AvataaarTypeGraphicsResist get _value =>
      super._value as AvataaarTypeGraphicsResist;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsResist extends AvataaarTypeGraphicsResist {
  const _$AvataaarTypeGraphicsResist({String? $type})
      : $type = $type ?? 'resist',
        super._();

  factory _$AvataaarTypeGraphicsResist.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsResistFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.resist()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeGraphicsResist);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return resist();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return resist?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (resist != null) {
      return resist();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return resist(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return resist?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (resist != null) {
      return resist(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsResistToJson(this);
  }
}

abstract class AvataaarTypeGraphicsResist extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsResist() = _$AvataaarTypeGraphicsResist;
  const AvataaarTypeGraphicsResist._() : super._();

  factory AvataaarTypeGraphicsResist.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsResist.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeGraphicsSelenaCopyWith<$Res> {
  factory $AvataaarTypeGraphicsSelenaCopyWith(AvataaarTypeGraphicsSelena value,
          $Res Function(AvataaarTypeGraphicsSelena) then) =
      _$AvataaarTypeGraphicsSelenaCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeGraphicsSelenaCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarTypeGraphicsSelenaCopyWith<$Res> {
  _$AvataaarTypeGraphicsSelenaCopyWithImpl(AvataaarTypeGraphicsSelena _value,
      $Res Function(AvataaarTypeGraphicsSelena) _then)
      : super(_value, (v) => _then(v as AvataaarTypeGraphicsSelena));

  @override
  AvataaarTypeGraphicsSelena get _value =>
      super._value as AvataaarTypeGraphicsSelena;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsSelena extends AvataaarTypeGraphicsSelena {
  const _$AvataaarTypeGraphicsSelena({String? $type})
      : $type = $type ?? 'selena',
        super._();

  factory _$AvataaarTypeGraphicsSelena.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsSelenaFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.selena()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeGraphicsSelena);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return selena();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return selena?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (selena != null) {
      return selena();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return selena(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return selena?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (selena != null) {
      return selena(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsSelenaToJson(this);
  }
}

abstract class AvataaarTypeGraphicsSelena extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsSelena() = _$AvataaarTypeGraphicsSelena;
  const AvataaarTypeGraphicsSelena._() : super._();

  factory AvataaarTypeGraphicsSelena.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsSelena.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeGraphicsSkullCopyWith<$Res> {
  factory $AvataaarTypeGraphicsSkullCopyWith(AvataaarTypeGraphicsSkull value,
          $Res Function(AvataaarTypeGraphicsSkull) then) =
      _$AvataaarTypeGraphicsSkullCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeGraphicsSkullCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarTypeGraphicsSkullCopyWith<$Res> {
  _$AvataaarTypeGraphicsSkullCopyWithImpl(AvataaarTypeGraphicsSkull _value,
      $Res Function(AvataaarTypeGraphicsSkull) _then)
      : super(_value, (v) => _then(v as AvataaarTypeGraphicsSkull));

  @override
  AvataaarTypeGraphicsSkull get _value =>
      super._value as AvataaarTypeGraphicsSkull;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsSkull extends AvataaarTypeGraphicsSkull {
  const _$AvataaarTypeGraphicsSkull({String? $type})
      : $type = $type ?? 'skull',
        super._();

  factory _$AvataaarTypeGraphicsSkull.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsSkullFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.skull()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeGraphicsSkull);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return skull();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return skull?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (skull != null) {
      return skull();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return skull(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return skull?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (skull != null) {
      return skull(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsSkullToJson(this);
  }
}

abstract class AvataaarTypeGraphicsSkull extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsSkull() = _$AvataaarTypeGraphicsSkull;
  const AvataaarTypeGraphicsSkull._() : super._();

  factory AvataaarTypeGraphicsSkull.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsSkull.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeGraphicsSkullOutlineCopyWith<$Res> {
  factory $AvataaarTypeGraphicsSkullOutlineCopyWith(
          AvataaarTypeGraphicsSkullOutline value,
          $Res Function(AvataaarTypeGraphicsSkullOutline) then) =
      _$AvataaarTypeGraphicsSkullOutlineCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeGraphicsSkullOutlineCopyWithImpl<$Res>
    extends _$AvataaarGraphicsCopyWithImpl<$Res>
    implements $AvataaarTypeGraphicsSkullOutlineCopyWith<$Res> {
  _$AvataaarTypeGraphicsSkullOutlineCopyWithImpl(
      AvataaarTypeGraphicsSkullOutline _value,
      $Res Function(AvataaarTypeGraphicsSkullOutline) _then)
      : super(_value, (v) => _then(v as AvataaarTypeGraphicsSkullOutline));

  @override
  AvataaarTypeGraphicsSkullOutline get _value =>
      super._value as AvataaarTypeGraphicsSkullOutline;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeGraphicsSkullOutline
    extends AvataaarTypeGraphicsSkullOutline {
  const _$AvataaarTypeGraphicsSkullOutline({String? $type})
      : $type = $type ?? 'skullOutline',
        super._();

  factory _$AvataaarTypeGraphicsSkullOutline.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeGraphicsSkullOutlineFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarGraphics.skullOutline()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeGraphicsSkullOutline);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() bat,
    required TResult Function() bear,
    required TResult Function() cumbia,
    required TResult Function() deer,
    required TResult Function() diamond,
    required TResult Function() hola,
    required TResult Function() pizza,
    required TResult Function() resist,
    required TResult Function() selena,
    required TResult Function() skull,
    required TResult Function() skullOutline,
  }) {
    return skullOutline();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
  }) {
    return skullOutline?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? bat,
    TResult Function()? bear,
    TResult Function()? cumbia,
    TResult Function()? deer,
    TResult Function()? diamond,
    TResult Function()? hola,
    TResult Function()? pizza,
    TResult Function()? resist,
    TResult Function()? selena,
    TResult Function()? skull,
    TResult Function()? skullOutline,
    required TResult orElse(),
  }) {
    if (skullOutline != null) {
      return skullOutline();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeGraphicsBat value) bat,
    required TResult Function(AvataaarTypeGraphicsBear value) bear,
    required TResult Function(AvataaarTypeGraphicsCumbia value) cumbia,
    required TResult Function(AvataaarTypeGraphicsDeer value) deer,
    required TResult Function(AvataaarTypeGraphicsDiamond value) diamond,
    required TResult Function(AvataaarTypeGraphicsHola value) hola,
    required TResult Function(AvataaarTypeGraphicsPizza value) pizza,
    required TResult Function(AvataaarTypeGraphicsResist value) resist,
    required TResult Function(AvataaarTypeGraphicsSelena value) selena,
    required TResult Function(AvataaarTypeGraphicsSkull value) skull,
    required TResult Function(AvataaarTypeGraphicsSkullOutline value)
        skullOutline,
  }) {
    return skullOutline(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
  }) {
    return skullOutline?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeGraphicsBat value)? bat,
    TResult Function(AvataaarTypeGraphicsBear value)? bear,
    TResult Function(AvataaarTypeGraphicsCumbia value)? cumbia,
    TResult Function(AvataaarTypeGraphicsDeer value)? deer,
    TResult Function(AvataaarTypeGraphicsDiamond value)? diamond,
    TResult Function(AvataaarTypeGraphicsHola value)? hola,
    TResult Function(AvataaarTypeGraphicsPizza value)? pizza,
    TResult Function(AvataaarTypeGraphicsResist value)? resist,
    TResult Function(AvataaarTypeGraphicsSelena value)? selena,
    TResult Function(AvataaarTypeGraphicsSkull value)? skull,
    TResult Function(AvataaarTypeGraphicsSkullOutline value)? skullOutline,
    required TResult orElse(),
  }) {
    if (skullOutline != null) {
      return skullOutline(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeGraphicsSkullOutlineToJson(this);
  }
}

abstract class AvataaarTypeGraphicsSkullOutline extends AvataaarGraphics {
  const factory AvataaarTypeGraphicsSkullOutline() =
      _$AvataaarTypeGraphicsSkullOutline;
  const AvataaarTypeGraphicsSkullOutline._() : super._();

  factory AvataaarTypeGraphicsSkullOutline.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeGraphicsSkullOutline.fromJson;
}

AvataaarEyebrow _$AvataaarEyebrowFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'angry':
      return AvataaarTypeEyebrowAngry.fromJson(json);
    case 'angryNatural':
      return AvataaarTypeEyebrowAngryNatural.fromJson(json);
    case 'default0':
      return AvataaarTypeEyebrowDefault0.fromJson(json);
    case 'defaultNatural':
      return AvataaarTypeEyebrowDefaultNatural.fromJson(json);
    case 'flatNatural':
      return AvataaarTypeEyebrowFlatNatural.fromJson(json);
    case 'frownNatural':
      return AvataaarTypeEyebrowFrownNatural.fromJson(json);
    case 'raisedExcited':
      return AvataaarTypeEyebrowRaisedExcited.fromJson(json);
    case 'raisedExcitedNatural':
      return AvataaarTypeEyebrowRaisedExcitedNatural.fromJson(json);
    case 'sadConcerned':
      return AvataaarTypeEyebrowSadConcerned.fromJson(json);
    case 'sadConcernedNatural':
      return AvataaarTypeEyebrowSadConcernedNatural.fromJson(json);
    case 'unibrowNatural':
      return AvataaarTypeEyebrowUnibrowNatural.fromJson(json);
    case 'upDown':
      return AvataaarTypeEyebrowUpDown.fromJson(json);
    case 'upDownNatural':
      return AvataaarTypeEyebrowUpDownNatural.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarEyebrow',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarEyebrowTearOff {
  const _$AvataaarEyebrowTearOff();

  AvataaarTypeEyebrowAngry angry() {
    return const AvataaarTypeEyebrowAngry();
  }

  AvataaarTypeEyebrowAngryNatural angryNatural() {
    return const AvataaarTypeEyebrowAngryNatural();
  }

  AvataaarTypeEyebrowDefault0 default0() {
    return const AvataaarTypeEyebrowDefault0();
  }

  AvataaarTypeEyebrowDefaultNatural defaultNatural() {
    return const AvataaarTypeEyebrowDefaultNatural();
  }

  AvataaarTypeEyebrowFlatNatural flatNatural() {
    return const AvataaarTypeEyebrowFlatNatural();
  }

  AvataaarTypeEyebrowFrownNatural frownNatural() {
    return const AvataaarTypeEyebrowFrownNatural();
  }

  AvataaarTypeEyebrowRaisedExcited raisedExcited() {
    return const AvataaarTypeEyebrowRaisedExcited();
  }

  AvataaarTypeEyebrowRaisedExcitedNatural raisedExcitedNatural() {
    return const AvataaarTypeEyebrowRaisedExcitedNatural();
  }

  AvataaarTypeEyebrowSadConcerned sadConcerned() {
    return const AvataaarTypeEyebrowSadConcerned();
  }

  AvataaarTypeEyebrowSadConcernedNatural sadConcernedNatural() {
    return const AvataaarTypeEyebrowSadConcernedNatural();
  }

  AvataaarTypeEyebrowUnibrowNatural unibrowNatural() {
    return const AvataaarTypeEyebrowUnibrowNatural();
  }

  AvataaarTypeEyebrowUpDown upDown() {
    return const AvataaarTypeEyebrowUpDown();
  }

  AvataaarTypeEyebrowUpDownNatural upDownNatural() {
    return const AvataaarTypeEyebrowUpDownNatural();
  }

  AvataaarEyebrow fromJson(Map<String, Object?> json) {
    return AvataaarEyebrow.fromJson(json);
  }
}

/// @nodoc
const $AvataaarEyebrow = _$AvataaarEyebrowTearOff();

/// @nodoc
mixin _$AvataaarEyebrow {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarEyebrowCopyWith<$Res> {
  factory $AvataaarEyebrowCopyWith(
          AvataaarEyebrow value, $Res Function(AvataaarEyebrow) then) =
      _$AvataaarEyebrowCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarEyebrowCopyWith<$Res> {
  _$AvataaarEyebrowCopyWithImpl(this._value, this._then);

  final AvataaarEyebrow _value;
  // ignore: unused_field
  final $Res Function(AvataaarEyebrow) _then;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowAngryCopyWith<$Res> {
  factory $AvataaarTypeEyebrowAngryCopyWith(AvataaarTypeEyebrowAngry value,
          $Res Function(AvataaarTypeEyebrowAngry) then) =
      _$AvataaarTypeEyebrowAngryCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowAngryCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowAngryCopyWith<$Res> {
  _$AvataaarTypeEyebrowAngryCopyWithImpl(AvataaarTypeEyebrowAngry _value,
      $Res Function(AvataaarTypeEyebrowAngry) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyebrowAngry));

  @override
  AvataaarTypeEyebrowAngry get _value =>
      super._value as AvataaarTypeEyebrowAngry;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowAngry extends AvataaarTypeEyebrowAngry {
  const _$AvataaarTypeEyebrowAngry({String? $type})
      : $type = $type ?? 'angry',
        super._();

  factory _$AvataaarTypeEyebrowAngry.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowAngryFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.angry()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeEyebrowAngry);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return angry();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return angry?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (angry != null) {
      return angry();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return angry(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return angry?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (angry != null) {
      return angry(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowAngryToJson(this);
  }
}

abstract class AvataaarTypeEyebrowAngry extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowAngry() = _$AvataaarTypeEyebrowAngry;
  const AvataaarTypeEyebrowAngry._() : super._();

  factory AvataaarTypeEyebrowAngry.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowAngry.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowAngryNaturalCopyWith<$Res> {
  factory $AvataaarTypeEyebrowAngryNaturalCopyWith(
          AvataaarTypeEyebrowAngryNatural value,
          $Res Function(AvataaarTypeEyebrowAngryNatural) then) =
      _$AvataaarTypeEyebrowAngryNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowAngryNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowAngryNaturalCopyWith<$Res> {
  _$AvataaarTypeEyebrowAngryNaturalCopyWithImpl(
      AvataaarTypeEyebrowAngryNatural _value,
      $Res Function(AvataaarTypeEyebrowAngryNatural) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyebrowAngryNatural));

  @override
  AvataaarTypeEyebrowAngryNatural get _value =>
      super._value as AvataaarTypeEyebrowAngryNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowAngryNatural
    extends AvataaarTypeEyebrowAngryNatural {
  const _$AvataaarTypeEyebrowAngryNatural({String? $type})
      : $type = $type ?? 'angryNatural',
        super._();

  factory _$AvataaarTypeEyebrowAngryNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowAngryNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.angryNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowAngryNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return angryNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return angryNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (angryNatural != null) {
      return angryNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return angryNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return angryNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (angryNatural != null) {
      return angryNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowAngryNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowAngryNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowAngryNatural() =
      _$AvataaarTypeEyebrowAngryNatural;
  const AvataaarTypeEyebrowAngryNatural._() : super._();

  factory AvataaarTypeEyebrowAngryNatural.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowAngryNatural.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowDefault0CopyWith<$Res> {
  factory $AvataaarTypeEyebrowDefault0CopyWith(
          AvataaarTypeEyebrowDefault0 value,
          $Res Function(AvataaarTypeEyebrowDefault0) then) =
      _$AvataaarTypeEyebrowDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowDefault0CopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowDefault0CopyWith<$Res> {
  _$AvataaarTypeEyebrowDefault0CopyWithImpl(AvataaarTypeEyebrowDefault0 _value,
      $Res Function(AvataaarTypeEyebrowDefault0) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyebrowDefault0));

  @override
  AvataaarTypeEyebrowDefault0 get _value =>
      super._value as AvataaarTypeEyebrowDefault0;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowDefault0 extends AvataaarTypeEyebrowDefault0 {
  const _$AvataaarTypeEyebrowDefault0({String? $type})
      : $type = $type ?? 'default0',
        super._();

  factory _$AvataaarTypeEyebrowDefault0.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowDefault0FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowDefault0);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowDefault0ToJson(this);
  }
}

abstract class AvataaarTypeEyebrowDefault0 extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowDefault0() = _$AvataaarTypeEyebrowDefault0;
  const AvataaarTypeEyebrowDefault0._() : super._();

  factory AvataaarTypeEyebrowDefault0.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowDefault0.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowDefaultNaturalCopyWith<$Res> {
  factory $AvataaarTypeEyebrowDefaultNaturalCopyWith(
          AvataaarTypeEyebrowDefaultNatural value,
          $Res Function(AvataaarTypeEyebrowDefaultNatural) then) =
      _$AvataaarTypeEyebrowDefaultNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowDefaultNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowDefaultNaturalCopyWith<$Res> {
  _$AvataaarTypeEyebrowDefaultNaturalCopyWithImpl(
      AvataaarTypeEyebrowDefaultNatural _value,
      $Res Function(AvataaarTypeEyebrowDefaultNatural) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyebrowDefaultNatural));

  @override
  AvataaarTypeEyebrowDefaultNatural get _value =>
      super._value as AvataaarTypeEyebrowDefaultNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowDefaultNatural
    extends AvataaarTypeEyebrowDefaultNatural {
  const _$AvataaarTypeEyebrowDefaultNatural({String? $type})
      : $type = $type ?? 'defaultNatural',
        super._();

  factory _$AvataaarTypeEyebrowDefaultNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowDefaultNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.defaultNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowDefaultNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return defaultNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return defaultNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (defaultNatural != null) {
      return defaultNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return defaultNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return defaultNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (defaultNatural != null) {
      return defaultNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowDefaultNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowDefaultNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowDefaultNatural() =
      _$AvataaarTypeEyebrowDefaultNatural;
  const AvataaarTypeEyebrowDefaultNatural._() : super._();

  factory AvataaarTypeEyebrowDefaultNatural.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeEyebrowDefaultNatural.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowFlatNaturalCopyWith<$Res> {
  factory $AvataaarTypeEyebrowFlatNaturalCopyWith(
          AvataaarTypeEyebrowFlatNatural value,
          $Res Function(AvataaarTypeEyebrowFlatNatural) then) =
      _$AvataaarTypeEyebrowFlatNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowFlatNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowFlatNaturalCopyWith<$Res> {
  _$AvataaarTypeEyebrowFlatNaturalCopyWithImpl(
      AvataaarTypeEyebrowFlatNatural _value,
      $Res Function(AvataaarTypeEyebrowFlatNatural) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyebrowFlatNatural));

  @override
  AvataaarTypeEyebrowFlatNatural get _value =>
      super._value as AvataaarTypeEyebrowFlatNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowFlatNatural extends AvataaarTypeEyebrowFlatNatural {
  const _$AvataaarTypeEyebrowFlatNatural({String? $type})
      : $type = $type ?? 'flatNatural',
        super._();

  factory _$AvataaarTypeEyebrowFlatNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowFlatNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.flatNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowFlatNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return flatNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return flatNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (flatNatural != null) {
      return flatNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return flatNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return flatNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (flatNatural != null) {
      return flatNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowFlatNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowFlatNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowFlatNatural() =
      _$AvataaarTypeEyebrowFlatNatural;
  const AvataaarTypeEyebrowFlatNatural._() : super._();

  factory AvataaarTypeEyebrowFlatNatural.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowFlatNatural.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowFrownNaturalCopyWith<$Res> {
  factory $AvataaarTypeEyebrowFrownNaturalCopyWith(
          AvataaarTypeEyebrowFrownNatural value,
          $Res Function(AvataaarTypeEyebrowFrownNatural) then) =
      _$AvataaarTypeEyebrowFrownNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowFrownNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowFrownNaturalCopyWith<$Res> {
  _$AvataaarTypeEyebrowFrownNaturalCopyWithImpl(
      AvataaarTypeEyebrowFrownNatural _value,
      $Res Function(AvataaarTypeEyebrowFrownNatural) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyebrowFrownNatural));

  @override
  AvataaarTypeEyebrowFrownNatural get _value =>
      super._value as AvataaarTypeEyebrowFrownNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowFrownNatural
    extends AvataaarTypeEyebrowFrownNatural {
  const _$AvataaarTypeEyebrowFrownNatural({String? $type})
      : $type = $type ?? 'frownNatural',
        super._();

  factory _$AvataaarTypeEyebrowFrownNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowFrownNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.frownNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowFrownNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return frownNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return frownNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (frownNatural != null) {
      return frownNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return frownNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return frownNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (frownNatural != null) {
      return frownNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowFrownNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowFrownNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowFrownNatural() =
      _$AvataaarTypeEyebrowFrownNatural;
  const AvataaarTypeEyebrowFrownNatural._() : super._();

  factory AvataaarTypeEyebrowFrownNatural.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowFrownNatural.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowRaisedExcitedCopyWith<$Res> {
  factory $AvataaarTypeEyebrowRaisedExcitedCopyWith(
          AvataaarTypeEyebrowRaisedExcited value,
          $Res Function(AvataaarTypeEyebrowRaisedExcited) then) =
      _$AvataaarTypeEyebrowRaisedExcitedCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowRaisedExcitedCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowRaisedExcitedCopyWith<$Res> {
  _$AvataaarTypeEyebrowRaisedExcitedCopyWithImpl(
      AvataaarTypeEyebrowRaisedExcited _value,
      $Res Function(AvataaarTypeEyebrowRaisedExcited) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyebrowRaisedExcited));

  @override
  AvataaarTypeEyebrowRaisedExcited get _value =>
      super._value as AvataaarTypeEyebrowRaisedExcited;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowRaisedExcited
    extends AvataaarTypeEyebrowRaisedExcited {
  const _$AvataaarTypeEyebrowRaisedExcited({String? $type})
      : $type = $type ?? 'raisedExcited',
        super._();

  factory _$AvataaarTypeEyebrowRaisedExcited.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowRaisedExcitedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.raisedExcited()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowRaisedExcited);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return raisedExcited();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return raisedExcited?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcited != null) {
      return raisedExcited();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return raisedExcited(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return raisedExcited?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcited != null) {
      return raisedExcited(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowRaisedExcitedToJson(this);
  }
}

abstract class AvataaarTypeEyebrowRaisedExcited extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowRaisedExcited() =
      _$AvataaarTypeEyebrowRaisedExcited;
  const AvataaarTypeEyebrowRaisedExcited._() : super._();

  factory AvataaarTypeEyebrowRaisedExcited.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowRaisedExcited.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowRaisedExcitedNaturalCopyWith<$Res> {
  factory $AvataaarTypeEyebrowRaisedExcitedNaturalCopyWith(
          AvataaarTypeEyebrowRaisedExcitedNatural value,
          $Res Function(AvataaarTypeEyebrowRaisedExcitedNatural) then) =
      _$AvataaarTypeEyebrowRaisedExcitedNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowRaisedExcitedNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowRaisedExcitedNaturalCopyWith<$Res> {
  _$AvataaarTypeEyebrowRaisedExcitedNaturalCopyWithImpl(
      AvataaarTypeEyebrowRaisedExcitedNatural _value,
      $Res Function(AvataaarTypeEyebrowRaisedExcitedNatural) _then)
      : super(
            _value, (v) => _then(v as AvataaarTypeEyebrowRaisedExcitedNatural));

  @override
  AvataaarTypeEyebrowRaisedExcitedNatural get _value =>
      super._value as AvataaarTypeEyebrowRaisedExcitedNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowRaisedExcitedNatural
    extends AvataaarTypeEyebrowRaisedExcitedNatural {
  const _$AvataaarTypeEyebrowRaisedExcitedNatural({String? $type})
      : $type = $type ?? 'raisedExcitedNatural',
        super._();

  factory _$AvataaarTypeEyebrowRaisedExcitedNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowRaisedExcitedNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.raisedExcitedNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowRaisedExcitedNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return raisedExcitedNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return raisedExcitedNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcitedNatural != null) {
      return raisedExcitedNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return raisedExcitedNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return raisedExcitedNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (raisedExcitedNatural != null) {
      return raisedExcitedNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowRaisedExcitedNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowRaisedExcitedNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowRaisedExcitedNatural() =
      _$AvataaarTypeEyebrowRaisedExcitedNatural;
  const AvataaarTypeEyebrowRaisedExcitedNatural._() : super._();

  factory AvataaarTypeEyebrowRaisedExcitedNatural.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowRaisedExcitedNatural.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowSadConcernedCopyWith<$Res> {
  factory $AvataaarTypeEyebrowSadConcernedCopyWith(
          AvataaarTypeEyebrowSadConcerned value,
          $Res Function(AvataaarTypeEyebrowSadConcerned) then) =
      _$AvataaarTypeEyebrowSadConcernedCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowSadConcernedCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowSadConcernedCopyWith<$Res> {
  _$AvataaarTypeEyebrowSadConcernedCopyWithImpl(
      AvataaarTypeEyebrowSadConcerned _value,
      $Res Function(AvataaarTypeEyebrowSadConcerned) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyebrowSadConcerned));

  @override
  AvataaarTypeEyebrowSadConcerned get _value =>
      super._value as AvataaarTypeEyebrowSadConcerned;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowSadConcerned
    extends AvataaarTypeEyebrowSadConcerned {
  const _$AvataaarTypeEyebrowSadConcerned({String? $type})
      : $type = $type ?? 'sadConcerned',
        super._();

  factory _$AvataaarTypeEyebrowSadConcerned.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowSadConcernedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.sadConcerned()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowSadConcerned);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return sadConcerned();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return sadConcerned?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcerned != null) {
      return sadConcerned();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return sadConcerned(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return sadConcerned?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcerned != null) {
      return sadConcerned(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowSadConcernedToJson(this);
  }
}

abstract class AvataaarTypeEyebrowSadConcerned extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowSadConcerned() =
      _$AvataaarTypeEyebrowSadConcerned;
  const AvataaarTypeEyebrowSadConcerned._() : super._();

  factory AvataaarTypeEyebrowSadConcerned.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowSadConcerned.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowSadConcernedNaturalCopyWith<$Res> {
  factory $AvataaarTypeEyebrowSadConcernedNaturalCopyWith(
          AvataaarTypeEyebrowSadConcernedNatural value,
          $Res Function(AvataaarTypeEyebrowSadConcernedNatural) then) =
      _$AvataaarTypeEyebrowSadConcernedNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowSadConcernedNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowSadConcernedNaturalCopyWith<$Res> {
  _$AvataaarTypeEyebrowSadConcernedNaturalCopyWithImpl(
      AvataaarTypeEyebrowSadConcernedNatural _value,
      $Res Function(AvataaarTypeEyebrowSadConcernedNatural) _then)
      : super(
            _value, (v) => _then(v as AvataaarTypeEyebrowSadConcernedNatural));

  @override
  AvataaarTypeEyebrowSadConcernedNatural get _value =>
      super._value as AvataaarTypeEyebrowSadConcernedNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowSadConcernedNatural
    extends AvataaarTypeEyebrowSadConcernedNatural {
  const _$AvataaarTypeEyebrowSadConcernedNatural({String? $type})
      : $type = $type ?? 'sadConcernedNatural',
        super._();

  factory _$AvataaarTypeEyebrowSadConcernedNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowSadConcernedNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.sadConcernedNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowSadConcernedNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return sadConcernedNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return sadConcernedNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcernedNatural != null) {
      return sadConcernedNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return sadConcernedNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return sadConcernedNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (sadConcernedNatural != null) {
      return sadConcernedNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowSadConcernedNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowSadConcernedNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowSadConcernedNatural() =
      _$AvataaarTypeEyebrowSadConcernedNatural;
  const AvataaarTypeEyebrowSadConcernedNatural._() : super._();

  factory AvataaarTypeEyebrowSadConcernedNatural.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowSadConcernedNatural.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowUnibrowNaturalCopyWith<$Res> {
  factory $AvataaarTypeEyebrowUnibrowNaturalCopyWith(
          AvataaarTypeEyebrowUnibrowNatural value,
          $Res Function(AvataaarTypeEyebrowUnibrowNatural) then) =
      _$AvataaarTypeEyebrowUnibrowNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowUnibrowNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowUnibrowNaturalCopyWith<$Res> {
  _$AvataaarTypeEyebrowUnibrowNaturalCopyWithImpl(
      AvataaarTypeEyebrowUnibrowNatural _value,
      $Res Function(AvataaarTypeEyebrowUnibrowNatural) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyebrowUnibrowNatural));

  @override
  AvataaarTypeEyebrowUnibrowNatural get _value =>
      super._value as AvataaarTypeEyebrowUnibrowNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowUnibrowNatural
    extends AvataaarTypeEyebrowUnibrowNatural {
  const _$AvataaarTypeEyebrowUnibrowNatural({String? $type})
      : $type = $type ?? 'unibrowNatural',
        super._();

  factory _$AvataaarTypeEyebrowUnibrowNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowUnibrowNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.unibrowNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowUnibrowNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return unibrowNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return unibrowNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (unibrowNatural != null) {
      return unibrowNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return unibrowNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return unibrowNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (unibrowNatural != null) {
      return unibrowNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowUnibrowNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowUnibrowNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowUnibrowNatural() =
      _$AvataaarTypeEyebrowUnibrowNatural;
  const AvataaarTypeEyebrowUnibrowNatural._() : super._();

  factory AvataaarTypeEyebrowUnibrowNatural.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeEyebrowUnibrowNatural.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowUpDownCopyWith<$Res> {
  factory $AvataaarTypeEyebrowUpDownCopyWith(AvataaarTypeEyebrowUpDown value,
          $Res Function(AvataaarTypeEyebrowUpDown) then) =
      _$AvataaarTypeEyebrowUpDownCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowUpDownCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowUpDownCopyWith<$Res> {
  _$AvataaarTypeEyebrowUpDownCopyWithImpl(AvataaarTypeEyebrowUpDown _value,
      $Res Function(AvataaarTypeEyebrowUpDown) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyebrowUpDown));

  @override
  AvataaarTypeEyebrowUpDown get _value =>
      super._value as AvataaarTypeEyebrowUpDown;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowUpDown extends AvataaarTypeEyebrowUpDown {
  const _$AvataaarTypeEyebrowUpDown({String? $type})
      : $type = $type ?? 'upDown',
        super._();

  factory _$AvataaarTypeEyebrowUpDown.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowUpDownFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.upDown()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowUpDown);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return upDown();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return upDown?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDown != null) {
      return upDown();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return upDown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return upDown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDown != null) {
      return upDown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowUpDownToJson(this);
  }
}

abstract class AvataaarTypeEyebrowUpDown extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowUpDown() = _$AvataaarTypeEyebrowUpDown;
  const AvataaarTypeEyebrowUpDown._() : super._();

  factory AvataaarTypeEyebrowUpDown.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowUpDown.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeEyebrowUpDownNaturalCopyWith<$Res> {
  factory $AvataaarTypeEyebrowUpDownNaturalCopyWith(
          AvataaarTypeEyebrowUpDownNatural value,
          $Res Function(AvataaarTypeEyebrowUpDownNatural) then) =
      _$AvataaarTypeEyebrowUpDownNaturalCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeEyebrowUpDownNaturalCopyWithImpl<$Res>
    extends _$AvataaarEyebrowCopyWithImpl<$Res>
    implements $AvataaarTypeEyebrowUpDownNaturalCopyWith<$Res> {
  _$AvataaarTypeEyebrowUpDownNaturalCopyWithImpl(
      AvataaarTypeEyebrowUpDownNatural _value,
      $Res Function(AvataaarTypeEyebrowUpDownNatural) _then)
      : super(_value, (v) => _then(v as AvataaarTypeEyebrowUpDownNatural));

  @override
  AvataaarTypeEyebrowUpDownNatural get _value =>
      super._value as AvataaarTypeEyebrowUpDownNatural;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeEyebrowUpDownNatural
    extends AvataaarTypeEyebrowUpDownNatural {
  const _$AvataaarTypeEyebrowUpDownNatural({String? $type})
      : $type = $type ?? 'upDownNatural',
        super._();

  factory _$AvataaarTypeEyebrowUpDownNatural.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeEyebrowUpDownNaturalFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarEyebrow.upDownNatural()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeEyebrowUpDownNatural);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() angry,
    required TResult Function() angryNatural,
    required TResult Function() default0,
    required TResult Function() defaultNatural,
    required TResult Function() flatNatural,
    required TResult Function() frownNatural,
    required TResult Function() raisedExcited,
    required TResult Function() raisedExcitedNatural,
    required TResult Function() sadConcerned,
    required TResult Function() sadConcernedNatural,
    required TResult Function() unibrowNatural,
    required TResult Function() upDown,
    required TResult Function() upDownNatural,
  }) {
    return upDownNatural();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
  }) {
    return upDownNatural?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? angry,
    TResult Function()? angryNatural,
    TResult Function()? default0,
    TResult Function()? defaultNatural,
    TResult Function()? flatNatural,
    TResult Function()? frownNatural,
    TResult Function()? raisedExcited,
    TResult Function()? raisedExcitedNatural,
    TResult Function()? sadConcerned,
    TResult Function()? sadConcernedNatural,
    TResult Function()? unibrowNatural,
    TResult Function()? upDown,
    TResult Function()? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDownNatural != null) {
      return upDownNatural();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeEyebrowAngry value) angry,
    required TResult Function(AvataaarTypeEyebrowAngryNatural value)
        angryNatural,
    required TResult Function(AvataaarTypeEyebrowDefault0 value) default0,
    required TResult Function(AvataaarTypeEyebrowDefaultNatural value)
        defaultNatural,
    required TResult Function(AvataaarTypeEyebrowFlatNatural value) flatNatural,
    required TResult Function(AvataaarTypeEyebrowFrownNatural value)
        frownNatural,
    required TResult Function(AvataaarTypeEyebrowRaisedExcited value)
        raisedExcited,
    required TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)
        raisedExcitedNatural,
    required TResult Function(AvataaarTypeEyebrowSadConcerned value)
        sadConcerned,
    required TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)
        sadConcernedNatural,
    required TResult Function(AvataaarTypeEyebrowUnibrowNatural value)
        unibrowNatural,
    required TResult Function(AvataaarTypeEyebrowUpDown value) upDown,
    required TResult Function(AvataaarTypeEyebrowUpDownNatural value)
        upDownNatural,
  }) {
    return upDownNatural(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
  }) {
    return upDownNatural?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeEyebrowAngry value)? angry,
    TResult Function(AvataaarTypeEyebrowAngryNatural value)? angryNatural,
    TResult Function(AvataaarTypeEyebrowDefault0 value)? default0,
    TResult Function(AvataaarTypeEyebrowDefaultNatural value)? defaultNatural,
    TResult Function(AvataaarTypeEyebrowFlatNatural value)? flatNatural,
    TResult Function(AvataaarTypeEyebrowFrownNatural value)? frownNatural,
    TResult Function(AvataaarTypeEyebrowRaisedExcited value)? raisedExcited,
    TResult Function(AvataaarTypeEyebrowRaisedExcitedNatural value)?
        raisedExcitedNatural,
    TResult Function(AvataaarTypeEyebrowSadConcerned value)? sadConcerned,
    TResult Function(AvataaarTypeEyebrowSadConcernedNatural value)?
        sadConcernedNatural,
    TResult Function(AvataaarTypeEyebrowUnibrowNatural value)? unibrowNatural,
    TResult Function(AvataaarTypeEyebrowUpDown value)? upDown,
    TResult Function(AvataaarTypeEyebrowUpDownNatural value)? upDownNatural,
    required TResult orElse(),
  }) {
    if (upDownNatural != null) {
      return upDownNatural(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeEyebrowUpDownNaturalToJson(this);
  }
}

abstract class AvataaarTypeEyebrowUpDownNatural extends AvataaarEyebrow {
  const factory AvataaarTypeEyebrowUpDownNatural() =
      _$AvataaarTypeEyebrowUpDownNatural;
  const AvataaarTypeEyebrowUpDownNatural._() : super._();

  factory AvataaarTypeEyebrowUpDownNatural.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeEyebrowUpDownNatural.fromJson;
}

AvataaarFacialHair _$AvataaarFacialHairFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'blank':
      return AvataaarTypeFacialHairBlank.fromJson(json);
    case 'beardMedium':
      return AvataaarTypeFacialHairBeardMedium.fromJson(json);
    case 'beardLight':
      return AvataaarTypeFacialHairBeardLight.fromJson(json);
    case 'beardMajestic':
      return AvataaarTypeFacialHairBeardMajestic.fromJson(json);
    case 'moustacheFancy':
      return AvataaarTypeFacialHairMoustacheFancy.fromJson(json);
    case 'moustacheMagnum':
      return AvataaarTypeFacialHairMoustacheMagnum.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarFacialHair',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarFacialHairTearOff {
  const _$AvataaarFacialHairTearOff();

  AvataaarTypeFacialHairBlank blank(
      [@ColorSerialiser() Color color = AvataaarFacialHair.defaultHairColor]) {
    return AvataaarTypeFacialHairBlank(
      color,
    );
  }

  AvataaarTypeFacialHairBeardMedium beardMedium(
      [@ColorSerialiser() Color color = AvataaarFacialHair.defaultHairColor]) {
    return AvataaarTypeFacialHairBeardMedium(
      color,
    );
  }

  AvataaarTypeFacialHairBeardLight beardLight(
      [@ColorSerialiser() Color color = AvataaarFacialHair.defaultHairColor]) {
    return AvataaarTypeFacialHairBeardLight(
      color,
    );
  }

  AvataaarTypeFacialHairBeardMajestic beardMajestic(
      [@ColorSerialiser() Color color = AvataaarFacialHair.defaultHairColor]) {
    return AvataaarTypeFacialHairBeardMajestic(
      color,
    );
  }

  AvataaarTypeFacialHairMoustacheFancy moustacheFancy(
      [@ColorSerialiser() Color color = AvataaarFacialHair.defaultHairColor]) {
    return AvataaarTypeFacialHairMoustacheFancy(
      color,
    );
  }

  AvataaarTypeFacialHairMoustacheMagnum moustacheMagnum(
      [@ColorSerialiser() Color color = AvataaarFacialHair.defaultHairColor]) {
    return AvataaarTypeFacialHairMoustacheMagnum(
      color,
    );
  }

  AvataaarFacialHair fromJson(Map<String, Object?> json) {
    return AvataaarFacialHair.fromJson(json);
  }
}

/// @nodoc
const $AvataaarFacialHair = _$AvataaarFacialHairTearOff();

/// @nodoc
mixin _$AvataaarFacialHair {
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;

  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $AvataaarFacialHairCopyWith<AvataaarFacialHair> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarFacialHairCopyWith<$Res> {
  factory $AvataaarFacialHairCopyWith(
          AvataaarFacialHair value, $Res Function(AvataaarFacialHair) then) =
      _$AvataaarFacialHairCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarFacialHairCopyWithImpl<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  _$AvataaarFacialHairCopyWithImpl(this._value, this._then);

  final AvataaarFacialHair _value;
  // ignore: unused_field
  final $Res Function(AvataaarFacialHair) _then;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_value.copyWith(
      color: color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
abstract class $AvataaarTypeFacialHairBlankCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory $AvataaarTypeFacialHairBlankCopyWith(
          AvataaarTypeFacialHairBlank value,
          $Res Function(AvataaarTypeFacialHairBlank) then) =
      _$AvataaarTypeFacialHairBlankCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeFacialHairBlankCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements $AvataaarTypeFacialHairBlankCopyWith<$Res> {
  _$AvataaarTypeFacialHairBlankCopyWithImpl(AvataaarTypeFacialHairBlank _value,
      $Res Function(AvataaarTypeFacialHairBlank) _then)
      : super(_value, (v) => _then(v as AvataaarTypeFacialHairBlank));

  @override
  AvataaarTypeFacialHairBlank get _value =>
      super._value as AvataaarTypeFacialHairBlank;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeFacialHairBlank(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairBlank extends AvataaarTypeFacialHairBlank {
  const _$AvataaarTypeFacialHairBlank(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'blank',
        super._();

  factory _$AvataaarTypeFacialHairBlank.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairBlankFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.blank(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeFacialHairBlank &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeFacialHairBlankCopyWith<AvataaarTypeFacialHairBlank>
      get copyWith => _$AvataaarTypeFacialHairBlankCopyWithImpl<
          AvataaarTypeFacialHairBlank>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return blank(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return blank?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return blank(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return blank?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (blank != null) {
      return blank(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairBlankToJson(this);
  }
}

abstract class AvataaarTypeFacialHairBlank extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairBlank([@ColorSerialiser() Color color]) =
      _$AvataaarTypeFacialHairBlank;
  const AvataaarTypeFacialHairBlank._() : super._();

  factory AvataaarTypeFacialHairBlank.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeFacialHairBlank.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeFacialHairBlankCopyWith<AvataaarTypeFacialHairBlank>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeFacialHairBeardMediumCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory $AvataaarTypeFacialHairBeardMediumCopyWith(
          AvataaarTypeFacialHairBeardMedium value,
          $Res Function(AvataaarTypeFacialHairBeardMedium) then) =
      _$AvataaarTypeFacialHairBeardMediumCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeFacialHairBeardMediumCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements $AvataaarTypeFacialHairBeardMediumCopyWith<$Res> {
  _$AvataaarTypeFacialHairBeardMediumCopyWithImpl(
      AvataaarTypeFacialHairBeardMedium _value,
      $Res Function(AvataaarTypeFacialHairBeardMedium) _then)
      : super(_value, (v) => _then(v as AvataaarTypeFacialHairBeardMedium));

  @override
  AvataaarTypeFacialHairBeardMedium get _value =>
      super._value as AvataaarTypeFacialHairBeardMedium;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeFacialHairBeardMedium(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairBeardMedium
    extends AvataaarTypeFacialHairBeardMedium {
  const _$AvataaarTypeFacialHairBeardMedium(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'beardMedium',
        super._();

  factory _$AvataaarTypeFacialHairBeardMedium.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairBeardMediumFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.beardMedium(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeFacialHairBeardMedium &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeFacialHairBeardMediumCopyWith<AvataaarTypeFacialHairBeardMedium>
      get copyWith => _$AvataaarTypeFacialHairBeardMediumCopyWithImpl<
          AvataaarTypeFacialHairBeardMedium>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return beardMedium(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return beardMedium?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMedium != null) {
      return beardMedium(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return beardMedium(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return beardMedium?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMedium != null) {
      return beardMedium(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairBeardMediumToJson(this);
  }
}

abstract class AvataaarTypeFacialHairBeardMedium extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairBeardMedium(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeFacialHairBeardMedium;
  const AvataaarTypeFacialHairBeardMedium._() : super._();

  factory AvataaarTypeFacialHairBeardMedium.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeFacialHairBeardMedium.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeFacialHairBeardMediumCopyWith<AvataaarTypeFacialHairBeardMedium>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeFacialHairBeardLightCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory $AvataaarTypeFacialHairBeardLightCopyWith(
          AvataaarTypeFacialHairBeardLight value,
          $Res Function(AvataaarTypeFacialHairBeardLight) then) =
      _$AvataaarTypeFacialHairBeardLightCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeFacialHairBeardLightCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements $AvataaarTypeFacialHairBeardLightCopyWith<$Res> {
  _$AvataaarTypeFacialHairBeardLightCopyWithImpl(
      AvataaarTypeFacialHairBeardLight _value,
      $Res Function(AvataaarTypeFacialHairBeardLight) _then)
      : super(_value, (v) => _then(v as AvataaarTypeFacialHairBeardLight));

  @override
  AvataaarTypeFacialHairBeardLight get _value =>
      super._value as AvataaarTypeFacialHairBeardLight;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeFacialHairBeardLight(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairBeardLight
    extends AvataaarTypeFacialHairBeardLight {
  const _$AvataaarTypeFacialHairBeardLight(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'beardLight',
        super._();

  factory _$AvataaarTypeFacialHairBeardLight.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairBeardLightFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.beardLight(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeFacialHairBeardLight &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeFacialHairBeardLightCopyWith<AvataaarTypeFacialHairBeardLight>
      get copyWith => _$AvataaarTypeFacialHairBeardLightCopyWithImpl<
          AvataaarTypeFacialHairBeardLight>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return beardLight(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return beardLight?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardLight != null) {
      return beardLight(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return beardLight(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return beardLight?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardLight != null) {
      return beardLight(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairBeardLightToJson(this);
  }
}

abstract class AvataaarTypeFacialHairBeardLight extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairBeardLight(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeFacialHairBeardLight;
  const AvataaarTypeFacialHairBeardLight._() : super._();

  factory AvataaarTypeFacialHairBeardLight.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeFacialHairBeardLight.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeFacialHairBeardLightCopyWith<AvataaarTypeFacialHairBeardLight>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeFacialHairBeardMajesticCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory $AvataaarTypeFacialHairBeardMajesticCopyWith(
          AvataaarTypeFacialHairBeardMajestic value,
          $Res Function(AvataaarTypeFacialHairBeardMajestic) then) =
      _$AvataaarTypeFacialHairBeardMajesticCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeFacialHairBeardMajesticCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements $AvataaarTypeFacialHairBeardMajesticCopyWith<$Res> {
  _$AvataaarTypeFacialHairBeardMajesticCopyWithImpl(
      AvataaarTypeFacialHairBeardMajestic _value,
      $Res Function(AvataaarTypeFacialHairBeardMajestic) _then)
      : super(_value, (v) => _then(v as AvataaarTypeFacialHairBeardMajestic));

  @override
  AvataaarTypeFacialHairBeardMajestic get _value =>
      super._value as AvataaarTypeFacialHairBeardMajestic;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeFacialHairBeardMajestic(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairBeardMajestic
    extends AvataaarTypeFacialHairBeardMajestic {
  const _$AvataaarTypeFacialHairBeardMajestic(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'beardMajestic',
        super._();

  factory _$AvataaarTypeFacialHairBeardMajestic.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairBeardMajesticFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.beardMajestic(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeFacialHairBeardMajestic &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeFacialHairBeardMajesticCopyWith<
          AvataaarTypeFacialHairBeardMajestic>
      get copyWith => _$AvataaarTypeFacialHairBeardMajesticCopyWithImpl<
          AvataaarTypeFacialHairBeardMajestic>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return beardMajestic(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return beardMajestic?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMajestic != null) {
      return beardMajestic(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return beardMajestic(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return beardMajestic?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (beardMajestic != null) {
      return beardMajestic(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairBeardMajesticToJson(this);
  }
}

abstract class AvataaarTypeFacialHairBeardMajestic extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairBeardMajestic(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeFacialHairBeardMajestic;
  const AvataaarTypeFacialHairBeardMajestic._() : super._();

  factory AvataaarTypeFacialHairBeardMajestic.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeFacialHairBeardMajestic.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeFacialHairBeardMajesticCopyWith<
          AvataaarTypeFacialHairBeardMajestic>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeFacialHairMoustacheFancyCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory $AvataaarTypeFacialHairMoustacheFancyCopyWith(
          AvataaarTypeFacialHairMoustacheFancy value,
          $Res Function(AvataaarTypeFacialHairMoustacheFancy) then) =
      _$AvataaarTypeFacialHairMoustacheFancyCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeFacialHairMoustacheFancyCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements $AvataaarTypeFacialHairMoustacheFancyCopyWith<$Res> {
  _$AvataaarTypeFacialHairMoustacheFancyCopyWithImpl(
      AvataaarTypeFacialHairMoustacheFancy _value,
      $Res Function(AvataaarTypeFacialHairMoustacheFancy) _then)
      : super(_value, (v) => _then(v as AvataaarTypeFacialHairMoustacheFancy));

  @override
  AvataaarTypeFacialHairMoustacheFancy get _value =>
      super._value as AvataaarTypeFacialHairMoustacheFancy;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeFacialHairMoustacheFancy(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairMoustacheFancy
    extends AvataaarTypeFacialHairMoustacheFancy {
  const _$AvataaarTypeFacialHairMoustacheFancy(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'moustacheFancy',
        super._();

  factory _$AvataaarTypeFacialHairMoustacheFancy.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairMoustacheFancyFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.moustacheFancy(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeFacialHairMoustacheFancy &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeFacialHairMoustacheFancyCopyWith<
          AvataaarTypeFacialHairMoustacheFancy>
      get copyWith => _$AvataaarTypeFacialHairMoustacheFancyCopyWithImpl<
          AvataaarTypeFacialHairMoustacheFancy>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return moustacheFancy(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return moustacheFancy?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheFancy != null) {
      return moustacheFancy(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return moustacheFancy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return moustacheFancy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheFancy != null) {
      return moustacheFancy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairMoustacheFancyToJson(this);
  }
}

abstract class AvataaarTypeFacialHairMoustacheFancy extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairMoustacheFancy(
          [@ColorSerialiser() Color color]) =
      _$AvataaarTypeFacialHairMoustacheFancy;
  const AvataaarTypeFacialHairMoustacheFancy._() : super._();

  factory AvataaarTypeFacialHairMoustacheFancy.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeFacialHairMoustacheFancy.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeFacialHairMoustacheFancyCopyWith<
          AvataaarTypeFacialHairMoustacheFancy>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeFacialHairMoustacheMagnumCopyWith<$Res>
    implements $AvataaarFacialHairCopyWith<$Res> {
  factory $AvataaarTypeFacialHairMoustacheMagnumCopyWith(
          AvataaarTypeFacialHairMoustacheMagnum value,
          $Res Function(AvataaarTypeFacialHairMoustacheMagnum) then) =
      _$AvataaarTypeFacialHairMoustacheMagnumCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeFacialHairMoustacheMagnumCopyWithImpl<$Res>
    extends _$AvataaarFacialHairCopyWithImpl<$Res>
    implements $AvataaarTypeFacialHairMoustacheMagnumCopyWith<$Res> {
  _$AvataaarTypeFacialHairMoustacheMagnumCopyWithImpl(
      AvataaarTypeFacialHairMoustacheMagnum _value,
      $Res Function(AvataaarTypeFacialHairMoustacheMagnum) _then)
      : super(_value, (v) => _then(v as AvataaarTypeFacialHairMoustacheMagnum));

  @override
  AvataaarTypeFacialHairMoustacheMagnum get _value =>
      super._value as AvataaarTypeFacialHairMoustacheMagnum;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeFacialHairMoustacheMagnum(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeFacialHairMoustacheMagnum
    extends AvataaarTypeFacialHairMoustacheMagnum {
  const _$AvataaarTypeFacialHairMoustacheMagnum(
      [@ColorSerialiser() this.color = AvataaarFacialHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'moustacheMagnum',
        super._();

  factory _$AvataaarTypeFacialHairMoustacheMagnum.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeFacialHairMoustacheMagnumFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarFacialHair.moustacheMagnum(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeFacialHairMoustacheMagnum &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeFacialHairMoustacheMagnumCopyWith<
          AvataaarTypeFacialHairMoustacheMagnum>
      get copyWith => _$AvataaarTypeFacialHairMoustacheMagnumCopyWithImpl<
          AvataaarTypeFacialHairMoustacheMagnum>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) blank,
    required TResult Function(@ColorSerialiser() Color color) beardMedium,
    required TResult Function(@ColorSerialiser() Color color) beardLight,
    required TResult Function(@ColorSerialiser() Color color) beardMajestic,
    required TResult Function(@ColorSerialiser() Color color) moustacheFancy,
    required TResult Function(@ColorSerialiser() Color color) moustacheMagnum,
  }) {
    return moustacheMagnum(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
  }) {
    return moustacheMagnum?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? blank,
    TResult Function(@ColorSerialiser() Color color)? beardMedium,
    TResult Function(@ColorSerialiser() Color color)? beardLight,
    TResult Function(@ColorSerialiser() Color color)? beardMajestic,
    TResult Function(@ColorSerialiser() Color color)? moustacheFancy,
    TResult Function(@ColorSerialiser() Color color)? moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheMagnum != null) {
      return moustacheMagnum(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeFacialHairBlank value) blank,
    required TResult Function(AvataaarTypeFacialHairBeardMedium value)
        beardMedium,
    required TResult Function(AvataaarTypeFacialHairBeardLight value)
        beardLight,
    required TResult Function(AvataaarTypeFacialHairBeardMajestic value)
        beardMajestic,
    required TResult Function(AvataaarTypeFacialHairMoustacheFancy value)
        moustacheFancy,
    required TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)
        moustacheMagnum,
  }) {
    return moustacheMagnum(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
  }) {
    return moustacheMagnum?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeFacialHairBlank value)? blank,
    TResult Function(AvataaarTypeFacialHairBeardMedium value)? beardMedium,
    TResult Function(AvataaarTypeFacialHairBeardLight value)? beardLight,
    TResult Function(AvataaarTypeFacialHairBeardMajestic value)? beardMajestic,
    TResult Function(AvataaarTypeFacialHairMoustacheFancy value)?
        moustacheFancy,
    TResult Function(AvataaarTypeFacialHairMoustacheMagnum value)?
        moustacheMagnum,
    required TResult orElse(),
  }) {
    if (moustacheMagnum != null) {
      return moustacheMagnum(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeFacialHairMoustacheMagnumToJson(this);
  }
}

abstract class AvataaarTypeFacialHairMoustacheMagnum
    extends AvataaarFacialHair {
  const factory AvataaarTypeFacialHairMoustacheMagnum(
          [@ColorSerialiser() Color color]) =
      _$AvataaarTypeFacialHairMoustacheMagnum;
  const AvataaarTypeFacialHairMoustacheMagnum._() : super._();

  factory AvataaarTypeFacialHairMoustacheMagnum.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeFacialHairMoustacheMagnum.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeFacialHairMoustacheMagnumCopyWith<
          AvataaarTypeFacialHairMoustacheMagnum>
      get copyWith => throw _privateConstructorUsedError;
}

AvataaarHair _$AvataaarHairFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'noHair':
      return AvataaarTypeHairNoHair.fromJson(json);
    case 'eyepatch':
      return AvataaarTypeHairEyepatch.fromJson(json);
    case 'hat':
      return AvataaarTypeHairHat.fromJson(json);
    case 'hijab':
      return AvataaarTypeHairHijab.fromJson(json);
    case 'turban':
      return AvataaarTypeHairTurban.fromJson(json);
    case 'winterHat1':
      return AvataaarTypeHairWinterHat1.fromJson(json);
    case 'winterHat2':
      return AvataaarTypeHairWinterHat2.fromJson(json);
    case 'winterHat3':
      return AvataaarTypeHairWinterHat3.fromJson(json);
    case 'winterHat4':
      return AvataaarTypeHairWinterHat4.fromJson(json);
    case 'longHairBigHair':
      return AvataaarTypeHairLongHairBigHair.fromJson(json);
    case 'longHairBob':
      return AvataaarTypeHairLongHarBob.fromJson(json);
    case 'longHairBun':
      return AvataaarTypeHairLongHairBun.fromJson(json);
    case 'longHairCurly':
      return AvataaarTypeHairLongHairCurly.fromJson(json);
    case 'longHairCurvy':
      return AvataaarTypeHairLongHairCurvy.fromJson(json);
    case 'longHairDreads':
      return AvataaarTypeHairLongHairDreads.fromJson(json);
    case 'longHairFrida':
      return AvataaarTypeHairLongHairFrida.fromJson(json);
    case 'longHairFro':
      return AvataaarTypeHairLongHairFro.fromJson(json);
    case 'longHairFroBand':
      return AvataaarTypeHairLongHairFroBand.fromJson(json);
    case 'longHairNotTooLong':
      return AvataaarTypeHairLongHairNotTooLong.fromJson(json);
    case 'longHairShavedSides':
      return AvataaarTypeHairLongHairShavedSides.fromJson(json);
    case 'longHairMiaWallace':
      return AvataaarTypeHairLongHairMiaWallace.fromJson(json);
    case 'longHairStraight':
      return AvataaarTypeHairLongHairStraight.fromJson(json);
    case 'longHairStraight2':
      return AvataaarTypeHairLongHairStraight2.fromJson(json);
    case 'longHairStraightStrand':
      return AvataaarTypeHairLongHairStraightStrand.fromJson(json);
    case 'shortHairDreads01':
      return AvataaarTypeHairShortHairDreads01.fromJson(json);
    case 'shortHairDreads02':
      return AvataaarTypeHairShortHairDreads02.fromJson(json);
    case 'shortHairFrizzle':
      return AvataaarTypeHairShortHairFrizzle.fromJson(json);
    case 'shortHairShaggyMullet':
      return AvataaarTypeHairShortHairShaggyMullet.fromJson(json);
    case 'shortHairShortCurly':
      return AvataaarTypeHairShortHairShortCurly.fromJson(json);
    case 'shortHairShortFlat':
      return AvataaarTypeHairShortHairShortFlat.fromJson(json);
    case 'shortHairShortRound':
      return AvataaarTypeHairShortHairShortRound.fromJson(json);
    case 'shortHairShortWaved':
      return AvataaarTypeHairShortHairShortWaved.fromJson(json);
    case 'shortHairSides':
      return AvataaarTypeHairShortHairSides.fromJson(json);
    case 'shortHairTheCaesar':
      return AvataaarTypeHairShortHairTheCaesar.fromJson(json);
    case 'shortHairTheCaesarSidePart':
      return AvataaarTypeHairShortHairTheCaesarSidePart.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarHair',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarHairTearOff {
  const _$AvataaarHairTearOff();

  AvataaarTypeHairNoHair noHair(
      [@ColorSerialiser() Color color = Colors.transparent]) {
    return AvataaarTypeHairNoHair(
      color,
    );
  }

  AvataaarTypeHairEyepatch eyepatch(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHatColorEyePatch]) {
    return AvataaarTypeHairEyepatch(
      color,
    );
  }

  AvataaarTypeHairHat hat(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHatColorHat]) {
    return AvataaarTypeHairHat(
      color,
    );
  }

  AvataaarTypeHairHijab hijab(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHatColorBlue03]) {
    return AvataaarTypeHairHijab(
      color,
    );
  }

  AvataaarTypeHairTurban turban(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHatColorBlue03]) {
    return AvataaarTypeHairTurban(
      color,
    );
  }

  AvataaarTypeHairWinterHat1 winterHat1(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHatColorRed]) {
    return AvataaarTypeHairWinterHat1(
      color,
    );
  }

  AvataaarTypeHairWinterHat2 winterHat2(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHatColorBlue01]) {
    return AvataaarTypeHairWinterHat2(
      color,
    );
  }

  AvataaarTypeHairWinterHat3 winterHat3(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHatColorRed]) {
    return AvataaarTypeHairWinterHat3(
      color,
    );
  }

  AvataaarTypeHairWinterHat4 winterHat4(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHatColorRed]) {
    return AvataaarTypeHairWinterHat4(
      color,
    );
  }

  AvataaarTypeHairLongHairBigHair longHairBigHair(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairBigHair(
      color,
    );
  }

  AvataaarTypeHairLongHarBob longHairBob(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHarBob(
      color,
    );
  }

  AvataaarTypeHairLongHairBun longHairBun(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairBun(
      color,
    );
  }

  AvataaarTypeHairLongHairCurly longHairCurly(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairCurly(
      color,
    );
  }

  AvataaarTypeHairLongHairCurvy longHairCurvy(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairCurvy(
      color,
    );
  }

  AvataaarTypeHairLongHairDreads longHairDreads(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairDreads(
      color,
    );
  }

  AvataaarTypeHairLongHairFrida longHairFrida(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHatColorHat]) {
    return AvataaarTypeHairLongHairFrida(
      color,
    );
  }

  AvataaarTypeHairLongHairFro longHairFro(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairFro(
      color,
    );
  }

  AvataaarTypeHairLongHairFroBand longHairFroBand(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairFroBand(
      color,
    );
  }

  AvataaarTypeHairLongHairNotTooLong longHairNotTooLong(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairNotTooLong(
      color,
    );
  }

  AvataaarTypeHairLongHairShavedSides longHairShavedSides(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairShavedSides(
      color,
    );
  }

  AvataaarTypeHairLongHairMiaWallace longHairMiaWallace(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairMiaWallace(
      color,
    );
  }

  AvataaarTypeHairLongHairStraight longHairStraight(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairStraight(
      color,
    );
  }

  AvataaarTypeHairLongHairStraight2 longHairStraight2(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairStraight2(
      color,
    );
  }

  AvataaarTypeHairLongHairStraightStrand longHairStraightStrand(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairLongHairStraightStrand(
      color,
    );
  }

  AvataaarTypeHairShortHairDreads01 shortHairDreads01(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairShortHairDreads01(
      color,
    );
  }

  AvataaarTypeHairShortHairDreads02 shortHairDreads02(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairShortHairDreads02(
      color,
    );
  }

  AvataaarTypeHairShortHairFrizzle shortHairFrizzle(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairShortHairFrizzle(
      color,
    );
  }

  AvataaarTypeHairShortHairShaggyMullet shortHairShaggyMullet(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairShortHairShaggyMullet(
      color,
    );
  }

  AvataaarTypeHairShortHairShortCurly shortHairShortCurly(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairShortHairShortCurly(
      color,
    );
  }

  AvataaarTypeHairShortHairShortFlat shortHairShortFlat(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairShortHairShortFlat(
      color,
    );
  }

  AvataaarTypeHairShortHairShortRound shortHairShortRound(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairShortHairShortRound(
      color,
    );
  }

  AvataaarTypeHairShortHairShortWaved shortHairShortWaved(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairShortHairShortWaved(
      color,
    );
  }

  AvataaarTypeHairShortHairSides shortHairSides(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairShortHairSides(
      color,
    );
  }

  AvataaarTypeHairShortHairTheCaesar shortHairTheCaesar(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairShortHairTheCaesar(
      color,
    );
  }

  AvataaarTypeHairShortHairTheCaesarSidePart shortHairTheCaesarSidePart(
      [@ColorSerialiser() Color color = AvataaarHair.defaultHairColor]) {
    return AvataaarTypeHairShortHairTheCaesarSidePart(
      color,
    );
  }

  AvataaarHair fromJson(Map<String, Object?> json) {
    return AvataaarHair.fromJson(json);
  }
}

/// @nodoc
const $AvataaarHair = _$AvataaarHairTearOff();

/// @nodoc
mixin _$AvataaarHair {
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;

  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $AvataaarHairCopyWith<AvataaarHair> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarHairCopyWith<$Res> {
  factory $AvataaarHairCopyWith(
          AvataaarHair value, $Res Function(AvataaarHair) then) =
      _$AvataaarHairCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarHairCopyWithImpl<$Res> implements $AvataaarHairCopyWith<$Res> {
  _$AvataaarHairCopyWithImpl(this._value, this._then);

  final AvataaarHair _value;
  // ignore: unused_field
  final $Res Function(AvataaarHair) _then;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_value.copyWith(
      color: color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
abstract class $AvataaarTypeHairNoHairCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairNoHairCopyWith(AvataaarTypeHairNoHair value,
          $Res Function(AvataaarTypeHairNoHair) then) =
      _$AvataaarTypeHairNoHairCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairNoHairCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairNoHairCopyWith<$Res> {
  _$AvataaarTypeHairNoHairCopyWithImpl(AvataaarTypeHairNoHair _value,
      $Res Function(AvataaarTypeHairNoHair) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairNoHair));

  @override
  AvataaarTypeHairNoHair get _value => super._value as AvataaarTypeHairNoHair;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairNoHair(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairNoHair extends AvataaarTypeHairNoHair {
  const _$AvataaarTypeHairNoHair(
      [@ColorSerialiser() this.color = Colors.transparent, String? $type])
      : $type = $type ?? 'noHair',
        super._();

  factory _$AvataaarTypeHairNoHair.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairNoHairFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.noHair(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairNoHair &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairNoHairCopyWith<AvataaarTypeHairNoHair> get copyWith =>
      _$AvataaarTypeHairNoHairCopyWithImpl<AvataaarTypeHairNoHair>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return noHair(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return noHair?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (noHair != null) {
      return noHair(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return noHair(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return noHair?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (noHair != null) {
      return noHair(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairNoHairToJson(this);
  }
}

abstract class AvataaarTypeHairNoHair extends AvataaarHair {
  const factory AvataaarTypeHairNoHair([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairNoHair;
  const AvataaarTypeHairNoHair._() : super._();

  factory AvataaarTypeHairNoHair.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairNoHair.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairNoHairCopyWith<AvataaarTypeHairNoHair> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairEyepatchCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairEyepatchCopyWith(AvataaarTypeHairEyepatch value,
          $Res Function(AvataaarTypeHairEyepatch) then) =
      _$AvataaarTypeHairEyepatchCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairEyepatchCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairEyepatchCopyWith<$Res> {
  _$AvataaarTypeHairEyepatchCopyWithImpl(AvataaarTypeHairEyepatch _value,
      $Res Function(AvataaarTypeHairEyepatch) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairEyepatch));

  @override
  AvataaarTypeHairEyepatch get _value =>
      super._value as AvataaarTypeHairEyepatch;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairEyepatch(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairEyepatch extends AvataaarTypeHairEyepatch {
  const _$AvataaarTypeHairEyepatch(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorEyePatch,
      String? $type])
      : $type = $type ?? 'eyepatch',
        super._();

  factory _$AvataaarTypeHairEyepatch.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairEyepatchFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.eyepatch(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairEyepatch &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairEyepatchCopyWith<AvataaarTypeHairEyepatch> get copyWith =>
      _$AvataaarTypeHairEyepatchCopyWithImpl<AvataaarTypeHairEyepatch>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (eyepatch != null) {
      return eyepatch(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return eyepatch?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (eyepatch != null) {
      return eyepatch(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairEyepatchToJson(this);
  }
}

abstract class AvataaarTypeHairEyepatch extends AvataaarHair {
  const factory AvataaarTypeHairEyepatch([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairEyepatch;
  const AvataaarTypeHairEyepatch._() : super._();

  factory AvataaarTypeHairEyepatch.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairEyepatch.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairEyepatchCopyWith<AvataaarTypeHairEyepatch> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairHatCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairHatCopyWith(
          AvataaarTypeHairHat value, $Res Function(AvataaarTypeHairHat) then) =
      _$AvataaarTypeHairHatCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairHatCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairHatCopyWith<$Res> {
  _$AvataaarTypeHairHatCopyWithImpl(
      AvataaarTypeHairHat _value, $Res Function(AvataaarTypeHairHat) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairHat));

  @override
  AvataaarTypeHairHat get _value => super._value as AvataaarTypeHairHat;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairHat(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairHat extends AvataaarTypeHairHat {
  const _$AvataaarTypeHairHat(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorHat,
      String? $type])
      : $type = $type ?? 'hat',
        super._();

  factory _$AvataaarTypeHairHat.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairHatFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.hat(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairHat &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairHatCopyWith<AvataaarTypeHairHat> get copyWith =>
      _$AvataaarTypeHairHatCopyWithImpl<AvataaarTypeHairHat>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return hat(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return hat?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hat != null) {
      return hat(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return hat(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return hat?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hat != null) {
      return hat(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairHatToJson(this);
  }
}

abstract class AvataaarTypeHairHat extends AvataaarHair {
  const factory AvataaarTypeHairHat([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairHat;
  const AvataaarTypeHairHat._() : super._();

  factory AvataaarTypeHairHat.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairHat.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairHatCopyWith<AvataaarTypeHairHat> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairHijabCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairHijabCopyWith(AvataaarTypeHairHijab value,
          $Res Function(AvataaarTypeHairHijab) then) =
      _$AvataaarTypeHairHijabCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairHijabCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairHijabCopyWith<$Res> {
  _$AvataaarTypeHairHijabCopyWithImpl(
      AvataaarTypeHairHijab _value, $Res Function(AvataaarTypeHairHijab) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairHijab));

  @override
  AvataaarTypeHairHijab get _value => super._value as AvataaarTypeHairHijab;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairHijab(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairHijab extends AvataaarTypeHairHijab {
  const _$AvataaarTypeHairHijab(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorBlue03,
      String? $type])
      : $type = $type ?? 'hijab',
        super._();

  factory _$AvataaarTypeHairHijab.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairHijabFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.hijab(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairHijab &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairHijabCopyWith<AvataaarTypeHairHijab> get copyWith =>
      _$AvataaarTypeHairHijabCopyWithImpl<AvataaarTypeHairHijab>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return hijab(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return hijab?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hijab != null) {
      return hijab(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return hijab(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return hijab?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (hijab != null) {
      return hijab(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairHijabToJson(this);
  }
}

abstract class AvataaarTypeHairHijab extends AvataaarHair {
  const factory AvataaarTypeHairHijab([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairHijab;
  const AvataaarTypeHairHijab._() : super._();

  factory AvataaarTypeHairHijab.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairHijab.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairHijabCopyWith<AvataaarTypeHairHijab> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairTurbanCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairTurbanCopyWith(AvataaarTypeHairTurban value,
          $Res Function(AvataaarTypeHairTurban) then) =
      _$AvataaarTypeHairTurbanCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairTurbanCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairTurbanCopyWith<$Res> {
  _$AvataaarTypeHairTurbanCopyWithImpl(AvataaarTypeHairTurban _value,
      $Res Function(AvataaarTypeHairTurban) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairTurban));

  @override
  AvataaarTypeHairTurban get _value => super._value as AvataaarTypeHairTurban;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairTurban(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairTurban extends AvataaarTypeHairTurban {
  const _$AvataaarTypeHairTurban(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorBlue03,
      String? $type])
      : $type = $type ?? 'turban',
        super._();

  factory _$AvataaarTypeHairTurban.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairTurbanFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.turban(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairTurban &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairTurbanCopyWith<AvataaarTypeHairTurban> get copyWith =>
      _$AvataaarTypeHairTurbanCopyWithImpl<AvataaarTypeHairTurban>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return turban(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return turban?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (turban != null) {
      return turban(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return turban(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return turban?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (turban != null) {
      return turban(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairTurbanToJson(this);
  }
}

abstract class AvataaarTypeHairTurban extends AvataaarHair {
  const factory AvataaarTypeHairTurban([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairTurban;
  const AvataaarTypeHairTurban._() : super._();

  factory AvataaarTypeHairTurban.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairTurban.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairTurbanCopyWith<AvataaarTypeHairTurban> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairWinterHat1CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairWinterHat1CopyWith(AvataaarTypeHairWinterHat1 value,
          $Res Function(AvataaarTypeHairWinterHat1) then) =
      _$AvataaarTypeHairWinterHat1CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairWinterHat1CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairWinterHat1CopyWith<$Res> {
  _$AvataaarTypeHairWinterHat1CopyWithImpl(AvataaarTypeHairWinterHat1 _value,
      $Res Function(AvataaarTypeHairWinterHat1) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairWinterHat1));

  @override
  AvataaarTypeHairWinterHat1 get _value =>
      super._value as AvataaarTypeHairWinterHat1;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairWinterHat1(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairWinterHat1 extends AvataaarTypeHairWinterHat1 {
  const _$AvataaarTypeHairWinterHat1(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorRed,
      String? $type])
      : $type = $type ?? 'winterHat1',
        super._();

  factory _$AvataaarTypeHairWinterHat1.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairWinterHat1FromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat1(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairWinterHat1 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairWinterHat1CopyWith<AvataaarTypeHairWinterHat1>
      get copyWith =>
          _$AvataaarTypeHairWinterHat1CopyWithImpl<AvataaarTypeHairWinterHat1>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat1 != null) {
      return winterHat1(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat1?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat1 != null) {
      return winterHat1(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairWinterHat1ToJson(this);
  }
}

abstract class AvataaarTypeHairWinterHat1 extends AvataaarHair {
  const factory AvataaarTypeHairWinterHat1([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairWinterHat1;
  const AvataaarTypeHairWinterHat1._() : super._();

  factory AvataaarTypeHairWinterHat1.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairWinterHat1.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairWinterHat1CopyWith<AvataaarTypeHairWinterHat1>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairWinterHat2CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairWinterHat2CopyWith(AvataaarTypeHairWinterHat2 value,
          $Res Function(AvataaarTypeHairWinterHat2) then) =
      _$AvataaarTypeHairWinterHat2CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairWinterHat2CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairWinterHat2CopyWith<$Res> {
  _$AvataaarTypeHairWinterHat2CopyWithImpl(AvataaarTypeHairWinterHat2 _value,
      $Res Function(AvataaarTypeHairWinterHat2) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairWinterHat2));

  @override
  AvataaarTypeHairWinterHat2 get _value =>
      super._value as AvataaarTypeHairWinterHat2;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairWinterHat2(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairWinterHat2 extends AvataaarTypeHairWinterHat2 {
  const _$AvataaarTypeHairWinterHat2(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorBlue01,
      String? $type])
      : $type = $type ?? 'winterHat2',
        super._();

  factory _$AvataaarTypeHairWinterHat2.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairWinterHat2FromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat2(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairWinterHat2 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairWinterHat2CopyWith<AvataaarTypeHairWinterHat2>
      get copyWith =>
          _$AvataaarTypeHairWinterHat2CopyWithImpl<AvataaarTypeHairWinterHat2>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat2 != null) {
      return winterHat2(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat2?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat2 != null) {
      return winterHat2(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairWinterHat2ToJson(this);
  }
}

abstract class AvataaarTypeHairWinterHat2 extends AvataaarHair {
  const factory AvataaarTypeHairWinterHat2([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairWinterHat2;
  const AvataaarTypeHairWinterHat2._() : super._();

  factory AvataaarTypeHairWinterHat2.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairWinterHat2.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairWinterHat2CopyWith<AvataaarTypeHairWinterHat2>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairWinterHat3CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairWinterHat3CopyWith(AvataaarTypeHairWinterHat3 value,
          $Res Function(AvataaarTypeHairWinterHat3) then) =
      _$AvataaarTypeHairWinterHat3CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairWinterHat3CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairWinterHat3CopyWith<$Res> {
  _$AvataaarTypeHairWinterHat3CopyWithImpl(AvataaarTypeHairWinterHat3 _value,
      $Res Function(AvataaarTypeHairWinterHat3) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairWinterHat3));

  @override
  AvataaarTypeHairWinterHat3 get _value =>
      super._value as AvataaarTypeHairWinterHat3;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairWinterHat3(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairWinterHat3 extends AvataaarTypeHairWinterHat3 {
  const _$AvataaarTypeHairWinterHat3(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorRed,
      String? $type])
      : $type = $type ?? 'winterHat3',
        super._();

  factory _$AvataaarTypeHairWinterHat3.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairWinterHat3FromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat3(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairWinterHat3 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairWinterHat3CopyWith<AvataaarTypeHairWinterHat3>
      get copyWith =>
          _$AvataaarTypeHairWinterHat3CopyWithImpl<AvataaarTypeHairWinterHat3>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat3 != null) {
      return winterHat3(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat3?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat3 != null) {
      return winterHat3(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairWinterHat3ToJson(this);
  }
}

abstract class AvataaarTypeHairWinterHat3 extends AvataaarHair {
  const factory AvataaarTypeHairWinterHat3([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairWinterHat3;
  const AvataaarTypeHairWinterHat3._() : super._();

  factory AvataaarTypeHairWinterHat3.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairWinterHat3.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairWinterHat3CopyWith<AvataaarTypeHairWinterHat3>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairWinterHat4CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairWinterHat4CopyWith(AvataaarTypeHairWinterHat4 value,
          $Res Function(AvataaarTypeHairWinterHat4) then) =
      _$AvataaarTypeHairWinterHat4CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairWinterHat4CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairWinterHat4CopyWith<$Res> {
  _$AvataaarTypeHairWinterHat4CopyWithImpl(AvataaarTypeHairWinterHat4 _value,
      $Res Function(AvataaarTypeHairWinterHat4) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairWinterHat4));

  @override
  AvataaarTypeHairWinterHat4 get _value =>
      super._value as AvataaarTypeHairWinterHat4;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairWinterHat4(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairWinterHat4 extends AvataaarTypeHairWinterHat4 {
  const _$AvataaarTypeHairWinterHat4(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorRed,
      String? $type])
      : $type = $type ?? 'winterHat4',
        super._();

  factory _$AvataaarTypeHairWinterHat4.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairWinterHat4FromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.winterHat4(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairWinterHat4 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairWinterHat4CopyWith<AvataaarTypeHairWinterHat4>
      get copyWith =>
          _$AvataaarTypeHairWinterHat4CopyWithImpl<AvataaarTypeHairWinterHat4>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat4 != null) {
      return winterHat4(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return winterHat4?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (winterHat4 != null) {
      return winterHat4(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairWinterHat4ToJson(this);
  }
}

abstract class AvataaarTypeHairWinterHat4 extends AvataaarHair {
  const factory AvataaarTypeHairWinterHat4([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairWinterHat4;
  const AvataaarTypeHairWinterHat4._() : super._();

  factory AvataaarTypeHairWinterHat4.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairWinterHat4.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairWinterHat4CopyWith<AvataaarTypeHairWinterHat4>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairBigHairCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairBigHairCopyWith(
          AvataaarTypeHairLongHairBigHair value,
          $Res Function(AvataaarTypeHairLongHairBigHair) then) =
      _$AvataaarTypeHairLongHairBigHairCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairBigHairCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairBigHairCopyWith<$Res> {
  _$AvataaarTypeHairLongHairBigHairCopyWithImpl(
      AvataaarTypeHairLongHairBigHair _value,
      $Res Function(AvataaarTypeHairLongHairBigHair) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairBigHair));

  @override
  AvataaarTypeHairLongHairBigHair get _value =>
      super._value as AvataaarTypeHairLongHairBigHair;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairBigHair(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairBigHair
    extends AvataaarTypeHairLongHairBigHair {
  const _$AvataaarTypeHairLongHairBigHair(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairBigHair',
        super._();

  factory _$AvataaarTypeHairLongHairBigHair.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairBigHairFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairBigHair(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairBigHair &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairBigHairCopyWith<AvataaarTypeHairLongHairBigHair>
      get copyWith => _$AvataaarTypeHairLongHairBigHairCopyWithImpl<
          AvataaarTypeHairLongHairBigHair>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBigHair != null) {
      return longHairBigHair(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBigHair?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBigHair != null) {
      return longHairBigHair(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairBigHairToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairBigHair extends AvataaarHair {
  const factory AvataaarTypeHairLongHairBigHair(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairLongHairBigHair;
  const AvataaarTypeHairLongHairBigHair._() : super._();

  factory AvataaarTypeHairLongHairBigHair.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairBigHair.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairBigHairCopyWith<AvataaarTypeHairLongHairBigHair>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHarBobCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHarBobCopyWith(AvataaarTypeHairLongHarBob value,
          $Res Function(AvataaarTypeHairLongHarBob) then) =
      _$AvataaarTypeHairLongHarBobCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHarBobCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHarBobCopyWith<$Res> {
  _$AvataaarTypeHairLongHarBobCopyWithImpl(AvataaarTypeHairLongHarBob _value,
      $Res Function(AvataaarTypeHairLongHarBob) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHarBob));

  @override
  AvataaarTypeHairLongHarBob get _value =>
      super._value as AvataaarTypeHairLongHarBob;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHarBob(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHarBob extends AvataaarTypeHairLongHarBob {
  const _$AvataaarTypeHairLongHarBob(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairBob',
        super._();

  factory _$AvataaarTypeHairLongHarBob.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHarBobFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairBob(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHarBob &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHarBobCopyWith<AvataaarTypeHairLongHarBob>
      get copyWith =>
          _$AvataaarTypeHairLongHarBobCopyWithImpl<AvataaarTypeHairLongHarBob>(
              this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBob != null) {
      return longHairBob(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBob?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBob != null) {
      return longHairBob(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHarBobToJson(this);
  }
}

abstract class AvataaarTypeHairLongHarBob extends AvataaarHair {
  const factory AvataaarTypeHairLongHarBob([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairLongHarBob;
  const AvataaarTypeHairLongHarBob._() : super._();

  factory AvataaarTypeHairLongHarBob.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHarBob.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHarBobCopyWith<AvataaarTypeHairLongHarBob>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairBunCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairBunCopyWith(
          AvataaarTypeHairLongHairBun value,
          $Res Function(AvataaarTypeHairLongHairBun) then) =
      _$AvataaarTypeHairLongHairBunCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairBunCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairBunCopyWith<$Res> {
  _$AvataaarTypeHairLongHairBunCopyWithImpl(AvataaarTypeHairLongHairBun _value,
      $Res Function(AvataaarTypeHairLongHairBun) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairBun));

  @override
  AvataaarTypeHairLongHairBun get _value =>
      super._value as AvataaarTypeHairLongHairBun;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairBun(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairBun extends AvataaarTypeHairLongHairBun {
  const _$AvataaarTypeHairLongHairBun(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairBun',
        super._();

  factory _$AvataaarTypeHairLongHairBun.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairBunFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairBun(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairBun &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairBunCopyWith<AvataaarTypeHairLongHairBun>
      get copyWith => _$AvataaarTypeHairLongHairBunCopyWithImpl<
          AvataaarTypeHairLongHairBun>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBun != null) {
      return longHairBun(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairBun?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairBun != null) {
      return longHairBun(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairBunToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairBun extends AvataaarHair {
  const factory AvataaarTypeHairLongHairBun([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairLongHairBun;
  const AvataaarTypeHairLongHairBun._() : super._();

  factory AvataaarTypeHairLongHairBun.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairBun.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairBunCopyWith<AvataaarTypeHairLongHairBun>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairCurlyCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairCurlyCopyWith(
          AvataaarTypeHairLongHairCurly value,
          $Res Function(AvataaarTypeHairLongHairCurly) then) =
      _$AvataaarTypeHairLongHairCurlyCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairCurlyCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairCurlyCopyWith<$Res> {
  _$AvataaarTypeHairLongHairCurlyCopyWithImpl(
      AvataaarTypeHairLongHairCurly _value,
      $Res Function(AvataaarTypeHairLongHairCurly) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairCurly));

  @override
  AvataaarTypeHairLongHairCurly get _value =>
      super._value as AvataaarTypeHairLongHairCurly;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairCurly(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairCurly extends AvataaarTypeHairLongHairCurly {
  const _$AvataaarTypeHairLongHairCurly(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairCurly',
        super._();

  factory _$AvataaarTypeHairLongHairCurly.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairCurlyFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairCurly(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairCurly &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairCurlyCopyWith<AvataaarTypeHairLongHairCurly>
      get copyWith => _$AvataaarTypeHairLongHairCurlyCopyWithImpl<
          AvataaarTypeHairLongHairCurly>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurly != null) {
      return longHairCurly(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurly?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurly != null) {
      return longHairCurly(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairCurlyToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairCurly extends AvataaarHair {
  const factory AvataaarTypeHairLongHairCurly(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairLongHairCurly;
  const AvataaarTypeHairLongHairCurly._() : super._();

  factory AvataaarTypeHairLongHairCurly.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairCurly.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairCurlyCopyWith<AvataaarTypeHairLongHairCurly>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairCurvyCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairCurvyCopyWith(
          AvataaarTypeHairLongHairCurvy value,
          $Res Function(AvataaarTypeHairLongHairCurvy) then) =
      _$AvataaarTypeHairLongHairCurvyCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairCurvyCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairCurvyCopyWith<$Res> {
  _$AvataaarTypeHairLongHairCurvyCopyWithImpl(
      AvataaarTypeHairLongHairCurvy _value,
      $Res Function(AvataaarTypeHairLongHairCurvy) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairCurvy));

  @override
  AvataaarTypeHairLongHairCurvy get _value =>
      super._value as AvataaarTypeHairLongHairCurvy;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairCurvy(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairCurvy extends AvataaarTypeHairLongHairCurvy {
  const _$AvataaarTypeHairLongHairCurvy(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairCurvy',
        super._();

  factory _$AvataaarTypeHairLongHairCurvy.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairCurvyFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairCurvy(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairCurvy &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairCurvyCopyWith<AvataaarTypeHairLongHairCurvy>
      get copyWith => _$AvataaarTypeHairLongHairCurvyCopyWithImpl<
          AvataaarTypeHairLongHairCurvy>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurvy != null) {
      return longHairCurvy(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairCurvy?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairCurvy != null) {
      return longHairCurvy(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairCurvyToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairCurvy extends AvataaarHair {
  const factory AvataaarTypeHairLongHairCurvy(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairLongHairCurvy;
  const AvataaarTypeHairLongHairCurvy._() : super._();

  factory AvataaarTypeHairLongHairCurvy.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairCurvy.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairCurvyCopyWith<AvataaarTypeHairLongHairCurvy>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairDreadsCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairDreadsCopyWith(
          AvataaarTypeHairLongHairDreads value,
          $Res Function(AvataaarTypeHairLongHairDreads) then) =
      _$AvataaarTypeHairLongHairDreadsCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairDreadsCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairDreadsCopyWith<$Res> {
  _$AvataaarTypeHairLongHairDreadsCopyWithImpl(
      AvataaarTypeHairLongHairDreads _value,
      $Res Function(AvataaarTypeHairLongHairDreads) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairDreads));

  @override
  AvataaarTypeHairLongHairDreads get _value =>
      super._value as AvataaarTypeHairLongHairDreads;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairDreads(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairDreads extends AvataaarTypeHairLongHairDreads {
  const _$AvataaarTypeHairLongHairDreads(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairDreads',
        super._();

  factory _$AvataaarTypeHairLongHairDreads.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairDreadsFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairDreads(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairDreads &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairDreadsCopyWith<AvataaarTypeHairLongHairDreads>
      get copyWith => _$AvataaarTypeHairLongHairDreadsCopyWithImpl<
          AvataaarTypeHairLongHairDreads>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairDreads != null) {
      return longHairDreads(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairDreads?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairDreads != null) {
      return longHairDreads(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairDreadsToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairDreads extends AvataaarHair {
  const factory AvataaarTypeHairLongHairDreads(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairLongHairDreads;
  const AvataaarTypeHairLongHairDreads._() : super._();

  factory AvataaarTypeHairLongHairDreads.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairDreads.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairDreadsCopyWith<AvataaarTypeHairLongHairDreads>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairFridaCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairFridaCopyWith(
          AvataaarTypeHairLongHairFrida value,
          $Res Function(AvataaarTypeHairLongHairFrida) then) =
      _$AvataaarTypeHairLongHairFridaCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairFridaCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairFridaCopyWith<$Res> {
  _$AvataaarTypeHairLongHairFridaCopyWithImpl(
      AvataaarTypeHairLongHairFrida _value,
      $Res Function(AvataaarTypeHairLongHairFrida) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairFrida));

  @override
  AvataaarTypeHairLongHairFrida get _value =>
      super._value as AvataaarTypeHairLongHairFrida;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairFrida(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairFrida extends AvataaarTypeHairLongHairFrida {
  const _$AvataaarTypeHairLongHairFrida(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHatColorHat,
      String? $type])
      : $type = $type ?? 'longHairFrida',
        super._();

  factory _$AvataaarTypeHairLongHairFrida.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairFridaFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairFrida(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairFrida &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairFridaCopyWith<AvataaarTypeHairLongHairFrida>
      get copyWith => _$AvataaarTypeHairLongHairFridaCopyWithImpl<
          AvataaarTypeHairLongHairFrida>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFrida != null) {
      return longHairFrida(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFrida?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFrida != null) {
      return longHairFrida(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairFridaToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairFrida extends AvataaarHair {
  const factory AvataaarTypeHairLongHairFrida(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairLongHairFrida;
  const AvataaarTypeHairLongHairFrida._() : super._();

  factory AvataaarTypeHairLongHairFrida.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairFrida.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairFridaCopyWith<AvataaarTypeHairLongHairFrida>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairFroCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairFroCopyWith(
          AvataaarTypeHairLongHairFro value,
          $Res Function(AvataaarTypeHairLongHairFro) then) =
      _$AvataaarTypeHairLongHairFroCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairFroCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairFroCopyWith<$Res> {
  _$AvataaarTypeHairLongHairFroCopyWithImpl(AvataaarTypeHairLongHairFro _value,
      $Res Function(AvataaarTypeHairLongHairFro) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairFro));

  @override
  AvataaarTypeHairLongHairFro get _value =>
      super._value as AvataaarTypeHairLongHairFro;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairFro(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairFro extends AvataaarTypeHairLongHairFro {
  const _$AvataaarTypeHairLongHairFro(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairFro',
        super._();

  factory _$AvataaarTypeHairLongHairFro.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairFroFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairFro(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairFro &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairFroCopyWith<AvataaarTypeHairLongHairFro>
      get copyWith => _$AvataaarTypeHairLongHairFroCopyWithImpl<
          AvataaarTypeHairLongHairFro>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFro != null) {
      return longHairFro(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFro?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFro != null) {
      return longHairFro(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairFroToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairFro extends AvataaarHair {
  const factory AvataaarTypeHairLongHairFro([@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairLongHairFro;
  const AvataaarTypeHairLongHairFro._() : super._();

  factory AvataaarTypeHairLongHairFro.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairFro.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairFroCopyWith<AvataaarTypeHairLongHairFro>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairFroBandCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairFroBandCopyWith(
          AvataaarTypeHairLongHairFroBand value,
          $Res Function(AvataaarTypeHairLongHairFroBand) then) =
      _$AvataaarTypeHairLongHairFroBandCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairFroBandCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairFroBandCopyWith<$Res> {
  _$AvataaarTypeHairLongHairFroBandCopyWithImpl(
      AvataaarTypeHairLongHairFroBand _value,
      $Res Function(AvataaarTypeHairLongHairFroBand) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairFroBand));

  @override
  AvataaarTypeHairLongHairFroBand get _value =>
      super._value as AvataaarTypeHairLongHairFroBand;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairFroBand(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairFroBand
    extends AvataaarTypeHairLongHairFroBand {
  const _$AvataaarTypeHairLongHairFroBand(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairFroBand',
        super._();

  factory _$AvataaarTypeHairLongHairFroBand.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairFroBandFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairFroBand(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairFroBand &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairFroBandCopyWith<AvataaarTypeHairLongHairFroBand>
      get copyWith => _$AvataaarTypeHairLongHairFroBandCopyWithImpl<
          AvataaarTypeHairLongHairFroBand>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFroBand != null) {
      return longHairFroBand(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairFroBand?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairFroBand != null) {
      return longHairFroBand(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairFroBandToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairFroBand extends AvataaarHair {
  const factory AvataaarTypeHairLongHairFroBand(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairLongHairFroBand;
  const AvataaarTypeHairLongHairFroBand._() : super._();

  factory AvataaarTypeHairLongHairFroBand.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairFroBand.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairFroBandCopyWith<AvataaarTypeHairLongHairFroBand>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairNotTooLongCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairNotTooLongCopyWith(
          AvataaarTypeHairLongHairNotTooLong value,
          $Res Function(AvataaarTypeHairLongHairNotTooLong) then) =
      _$AvataaarTypeHairLongHairNotTooLongCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairNotTooLongCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairNotTooLongCopyWith<$Res> {
  _$AvataaarTypeHairLongHairNotTooLongCopyWithImpl(
      AvataaarTypeHairLongHairNotTooLong _value,
      $Res Function(AvataaarTypeHairLongHairNotTooLong) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairNotTooLong));

  @override
  AvataaarTypeHairLongHairNotTooLong get _value =>
      super._value as AvataaarTypeHairLongHairNotTooLong;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairNotTooLong(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairNotTooLong
    extends AvataaarTypeHairLongHairNotTooLong {
  const _$AvataaarTypeHairLongHairNotTooLong(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairNotTooLong',
        super._();

  factory _$AvataaarTypeHairLongHairNotTooLong.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairNotTooLongFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairNotTooLong(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairNotTooLong &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairNotTooLongCopyWith<
          AvataaarTypeHairLongHairNotTooLong>
      get copyWith => _$AvataaarTypeHairLongHairNotTooLongCopyWithImpl<
          AvataaarTypeHairLongHairNotTooLong>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairNotTooLong != null) {
      return longHairNotTooLong(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairNotTooLong?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairNotTooLong != null) {
      return longHairNotTooLong(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairNotTooLongToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairNotTooLong extends AvataaarHair {
  const factory AvataaarTypeHairLongHairNotTooLong(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairLongHairNotTooLong;
  const AvataaarTypeHairLongHairNotTooLong._() : super._();

  factory AvataaarTypeHairLongHairNotTooLong.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairNotTooLong.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairNotTooLongCopyWith<
          AvataaarTypeHairLongHairNotTooLong>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairShavedSidesCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairShavedSidesCopyWith(
          AvataaarTypeHairLongHairShavedSides value,
          $Res Function(AvataaarTypeHairLongHairShavedSides) then) =
      _$AvataaarTypeHairLongHairShavedSidesCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairShavedSidesCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairShavedSidesCopyWith<$Res> {
  _$AvataaarTypeHairLongHairShavedSidesCopyWithImpl(
      AvataaarTypeHairLongHairShavedSides _value,
      $Res Function(AvataaarTypeHairLongHairShavedSides) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairShavedSides));

  @override
  AvataaarTypeHairLongHairShavedSides get _value =>
      super._value as AvataaarTypeHairLongHairShavedSides;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairShavedSides(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairShavedSides
    extends AvataaarTypeHairLongHairShavedSides {
  const _$AvataaarTypeHairLongHairShavedSides(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairShavedSides',
        super._();

  factory _$AvataaarTypeHairLongHairShavedSides.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairShavedSidesFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairShavedSides(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairShavedSides &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairShavedSidesCopyWith<
          AvataaarTypeHairLongHairShavedSides>
      get copyWith => _$AvataaarTypeHairLongHairShavedSidesCopyWithImpl<
          AvataaarTypeHairLongHairShavedSides>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairShavedSides != null) {
      return longHairShavedSides(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairShavedSides?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairShavedSides != null) {
      return longHairShavedSides(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairShavedSidesToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairShavedSides extends AvataaarHair {
  const factory AvataaarTypeHairLongHairShavedSides(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairLongHairShavedSides;
  const AvataaarTypeHairLongHairShavedSides._() : super._();

  factory AvataaarTypeHairLongHairShavedSides.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairShavedSides.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairShavedSidesCopyWith<
          AvataaarTypeHairLongHairShavedSides>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairMiaWallaceCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairMiaWallaceCopyWith(
          AvataaarTypeHairLongHairMiaWallace value,
          $Res Function(AvataaarTypeHairLongHairMiaWallace) then) =
      _$AvataaarTypeHairLongHairMiaWallaceCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairMiaWallaceCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairMiaWallaceCopyWith<$Res> {
  _$AvataaarTypeHairLongHairMiaWallaceCopyWithImpl(
      AvataaarTypeHairLongHairMiaWallace _value,
      $Res Function(AvataaarTypeHairLongHairMiaWallace) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairMiaWallace));

  @override
  AvataaarTypeHairLongHairMiaWallace get _value =>
      super._value as AvataaarTypeHairLongHairMiaWallace;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairMiaWallace(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairMiaWallace
    extends AvataaarTypeHairLongHairMiaWallace {
  const _$AvataaarTypeHairLongHairMiaWallace(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairMiaWallace',
        super._();

  factory _$AvataaarTypeHairLongHairMiaWallace.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairMiaWallaceFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairMiaWallace(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairMiaWallace &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairMiaWallaceCopyWith<
          AvataaarTypeHairLongHairMiaWallace>
      get copyWith => _$AvataaarTypeHairLongHairMiaWallaceCopyWithImpl<
          AvataaarTypeHairLongHairMiaWallace>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairMiaWallace != null) {
      return longHairMiaWallace(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairMiaWallace?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairMiaWallace != null) {
      return longHairMiaWallace(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairMiaWallaceToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairMiaWallace extends AvataaarHair {
  const factory AvataaarTypeHairLongHairMiaWallace(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairLongHairMiaWallace;
  const AvataaarTypeHairLongHairMiaWallace._() : super._();

  factory AvataaarTypeHairLongHairMiaWallace.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairMiaWallace.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairMiaWallaceCopyWith<
          AvataaarTypeHairLongHairMiaWallace>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairStraightCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairStraightCopyWith(
          AvataaarTypeHairLongHairStraight value,
          $Res Function(AvataaarTypeHairLongHairStraight) then) =
      _$AvataaarTypeHairLongHairStraightCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairStraightCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairStraightCopyWith<$Res> {
  _$AvataaarTypeHairLongHairStraightCopyWithImpl(
      AvataaarTypeHairLongHairStraight _value,
      $Res Function(AvataaarTypeHairLongHairStraight) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairStraight));

  @override
  AvataaarTypeHairLongHairStraight get _value =>
      super._value as AvataaarTypeHairLongHairStraight;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairStraight(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairStraight
    extends AvataaarTypeHairLongHairStraight {
  const _$AvataaarTypeHairLongHairStraight(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairStraight',
        super._();

  factory _$AvataaarTypeHairLongHairStraight.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairStraightFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairStraight(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairStraight &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairStraightCopyWith<AvataaarTypeHairLongHairStraight>
      get copyWith => _$AvataaarTypeHairLongHairStraightCopyWithImpl<
          AvataaarTypeHairLongHairStraight>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight != null) {
      return longHairStraight(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight != null) {
      return longHairStraight(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairStraightToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairStraight extends AvataaarHair {
  const factory AvataaarTypeHairLongHairStraight(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairLongHairStraight;
  const AvataaarTypeHairLongHairStraight._() : super._();

  factory AvataaarTypeHairLongHairStraight.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairStraight.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairStraightCopyWith<AvataaarTypeHairLongHairStraight>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairStraight2CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairStraight2CopyWith(
          AvataaarTypeHairLongHairStraight2 value,
          $Res Function(AvataaarTypeHairLongHairStraight2) then) =
      _$AvataaarTypeHairLongHairStraight2CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairStraight2CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairStraight2CopyWith<$Res> {
  _$AvataaarTypeHairLongHairStraight2CopyWithImpl(
      AvataaarTypeHairLongHairStraight2 _value,
      $Res Function(AvataaarTypeHairLongHairStraight2) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairLongHairStraight2));

  @override
  AvataaarTypeHairLongHairStraight2 get _value =>
      super._value as AvataaarTypeHairLongHairStraight2;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairStraight2(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairStraight2
    extends AvataaarTypeHairLongHairStraight2 {
  const _$AvataaarTypeHairLongHairStraight2(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairStraight2',
        super._();

  factory _$AvataaarTypeHairLongHairStraight2.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairStraight2FromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairStraight2(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairStraight2 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairStraight2CopyWith<AvataaarTypeHairLongHairStraight2>
      get copyWith => _$AvataaarTypeHairLongHairStraight2CopyWithImpl<
          AvataaarTypeHairLongHairStraight2>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight2 != null) {
      return longHairStraight2(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraight2?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraight2 != null) {
      return longHairStraight2(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairStraight2ToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairStraight2 extends AvataaarHair {
  const factory AvataaarTypeHairLongHairStraight2(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairLongHairStraight2;
  const AvataaarTypeHairLongHairStraight2._() : super._();

  factory AvataaarTypeHairLongHairStraight2.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeHairLongHairStraight2.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairStraight2CopyWith<AvataaarTypeHairLongHairStraight2>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairLongHairStraightStrandCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairLongHairStraightStrandCopyWith(
          AvataaarTypeHairLongHairStraightStrand value,
          $Res Function(AvataaarTypeHairLongHairStraightStrand) then) =
      _$AvataaarTypeHairLongHairStraightStrandCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairLongHairStraightStrandCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairLongHairStraightStrandCopyWith<$Res> {
  _$AvataaarTypeHairLongHairStraightStrandCopyWithImpl(
      AvataaarTypeHairLongHairStraightStrand _value,
      $Res Function(AvataaarTypeHairLongHairStraightStrand) _then)
      : super(
            _value, (v) => _then(v as AvataaarTypeHairLongHairStraightStrand));

  @override
  AvataaarTypeHairLongHairStraightStrand get _value =>
      super._value as AvataaarTypeHairLongHairStraightStrand;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairLongHairStraightStrand(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairLongHairStraightStrand
    extends AvataaarTypeHairLongHairStraightStrand {
  const _$AvataaarTypeHairLongHairStraightStrand(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'longHairStraightStrand',
        super._();

  factory _$AvataaarTypeHairLongHairStraightStrand.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairLongHairStraightStrandFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.longHairStraightStrand(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairLongHairStraightStrand &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairLongHairStraightStrandCopyWith<
          AvataaarTypeHairLongHairStraightStrand>
      get copyWith => _$AvataaarTypeHairLongHairStraightStrandCopyWithImpl<
          AvataaarTypeHairLongHairStraightStrand>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraightStrand != null) {
      return longHairStraightStrand(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return longHairStraightStrand?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (longHairStraightStrand != null) {
      return longHairStraightStrand(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairLongHairStraightStrandToJson(this);
  }
}

abstract class AvataaarTypeHairLongHairStraightStrand extends AvataaarHair {
  const factory AvataaarTypeHairLongHairStraightStrand(
          [@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairLongHairStraightStrand;
  const AvataaarTypeHairLongHairStraightStrand._() : super._();

  factory AvataaarTypeHairLongHairStraightStrand.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairLongHairStraightStrand.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairLongHairStraightStrandCopyWith<
          AvataaarTypeHairLongHairStraightStrand>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairShortHairDreads01CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairShortHairDreads01CopyWith(
          AvataaarTypeHairShortHairDreads01 value,
          $Res Function(AvataaarTypeHairShortHairDreads01) then) =
      _$AvataaarTypeHairShortHairDreads01CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairShortHairDreads01CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairShortHairDreads01CopyWith<$Res> {
  _$AvataaarTypeHairShortHairDreads01CopyWithImpl(
      AvataaarTypeHairShortHairDreads01 _value,
      $Res Function(AvataaarTypeHairShortHairDreads01) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairShortHairDreads01));

  @override
  AvataaarTypeHairShortHairDreads01 get _value =>
      super._value as AvataaarTypeHairShortHairDreads01;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairShortHairDreads01(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairDreads01
    extends AvataaarTypeHairShortHairDreads01 {
  const _$AvataaarTypeHairShortHairDreads01(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'shortHairDreads01',
        super._();

  factory _$AvataaarTypeHairShortHairDreads01.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairDreads01FromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairDreads01(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairShortHairDreads01 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairShortHairDreads01CopyWith<AvataaarTypeHairShortHairDreads01>
      get copyWith => _$AvataaarTypeHairShortHairDreads01CopyWithImpl<
          AvataaarTypeHairShortHairDreads01>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads01 != null) {
      return shortHairDreads01(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads01?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads01 != null) {
      return shortHairDreads01(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairDreads01ToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairDreads01 extends AvataaarHair {
  const factory AvataaarTypeHairShortHairDreads01(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairShortHairDreads01;
  const AvataaarTypeHairShortHairDreads01._() : super._();

  factory AvataaarTypeHairShortHairDreads01.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeHairShortHairDreads01.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairShortHairDreads01CopyWith<AvataaarTypeHairShortHairDreads01>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairShortHairDreads02CopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairShortHairDreads02CopyWith(
          AvataaarTypeHairShortHairDreads02 value,
          $Res Function(AvataaarTypeHairShortHairDreads02) then) =
      _$AvataaarTypeHairShortHairDreads02CopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairShortHairDreads02CopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairShortHairDreads02CopyWith<$Res> {
  _$AvataaarTypeHairShortHairDreads02CopyWithImpl(
      AvataaarTypeHairShortHairDreads02 _value,
      $Res Function(AvataaarTypeHairShortHairDreads02) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairShortHairDreads02));

  @override
  AvataaarTypeHairShortHairDreads02 get _value =>
      super._value as AvataaarTypeHairShortHairDreads02;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairShortHairDreads02(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairDreads02
    extends AvataaarTypeHairShortHairDreads02 {
  const _$AvataaarTypeHairShortHairDreads02(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'shortHairDreads02',
        super._();

  factory _$AvataaarTypeHairShortHairDreads02.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairDreads02FromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairDreads02(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairShortHairDreads02 &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairShortHairDreads02CopyWith<AvataaarTypeHairShortHairDreads02>
      get copyWith => _$AvataaarTypeHairShortHairDreads02CopyWithImpl<
          AvataaarTypeHairShortHairDreads02>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads02 != null) {
      return shortHairDreads02(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairDreads02?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairDreads02 != null) {
      return shortHairDreads02(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairDreads02ToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairDreads02 extends AvataaarHair {
  const factory AvataaarTypeHairShortHairDreads02(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairShortHairDreads02;
  const AvataaarTypeHairShortHairDreads02._() : super._();

  factory AvataaarTypeHairShortHairDreads02.fromJson(
      Map<String, dynamic> json) = _$AvataaarTypeHairShortHairDreads02.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairShortHairDreads02CopyWith<AvataaarTypeHairShortHairDreads02>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairShortHairFrizzleCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairShortHairFrizzleCopyWith(
          AvataaarTypeHairShortHairFrizzle value,
          $Res Function(AvataaarTypeHairShortHairFrizzle) then) =
      _$AvataaarTypeHairShortHairFrizzleCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairShortHairFrizzleCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairShortHairFrizzleCopyWith<$Res> {
  _$AvataaarTypeHairShortHairFrizzleCopyWithImpl(
      AvataaarTypeHairShortHairFrizzle _value,
      $Res Function(AvataaarTypeHairShortHairFrizzle) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairShortHairFrizzle));

  @override
  AvataaarTypeHairShortHairFrizzle get _value =>
      super._value as AvataaarTypeHairShortHairFrizzle;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairShortHairFrizzle(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairFrizzle
    extends AvataaarTypeHairShortHairFrizzle {
  const _$AvataaarTypeHairShortHairFrizzle(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'shortHairFrizzle',
        super._();

  factory _$AvataaarTypeHairShortHairFrizzle.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairFrizzleFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairFrizzle(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairShortHairFrizzle &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairShortHairFrizzleCopyWith<AvataaarTypeHairShortHairFrizzle>
      get copyWith => _$AvataaarTypeHairShortHairFrizzleCopyWithImpl<
          AvataaarTypeHairShortHairFrizzle>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairFrizzle != null) {
      return shortHairFrizzle(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairFrizzle?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairFrizzle != null) {
      return shortHairFrizzle(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairFrizzleToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairFrizzle extends AvataaarHair {
  const factory AvataaarTypeHairShortHairFrizzle(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairShortHairFrizzle;
  const AvataaarTypeHairShortHairFrizzle._() : super._();

  factory AvataaarTypeHairShortHairFrizzle.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairFrizzle.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairShortHairFrizzleCopyWith<AvataaarTypeHairShortHairFrizzle>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairShortHairShaggyMulletCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairShortHairShaggyMulletCopyWith(
          AvataaarTypeHairShortHairShaggyMullet value,
          $Res Function(AvataaarTypeHairShortHairShaggyMullet) then) =
      _$AvataaarTypeHairShortHairShaggyMulletCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairShortHairShaggyMulletCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairShortHairShaggyMulletCopyWith<$Res> {
  _$AvataaarTypeHairShortHairShaggyMulletCopyWithImpl(
      AvataaarTypeHairShortHairShaggyMullet _value,
      $Res Function(AvataaarTypeHairShortHairShaggyMullet) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairShortHairShaggyMullet));

  @override
  AvataaarTypeHairShortHairShaggyMullet get _value =>
      super._value as AvataaarTypeHairShortHairShaggyMullet;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairShortHairShaggyMullet(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairShaggyMullet
    extends AvataaarTypeHairShortHairShaggyMullet {
  const _$AvataaarTypeHairShortHairShaggyMullet(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'shortHairShaggyMullet',
        super._();

  factory _$AvataaarTypeHairShortHairShaggyMullet.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairShaggyMulletFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShaggyMullet(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairShortHairShaggyMullet &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairShortHairShaggyMulletCopyWith<
          AvataaarTypeHairShortHairShaggyMullet>
      get copyWith => _$AvataaarTypeHairShortHairShaggyMulletCopyWithImpl<
          AvataaarTypeHairShortHairShaggyMullet>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShaggyMullet != null) {
      return shortHairShaggyMullet(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShaggyMullet?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShaggyMullet != null) {
      return shortHairShaggyMullet(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairShaggyMulletToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairShaggyMullet extends AvataaarHair {
  const factory AvataaarTypeHairShortHairShaggyMullet(
          [@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairShortHairShaggyMullet;
  const AvataaarTypeHairShortHairShaggyMullet._() : super._();

  factory AvataaarTypeHairShortHairShaggyMullet.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairShaggyMullet.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairShortHairShaggyMulletCopyWith<
          AvataaarTypeHairShortHairShaggyMullet>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairShortHairShortCurlyCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairShortHairShortCurlyCopyWith(
          AvataaarTypeHairShortHairShortCurly value,
          $Res Function(AvataaarTypeHairShortHairShortCurly) then) =
      _$AvataaarTypeHairShortHairShortCurlyCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairShortHairShortCurlyCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairShortHairShortCurlyCopyWith<$Res> {
  _$AvataaarTypeHairShortHairShortCurlyCopyWithImpl(
      AvataaarTypeHairShortHairShortCurly _value,
      $Res Function(AvataaarTypeHairShortHairShortCurly) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairShortHairShortCurly));

  @override
  AvataaarTypeHairShortHairShortCurly get _value =>
      super._value as AvataaarTypeHairShortHairShortCurly;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairShortHairShortCurly(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairShortCurly
    extends AvataaarTypeHairShortHairShortCurly {
  const _$AvataaarTypeHairShortHairShortCurly(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'shortHairShortCurly',
        super._();

  factory _$AvataaarTypeHairShortHairShortCurly.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairShortCurlyFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortCurly(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairShortHairShortCurly &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairShortHairShortCurlyCopyWith<
          AvataaarTypeHairShortHairShortCurly>
      get copyWith => _$AvataaarTypeHairShortHairShortCurlyCopyWithImpl<
          AvataaarTypeHairShortHairShortCurly>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortCurly != null) {
      return shortHairShortCurly(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortCurly?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortCurly != null) {
      return shortHairShortCurly(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairShortCurlyToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairShortCurly extends AvataaarHair {
  const factory AvataaarTypeHairShortHairShortCurly(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairShortHairShortCurly;
  const AvataaarTypeHairShortHairShortCurly._() : super._();

  factory AvataaarTypeHairShortHairShortCurly.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairShortCurly.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairShortHairShortCurlyCopyWith<
          AvataaarTypeHairShortHairShortCurly>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairShortHairShortFlatCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairShortHairShortFlatCopyWith(
          AvataaarTypeHairShortHairShortFlat value,
          $Res Function(AvataaarTypeHairShortHairShortFlat) then) =
      _$AvataaarTypeHairShortHairShortFlatCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairShortHairShortFlatCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairShortHairShortFlatCopyWith<$Res> {
  _$AvataaarTypeHairShortHairShortFlatCopyWithImpl(
      AvataaarTypeHairShortHairShortFlat _value,
      $Res Function(AvataaarTypeHairShortHairShortFlat) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairShortHairShortFlat));

  @override
  AvataaarTypeHairShortHairShortFlat get _value =>
      super._value as AvataaarTypeHairShortHairShortFlat;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairShortHairShortFlat(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairShortFlat
    extends AvataaarTypeHairShortHairShortFlat {
  const _$AvataaarTypeHairShortHairShortFlat(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'shortHairShortFlat',
        super._();

  factory _$AvataaarTypeHairShortHairShortFlat.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairShortFlatFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortFlat(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairShortHairShortFlat &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairShortHairShortFlatCopyWith<
          AvataaarTypeHairShortHairShortFlat>
      get copyWith => _$AvataaarTypeHairShortHairShortFlatCopyWithImpl<
          AvataaarTypeHairShortHairShortFlat>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortFlat != null) {
      return shortHairShortFlat(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortFlat?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortFlat != null) {
      return shortHairShortFlat(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairShortFlatToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairShortFlat extends AvataaarHair {
  const factory AvataaarTypeHairShortHairShortFlat(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairShortHairShortFlat;
  const AvataaarTypeHairShortHairShortFlat._() : super._();

  factory AvataaarTypeHairShortHairShortFlat.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairShortFlat.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairShortHairShortFlatCopyWith<
          AvataaarTypeHairShortHairShortFlat>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairShortHairShortRoundCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairShortHairShortRoundCopyWith(
          AvataaarTypeHairShortHairShortRound value,
          $Res Function(AvataaarTypeHairShortHairShortRound) then) =
      _$AvataaarTypeHairShortHairShortRoundCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairShortHairShortRoundCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairShortHairShortRoundCopyWith<$Res> {
  _$AvataaarTypeHairShortHairShortRoundCopyWithImpl(
      AvataaarTypeHairShortHairShortRound _value,
      $Res Function(AvataaarTypeHairShortHairShortRound) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairShortHairShortRound));

  @override
  AvataaarTypeHairShortHairShortRound get _value =>
      super._value as AvataaarTypeHairShortHairShortRound;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairShortHairShortRound(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairShortRound
    extends AvataaarTypeHairShortHairShortRound {
  const _$AvataaarTypeHairShortHairShortRound(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'shortHairShortRound',
        super._();

  factory _$AvataaarTypeHairShortHairShortRound.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairShortRoundFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortRound(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairShortHairShortRound &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairShortHairShortRoundCopyWith<
          AvataaarTypeHairShortHairShortRound>
      get copyWith => _$AvataaarTypeHairShortHairShortRoundCopyWithImpl<
          AvataaarTypeHairShortHairShortRound>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortRound != null) {
      return shortHairShortRound(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortRound?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortRound != null) {
      return shortHairShortRound(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairShortRoundToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairShortRound extends AvataaarHair {
  const factory AvataaarTypeHairShortHairShortRound(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairShortHairShortRound;
  const AvataaarTypeHairShortHairShortRound._() : super._();

  factory AvataaarTypeHairShortHairShortRound.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairShortRound.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairShortHairShortRoundCopyWith<
          AvataaarTypeHairShortHairShortRound>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairShortHairShortWavedCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairShortHairShortWavedCopyWith(
          AvataaarTypeHairShortHairShortWaved value,
          $Res Function(AvataaarTypeHairShortHairShortWaved) then) =
      _$AvataaarTypeHairShortHairShortWavedCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairShortHairShortWavedCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairShortHairShortWavedCopyWith<$Res> {
  _$AvataaarTypeHairShortHairShortWavedCopyWithImpl(
      AvataaarTypeHairShortHairShortWaved _value,
      $Res Function(AvataaarTypeHairShortHairShortWaved) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairShortHairShortWaved));

  @override
  AvataaarTypeHairShortHairShortWaved get _value =>
      super._value as AvataaarTypeHairShortHairShortWaved;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairShortHairShortWaved(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairShortWaved
    extends AvataaarTypeHairShortHairShortWaved {
  const _$AvataaarTypeHairShortHairShortWaved(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'shortHairShortWaved',
        super._();

  factory _$AvataaarTypeHairShortHairShortWaved.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairShortWavedFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairShortWaved(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairShortHairShortWaved &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairShortHairShortWavedCopyWith<
          AvataaarTypeHairShortHairShortWaved>
      get copyWith => _$AvataaarTypeHairShortHairShortWavedCopyWithImpl<
          AvataaarTypeHairShortHairShortWaved>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortWaved != null) {
      return shortHairShortWaved(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairShortWaved?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairShortWaved != null) {
      return shortHairShortWaved(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairShortWavedToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairShortWaved extends AvataaarHair {
  const factory AvataaarTypeHairShortHairShortWaved(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairShortHairShortWaved;
  const AvataaarTypeHairShortHairShortWaved._() : super._();

  factory AvataaarTypeHairShortHairShortWaved.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairShortWaved.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairShortHairShortWavedCopyWith<
          AvataaarTypeHairShortHairShortWaved>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairShortHairSidesCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairShortHairSidesCopyWith(
          AvataaarTypeHairShortHairSides value,
          $Res Function(AvataaarTypeHairShortHairSides) then) =
      _$AvataaarTypeHairShortHairSidesCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairShortHairSidesCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairShortHairSidesCopyWith<$Res> {
  _$AvataaarTypeHairShortHairSidesCopyWithImpl(
      AvataaarTypeHairShortHairSides _value,
      $Res Function(AvataaarTypeHairShortHairSides) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairShortHairSides));

  @override
  AvataaarTypeHairShortHairSides get _value =>
      super._value as AvataaarTypeHairShortHairSides;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairShortHairSides(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairSides extends AvataaarTypeHairShortHairSides {
  const _$AvataaarTypeHairShortHairSides(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'shortHairSides',
        super._();

  factory _$AvataaarTypeHairShortHairSides.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairSidesFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairSides(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairShortHairSides &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairShortHairSidesCopyWith<AvataaarTypeHairShortHairSides>
      get copyWith => _$AvataaarTypeHairShortHairSidesCopyWithImpl<
          AvataaarTypeHairShortHairSides>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairSides != null) {
      return shortHairSides(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairSides?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairSides != null) {
      return shortHairSides(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairSidesToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairSides extends AvataaarHair {
  const factory AvataaarTypeHairShortHairSides(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairShortHairSides;
  const AvataaarTypeHairShortHairSides._() : super._();

  factory AvataaarTypeHairShortHairSides.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairSides.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairShortHairSidesCopyWith<AvataaarTypeHairShortHairSides>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairShortHairTheCaesarCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairShortHairTheCaesarCopyWith(
          AvataaarTypeHairShortHairTheCaesar value,
          $Res Function(AvataaarTypeHairShortHairTheCaesar) then) =
      _$AvataaarTypeHairShortHairTheCaesarCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairShortHairTheCaesarCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairShortHairTheCaesarCopyWith<$Res> {
  _$AvataaarTypeHairShortHairTheCaesarCopyWithImpl(
      AvataaarTypeHairShortHairTheCaesar _value,
      $Res Function(AvataaarTypeHairShortHairTheCaesar) _then)
      : super(_value, (v) => _then(v as AvataaarTypeHairShortHairTheCaesar));

  @override
  AvataaarTypeHairShortHairTheCaesar get _value =>
      super._value as AvataaarTypeHairShortHairTheCaesar;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairShortHairTheCaesar(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairTheCaesar
    extends AvataaarTypeHairShortHairTheCaesar {
  const _$AvataaarTypeHairShortHairTheCaesar(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'shortHairTheCaesar',
        super._();

  factory _$AvataaarTypeHairShortHairTheCaesar.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairTheCaesarFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairTheCaesar(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairShortHairTheCaesar &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairShortHairTheCaesarCopyWith<
          AvataaarTypeHairShortHairTheCaesar>
      get copyWith => _$AvataaarTypeHairShortHairTheCaesarCopyWithImpl<
          AvataaarTypeHairShortHairTheCaesar>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesar != null) {
      return shortHairTheCaesar(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesar?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesar != null) {
      return shortHairTheCaesar(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairTheCaesarToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairTheCaesar extends AvataaarHair {
  const factory AvataaarTypeHairShortHairTheCaesar(
      [@ColorSerialiser() Color color]) = _$AvataaarTypeHairShortHairTheCaesar;
  const AvataaarTypeHairShortHairTheCaesar._() : super._();

  factory AvataaarTypeHairShortHairTheCaesar.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairTheCaesar.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairShortHairTheCaesarCopyWith<
          AvataaarTypeHairShortHairTheCaesar>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeHairShortHairTheCaesarSidePartCopyWith<$Res>
    implements $AvataaarHairCopyWith<$Res> {
  factory $AvataaarTypeHairShortHairTheCaesarSidePartCopyWith(
          AvataaarTypeHairShortHairTheCaesarSidePart value,
          $Res Function(AvataaarTypeHairShortHairTheCaesarSidePart) then) =
      _$AvataaarTypeHairShortHairTheCaesarSidePartCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeHairShortHairTheCaesarSidePartCopyWithImpl<$Res>
    extends _$AvataaarHairCopyWithImpl<$Res>
    implements $AvataaarTypeHairShortHairTheCaesarSidePartCopyWith<$Res> {
  _$AvataaarTypeHairShortHairTheCaesarSidePartCopyWithImpl(
      AvataaarTypeHairShortHairTheCaesarSidePart _value,
      $Res Function(AvataaarTypeHairShortHairTheCaesarSidePart) _then)
      : super(_value,
            (v) => _then(v as AvataaarTypeHairShortHairTheCaesarSidePart));

  @override
  AvataaarTypeHairShortHairTheCaesarSidePart get _value =>
      super._value as AvataaarTypeHairShortHairTheCaesarSidePart;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeHairShortHairTheCaesarSidePart(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeHairShortHairTheCaesarSidePart
    extends AvataaarTypeHairShortHairTheCaesarSidePart {
  const _$AvataaarTypeHairShortHairTheCaesarSidePart(
      [@ColorSerialiser() this.color = AvataaarHair.defaultHairColor,
      String? $type])
      : $type = $type ?? 'shortHairTheCaesarSidePart',
        super._();

  factory _$AvataaarTypeHairShortHairTheCaesarSidePart.fromJson(
          Map<String, dynamic> json) =>
      _$$AvataaarTypeHairShortHairTheCaesarSidePartFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarHair.shortHairTheCaesarSidePart(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeHairShortHairTheCaesarSidePart &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeHairShortHairTheCaesarSidePartCopyWith<
          AvataaarTypeHairShortHairTheCaesarSidePart>
      get copyWith => _$AvataaarTypeHairShortHairTheCaesarSidePartCopyWithImpl<
          AvataaarTypeHairShortHairTheCaesarSidePart>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) noHair,
    required TResult Function(@ColorSerialiser() Color color) eyepatch,
    required TResult Function(@ColorSerialiser() Color color) hat,
    required TResult Function(@ColorSerialiser() Color color) hijab,
    required TResult Function(@ColorSerialiser() Color color) turban,
    required TResult Function(@ColorSerialiser() Color color) winterHat1,
    required TResult Function(@ColorSerialiser() Color color) winterHat2,
    required TResult Function(@ColorSerialiser() Color color) winterHat3,
    required TResult Function(@ColorSerialiser() Color color) winterHat4,
    required TResult Function(@ColorSerialiser() Color color) longHairBigHair,
    required TResult Function(@ColorSerialiser() Color color) longHairBob,
    required TResult Function(@ColorSerialiser() Color color) longHairBun,
    required TResult Function(@ColorSerialiser() Color color) longHairCurly,
    required TResult Function(@ColorSerialiser() Color color) longHairCurvy,
    required TResult Function(@ColorSerialiser() Color color) longHairDreads,
    required TResult Function(@ColorSerialiser() Color color) longHairFrida,
    required TResult Function(@ColorSerialiser() Color color) longHairFro,
    required TResult Function(@ColorSerialiser() Color color) longHairFroBand,
    required TResult Function(@ColorSerialiser() Color color)
        longHairNotTooLong,
    required TResult Function(@ColorSerialiser() Color color)
        longHairShavedSides,
    required TResult Function(@ColorSerialiser() Color color)
        longHairMiaWallace,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight,
    required TResult Function(@ColorSerialiser() Color color) longHairStraight2,
    required TResult Function(@ColorSerialiser() Color color)
        longHairStraightStrand,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads01,
    required TResult Function(@ColorSerialiser() Color color) shortHairDreads02,
    required TResult Function(@ColorSerialiser() Color color) shortHairFrizzle,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShaggyMullet,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortCurly,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortFlat,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortRound,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairShortWaved,
    required TResult Function(@ColorSerialiser() Color color) shortHairSides,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesar,
    required TResult Function(@ColorSerialiser() Color color)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? noHair,
    TResult Function(@ColorSerialiser() Color color)? eyepatch,
    TResult Function(@ColorSerialiser() Color color)? hat,
    TResult Function(@ColorSerialiser() Color color)? hijab,
    TResult Function(@ColorSerialiser() Color color)? turban,
    TResult Function(@ColorSerialiser() Color color)? winterHat1,
    TResult Function(@ColorSerialiser() Color color)? winterHat2,
    TResult Function(@ColorSerialiser() Color color)? winterHat3,
    TResult Function(@ColorSerialiser() Color color)? winterHat4,
    TResult Function(@ColorSerialiser() Color color)? longHairBigHair,
    TResult Function(@ColorSerialiser() Color color)? longHairBob,
    TResult Function(@ColorSerialiser() Color color)? longHairBun,
    TResult Function(@ColorSerialiser() Color color)? longHairCurly,
    TResult Function(@ColorSerialiser() Color color)? longHairCurvy,
    TResult Function(@ColorSerialiser() Color color)? longHairDreads,
    TResult Function(@ColorSerialiser() Color color)? longHairFrida,
    TResult Function(@ColorSerialiser() Color color)? longHairFro,
    TResult Function(@ColorSerialiser() Color color)? longHairFroBand,
    TResult Function(@ColorSerialiser() Color color)? longHairNotTooLong,
    TResult Function(@ColorSerialiser() Color color)? longHairShavedSides,
    TResult Function(@ColorSerialiser() Color color)? longHairMiaWallace,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight,
    TResult Function(@ColorSerialiser() Color color)? longHairStraight2,
    TResult Function(@ColorSerialiser() Color color)? longHairStraightStrand,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads01,
    TResult Function(@ColorSerialiser() Color color)? shortHairDreads02,
    TResult Function(@ColorSerialiser() Color color)? shortHairFrizzle,
    TResult Function(@ColorSerialiser() Color color)? shortHairShaggyMullet,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortCurly,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortFlat,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortRound,
    TResult Function(@ColorSerialiser() Color color)? shortHairShortWaved,
    TResult Function(@ColorSerialiser() Color color)? shortHairSides,
    TResult Function(@ColorSerialiser() Color color)? shortHairTheCaesar,
    TResult Function(@ColorSerialiser() Color color)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesarSidePart != null) {
      return shortHairTheCaesarSidePart(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeHairNoHair value) noHair,
    required TResult Function(AvataaarTypeHairEyepatch value) eyepatch,
    required TResult Function(AvataaarTypeHairHat value) hat,
    required TResult Function(AvataaarTypeHairHijab value) hijab,
    required TResult Function(AvataaarTypeHairTurban value) turban,
    required TResult Function(AvataaarTypeHairWinterHat1 value) winterHat1,
    required TResult Function(AvataaarTypeHairWinterHat2 value) winterHat2,
    required TResult Function(AvataaarTypeHairWinterHat3 value) winterHat3,
    required TResult Function(AvataaarTypeHairWinterHat4 value) winterHat4,
    required TResult Function(AvataaarTypeHairLongHairBigHair value)
        longHairBigHair,
    required TResult Function(AvataaarTypeHairLongHarBob value) longHairBob,
    required TResult Function(AvataaarTypeHairLongHairBun value) longHairBun,
    required TResult Function(AvataaarTypeHairLongHairCurly value)
        longHairCurly,
    required TResult Function(AvataaarTypeHairLongHairCurvy value)
        longHairCurvy,
    required TResult Function(AvataaarTypeHairLongHairDreads value)
        longHairDreads,
    required TResult Function(AvataaarTypeHairLongHairFrida value)
        longHairFrida,
    required TResult Function(AvataaarTypeHairLongHairFro value) longHairFro,
    required TResult Function(AvataaarTypeHairLongHairFroBand value)
        longHairFroBand,
    required TResult Function(AvataaarTypeHairLongHairNotTooLong value)
        longHairNotTooLong,
    required TResult Function(AvataaarTypeHairLongHairShavedSides value)
        longHairShavedSides,
    required TResult Function(AvataaarTypeHairLongHairMiaWallace value)
        longHairMiaWallace,
    required TResult Function(AvataaarTypeHairLongHairStraight value)
        longHairStraight,
    required TResult Function(AvataaarTypeHairLongHairStraight2 value)
        longHairStraight2,
    required TResult Function(AvataaarTypeHairLongHairStraightStrand value)
        longHairStraightStrand,
    required TResult Function(AvataaarTypeHairShortHairDreads01 value)
        shortHairDreads01,
    required TResult Function(AvataaarTypeHairShortHairDreads02 value)
        shortHairDreads02,
    required TResult Function(AvataaarTypeHairShortHairFrizzle value)
        shortHairFrizzle,
    required TResult Function(AvataaarTypeHairShortHairShaggyMullet value)
        shortHairShaggyMullet,
    required TResult Function(AvataaarTypeHairShortHairShortCurly value)
        shortHairShortCurly,
    required TResult Function(AvataaarTypeHairShortHairShortFlat value)
        shortHairShortFlat,
    required TResult Function(AvataaarTypeHairShortHairShortRound value)
        shortHairShortRound,
    required TResult Function(AvataaarTypeHairShortHairShortWaved value)
        shortHairShortWaved,
    required TResult Function(AvataaarTypeHairShortHairSides value)
        shortHairSides,
    required TResult Function(AvataaarTypeHairShortHairTheCaesar value)
        shortHairTheCaesar,
    required TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
  }) {
    return shortHairTheCaesarSidePart?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeHairNoHair value)? noHair,
    TResult Function(AvataaarTypeHairEyepatch value)? eyepatch,
    TResult Function(AvataaarTypeHairHat value)? hat,
    TResult Function(AvataaarTypeHairHijab value)? hijab,
    TResult Function(AvataaarTypeHairTurban value)? turban,
    TResult Function(AvataaarTypeHairWinterHat1 value)? winterHat1,
    TResult Function(AvataaarTypeHairWinterHat2 value)? winterHat2,
    TResult Function(AvataaarTypeHairWinterHat3 value)? winterHat3,
    TResult Function(AvataaarTypeHairWinterHat4 value)? winterHat4,
    TResult Function(AvataaarTypeHairLongHairBigHair value)? longHairBigHair,
    TResult Function(AvataaarTypeHairLongHarBob value)? longHairBob,
    TResult Function(AvataaarTypeHairLongHairBun value)? longHairBun,
    TResult Function(AvataaarTypeHairLongHairCurly value)? longHairCurly,
    TResult Function(AvataaarTypeHairLongHairCurvy value)? longHairCurvy,
    TResult Function(AvataaarTypeHairLongHairDreads value)? longHairDreads,
    TResult Function(AvataaarTypeHairLongHairFrida value)? longHairFrida,
    TResult Function(AvataaarTypeHairLongHairFro value)? longHairFro,
    TResult Function(AvataaarTypeHairLongHairFroBand value)? longHairFroBand,
    TResult Function(AvataaarTypeHairLongHairNotTooLong value)?
        longHairNotTooLong,
    TResult Function(AvataaarTypeHairLongHairShavedSides value)?
        longHairShavedSides,
    TResult Function(AvataaarTypeHairLongHairMiaWallace value)?
        longHairMiaWallace,
    TResult Function(AvataaarTypeHairLongHairStraight value)? longHairStraight,
    TResult Function(AvataaarTypeHairLongHairStraight2 value)?
        longHairStraight2,
    TResult Function(AvataaarTypeHairLongHairStraightStrand value)?
        longHairStraightStrand,
    TResult Function(AvataaarTypeHairShortHairDreads01 value)?
        shortHairDreads01,
    TResult Function(AvataaarTypeHairShortHairDreads02 value)?
        shortHairDreads02,
    TResult Function(AvataaarTypeHairShortHairFrizzle value)? shortHairFrizzle,
    TResult Function(AvataaarTypeHairShortHairShaggyMullet value)?
        shortHairShaggyMullet,
    TResult Function(AvataaarTypeHairShortHairShortCurly value)?
        shortHairShortCurly,
    TResult Function(AvataaarTypeHairShortHairShortFlat value)?
        shortHairShortFlat,
    TResult Function(AvataaarTypeHairShortHairShortRound value)?
        shortHairShortRound,
    TResult Function(AvataaarTypeHairShortHairShortWaved value)?
        shortHairShortWaved,
    TResult Function(AvataaarTypeHairShortHairSides value)? shortHairSides,
    TResult Function(AvataaarTypeHairShortHairTheCaesar value)?
        shortHairTheCaesar,
    TResult Function(AvataaarTypeHairShortHairTheCaesarSidePart value)?
        shortHairTheCaesarSidePart,
    required TResult orElse(),
  }) {
    if (shortHairTheCaesarSidePart != null) {
      return shortHairTheCaesarSidePart(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeHairShortHairTheCaesarSidePartToJson(this);
  }
}

abstract class AvataaarTypeHairShortHairTheCaesarSidePart extends AvataaarHair {
  const factory AvataaarTypeHairShortHairTheCaesarSidePart(
          [@ColorSerialiser() Color color]) =
      _$AvataaarTypeHairShortHairTheCaesarSidePart;
  const AvataaarTypeHairShortHairTheCaesarSidePart._() : super._();

  factory AvataaarTypeHairShortHairTheCaesarSidePart.fromJson(
          Map<String, dynamic> json) =
      _$AvataaarTypeHairShortHairTheCaesarSidePart.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeHairShortHairTheCaesarSidePartCopyWith<
          AvataaarTypeHairShortHairTheCaesarSidePart>
      get copyWith => throw _privateConstructorUsedError;
}

AvataaarMouth _$AvataaarMouthFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'concerned':
      return AvataaarTypeMouthConcerned.fromJson(json);
    case 'default0':
      return AvataaarTypeMouthDefault0.fromJson(json);
    case 'disbelief':
      return AvataaarTypeMouthDisbelief.fromJson(json);
    case 'eating':
      return AvataaarTypeMouthEating.fromJson(json);
    case 'grimace':
      return AvataaarTypeMouthGrimace.fromJson(json);
    case 'sad':
      return AvataaarTypeMouthSad.fromJson(json);
    case 'screamOpen':
      return AvataaarTypeMouthScreamOpen.fromJson(json);
    case 'serious':
      return AvataaarTypeMouthSerious.fromJson(json);
    case 'smile':
      return AvataaarTypeMouthSmile.fromJson(json);
    case 'tongue':
      return AvataaarTypeMouthTongue.fromJson(json);
    case 'twinkle':
      return AvataaarTypeMouthTwinkle.fromJson(json);
    case 'vomit':
      return AvataaarTypeMouthVomit.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarMouth',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarMouthTearOff {
  const _$AvataaarMouthTearOff();

  AvataaarTypeMouthConcerned concerned() {
    return const AvataaarTypeMouthConcerned();
  }

  AvataaarTypeMouthDefault0 default0() {
    return const AvataaarTypeMouthDefault0();
  }

  AvataaarTypeMouthDisbelief disbelief() {
    return const AvataaarTypeMouthDisbelief();
  }

  AvataaarTypeMouthEating eating() {
    return const AvataaarTypeMouthEating();
  }

  AvataaarTypeMouthGrimace grimace() {
    return const AvataaarTypeMouthGrimace();
  }

  AvataaarTypeMouthSad sad() {
    return const AvataaarTypeMouthSad();
  }

  AvataaarTypeMouthScreamOpen screamOpen() {
    return const AvataaarTypeMouthScreamOpen();
  }

  AvataaarTypeMouthSerious serious() {
    return const AvataaarTypeMouthSerious();
  }

  AvataaarTypeMouthSmile smile() {
    return const AvataaarTypeMouthSmile();
  }

  AvataaarTypeMouthTongue tongue() {
    return const AvataaarTypeMouthTongue();
  }

  AvataaarTypeMouthTwinkle twinkle() {
    return const AvataaarTypeMouthTwinkle();
  }

  AvataaarTypeMouthVomit vomit() {
    return const AvataaarTypeMouthVomit();
  }

  AvataaarMouth fromJson(Map<String, Object?> json) {
    return AvataaarMouth.fromJson(json);
  }
}

/// @nodoc
const $AvataaarMouth = _$AvataaarMouthTearOff();

/// @nodoc
mixin _$AvataaarMouth {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarMouthCopyWith<$Res> {
  factory $AvataaarMouthCopyWith(
          AvataaarMouth value, $Res Function(AvataaarMouth) then) =
      _$AvataaarMouthCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarMouthCopyWith<$Res> {
  _$AvataaarMouthCopyWithImpl(this._value, this._then);

  final AvataaarMouth _value;
  // ignore: unused_field
  final $Res Function(AvataaarMouth) _then;
}

/// @nodoc
abstract class $AvataaarTypeMouthConcernedCopyWith<$Res> {
  factory $AvataaarTypeMouthConcernedCopyWith(AvataaarTypeMouthConcerned value,
          $Res Function(AvataaarTypeMouthConcerned) then) =
      _$AvataaarTypeMouthConcernedCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthConcernedCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthConcernedCopyWith<$Res> {
  _$AvataaarTypeMouthConcernedCopyWithImpl(AvataaarTypeMouthConcerned _value,
      $Res Function(AvataaarTypeMouthConcerned) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthConcerned));

  @override
  AvataaarTypeMouthConcerned get _value =>
      super._value as AvataaarTypeMouthConcerned;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthConcerned extends AvataaarTypeMouthConcerned {
  const _$AvataaarTypeMouthConcerned({String? $type})
      : $type = $type ?? 'concerned',
        super._();

  factory _$AvataaarTypeMouthConcerned.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthConcernedFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.concerned()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeMouthConcerned);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return concerned();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return concerned?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (concerned != null) {
      return concerned();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return concerned(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return concerned?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (concerned != null) {
      return concerned(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthConcernedToJson(this);
  }
}

abstract class AvataaarTypeMouthConcerned extends AvataaarMouth {
  const factory AvataaarTypeMouthConcerned() = _$AvataaarTypeMouthConcerned;
  const AvataaarTypeMouthConcerned._() : super._();

  factory AvataaarTypeMouthConcerned.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthConcerned.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeMouthDefault0CopyWith<$Res> {
  factory $AvataaarTypeMouthDefault0CopyWith(AvataaarTypeMouthDefault0 value,
          $Res Function(AvataaarTypeMouthDefault0) then) =
      _$AvataaarTypeMouthDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthDefault0CopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthDefault0CopyWith<$Res> {
  _$AvataaarTypeMouthDefault0CopyWithImpl(AvataaarTypeMouthDefault0 _value,
      $Res Function(AvataaarTypeMouthDefault0) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthDefault0));

  @override
  AvataaarTypeMouthDefault0 get _value =>
      super._value as AvataaarTypeMouthDefault0;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthDefault0 extends AvataaarTypeMouthDefault0 {
  const _$AvataaarTypeMouthDefault0({String? $type})
      : $type = $type ?? 'default0',
        super._();

  factory _$AvataaarTypeMouthDefault0.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthDefault0FromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeMouthDefault0);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthDefault0ToJson(this);
  }
}

abstract class AvataaarTypeMouthDefault0 extends AvataaarMouth {
  const factory AvataaarTypeMouthDefault0() = _$AvataaarTypeMouthDefault0;
  const AvataaarTypeMouthDefault0._() : super._();

  factory AvataaarTypeMouthDefault0.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthDefault0.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeMouthDisbeliefCopyWith<$Res> {
  factory $AvataaarTypeMouthDisbeliefCopyWith(AvataaarTypeMouthDisbelief value,
          $Res Function(AvataaarTypeMouthDisbelief) then) =
      _$AvataaarTypeMouthDisbeliefCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthDisbeliefCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthDisbeliefCopyWith<$Res> {
  _$AvataaarTypeMouthDisbeliefCopyWithImpl(AvataaarTypeMouthDisbelief _value,
      $Res Function(AvataaarTypeMouthDisbelief) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthDisbelief));

  @override
  AvataaarTypeMouthDisbelief get _value =>
      super._value as AvataaarTypeMouthDisbelief;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthDisbelief extends AvataaarTypeMouthDisbelief {
  const _$AvataaarTypeMouthDisbelief({String? $type})
      : $type = $type ?? 'disbelief',
        super._();

  factory _$AvataaarTypeMouthDisbelief.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthDisbeliefFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.disbelief()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeMouthDisbelief);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return disbelief();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return disbelief?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (disbelief != null) {
      return disbelief();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return disbelief(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return disbelief?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (disbelief != null) {
      return disbelief(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthDisbeliefToJson(this);
  }
}

abstract class AvataaarTypeMouthDisbelief extends AvataaarMouth {
  const factory AvataaarTypeMouthDisbelief() = _$AvataaarTypeMouthDisbelief;
  const AvataaarTypeMouthDisbelief._() : super._();

  factory AvataaarTypeMouthDisbelief.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthDisbelief.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeMouthEatingCopyWith<$Res> {
  factory $AvataaarTypeMouthEatingCopyWith(AvataaarTypeMouthEating value,
          $Res Function(AvataaarTypeMouthEating) then) =
      _$AvataaarTypeMouthEatingCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthEatingCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthEatingCopyWith<$Res> {
  _$AvataaarTypeMouthEatingCopyWithImpl(AvataaarTypeMouthEating _value,
      $Res Function(AvataaarTypeMouthEating) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthEating));

  @override
  AvataaarTypeMouthEating get _value => super._value as AvataaarTypeMouthEating;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthEating extends AvataaarTypeMouthEating {
  const _$AvataaarTypeMouthEating({String? $type})
      : $type = $type ?? 'eating',
        super._();

  factory _$AvataaarTypeMouthEating.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthEatingFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.eating()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeMouthEating);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return eating();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return eating?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (eating != null) {
      return eating();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return eating(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return eating?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (eating != null) {
      return eating(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthEatingToJson(this);
  }
}

abstract class AvataaarTypeMouthEating extends AvataaarMouth {
  const factory AvataaarTypeMouthEating() = _$AvataaarTypeMouthEating;
  const AvataaarTypeMouthEating._() : super._();

  factory AvataaarTypeMouthEating.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthEating.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeMouthGrimaceCopyWith<$Res> {
  factory $AvataaarTypeMouthGrimaceCopyWith(AvataaarTypeMouthGrimace value,
          $Res Function(AvataaarTypeMouthGrimace) then) =
      _$AvataaarTypeMouthGrimaceCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthGrimaceCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthGrimaceCopyWith<$Res> {
  _$AvataaarTypeMouthGrimaceCopyWithImpl(AvataaarTypeMouthGrimace _value,
      $Res Function(AvataaarTypeMouthGrimace) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthGrimace));

  @override
  AvataaarTypeMouthGrimace get _value =>
      super._value as AvataaarTypeMouthGrimace;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthGrimace extends AvataaarTypeMouthGrimace {
  const _$AvataaarTypeMouthGrimace({String? $type})
      : $type = $type ?? 'grimace',
        super._();

  factory _$AvataaarTypeMouthGrimace.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthGrimaceFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.grimace()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeMouthGrimace);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return grimace();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return grimace?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (grimace != null) {
      return grimace();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return grimace(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return grimace?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (grimace != null) {
      return grimace(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthGrimaceToJson(this);
  }
}

abstract class AvataaarTypeMouthGrimace extends AvataaarMouth {
  const factory AvataaarTypeMouthGrimace() = _$AvataaarTypeMouthGrimace;
  const AvataaarTypeMouthGrimace._() : super._();

  factory AvataaarTypeMouthGrimace.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthGrimace.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeMouthSadCopyWith<$Res> {
  factory $AvataaarTypeMouthSadCopyWith(AvataaarTypeMouthSad value,
          $Res Function(AvataaarTypeMouthSad) then) =
      _$AvataaarTypeMouthSadCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthSadCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthSadCopyWith<$Res> {
  _$AvataaarTypeMouthSadCopyWithImpl(
      AvataaarTypeMouthSad _value, $Res Function(AvataaarTypeMouthSad) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthSad));

  @override
  AvataaarTypeMouthSad get _value => super._value as AvataaarTypeMouthSad;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthSad extends AvataaarTypeMouthSad {
  const _$AvataaarTypeMouthSad({String? $type})
      : $type = $type ?? 'sad',
        super._();

  factory _$AvataaarTypeMouthSad.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthSadFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.sad()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeMouthSad);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return sad();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return sad?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (sad != null) {
      return sad();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return sad(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return sad?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (sad != null) {
      return sad(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthSadToJson(this);
  }
}

abstract class AvataaarTypeMouthSad extends AvataaarMouth {
  const factory AvataaarTypeMouthSad() = _$AvataaarTypeMouthSad;
  const AvataaarTypeMouthSad._() : super._();

  factory AvataaarTypeMouthSad.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthSad.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeMouthScreamOpenCopyWith<$Res> {
  factory $AvataaarTypeMouthScreamOpenCopyWith(
          AvataaarTypeMouthScreamOpen value,
          $Res Function(AvataaarTypeMouthScreamOpen) then) =
      _$AvataaarTypeMouthScreamOpenCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthScreamOpenCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthScreamOpenCopyWith<$Res> {
  _$AvataaarTypeMouthScreamOpenCopyWithImpl(AvataaarTypeMouthScreamOpen _value,
      $Res Function(AvataaarTypeMouthScreamOpen) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthScreamOpen));

  @override
  AvataaarTypeMouthScreamOpen get _value =>
      super._value as AvataaarTypeMouthScreamOpen;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthScreamOpen extends AvataaarTypeMouthScreamOpen {
  const _$AvataaarTypeMouthScreamOpen({String? $type})
      : $type = $type ?? 'screamOpen',
        super._();

  factory _$AvataaarTypeMouthScreamOpen.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthScreamOpenFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.screamOpen()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeMouthScreamOpen);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return screamOpen();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return screamOpen?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (screamOpen != null) {
      return screamOpen();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return screamOpen(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return screamOpen?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (screamOpen != null) {
      return screamOpen(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthScreamOpenToJson(this);
  }
}

abstract class AvataaarTypeMouthScreamOpen extends AvataaarMouth {
  const factory AvataaarTypeMouthScreamOpen() = _$AvataaarTypeMouthScreamOpen;
  const AvataaarTypeMouthScreamOpen._() : super._();

  factory AvataaarTypeMouthScreamOpen.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthScreamOpen.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeMouthSeriousCopyWith<$Res> {
  factory $AvataaarTypeMouthSeriousCopyWith(AvataaarTypeMouthSerious value,
          $Res Function(AvataaarTypeMouthSerious) then) =
      _$AvataaarTypeMouthSeriousCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthSeriousCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthSeriousCopyWith<$Res> {
  _$AvataaarTypeMouthSeriousCopyWithImpl(AvataaarTypeMouthSerious _value,
      $Res Function(AvataaarTypeMouthSerious) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthSerious));

  @override
  AvataaarTypeMouthSerious get _value =>
      super._value as AvataaarTypeMouthSerious;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthSerious extends AvataaarTypeMouthSerious {
  const _$AvataaarTypeMouthSerious({String? $type})
      : $type = $type ?? 'serious',
        super._();

  factory _$AvataaarTypeMouthSerious.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthSeriousFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.serious()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeMouthSerious);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return serious();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return serious?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (serious != null) {
      return serious();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return serious(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return serious?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (serious != null) {
      return serious(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthSeriousToJson(this);
  }
}

abstract class AvataaarTypeMouthSerious extends AvataaarMouth {
  const factory AvataaarTypeMouthSerious() = _$AvataaarTypeMouthSerious;
  const AvataaarTypeMouthSerious._() : super._();

  factory AvataaarTypeMouthSerious.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthSerious.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeMouthSmileCopyWith<$Res> {
  factory $AvataaarTypeMouthSmileCopyWith(AvataaarTypeMouthSmile value,
          $Res Function(AvataaarTypeMouthSmile) then) =
      _$AvataaarTypeMouthSmileCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthSmileCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthSmileCopyWith<$Res> {
  _$AvataaarTypeMouthSmileCopyWithImpl(AvataaarTypeMouthSmile _value,
      $Res Function(AvataaarTypeMouthSmile) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthSmile));

  @override
  AvataaarTypeMouthSmile get _value => super._value as AvataaarTypeMouthSmile;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthSmile extends AvataaarTypeMouthSmile {
  const _$AvataaarTypeMouthSmile({String? $type})
      : $type = $type ?? 'smile',
        super._();

  factory _$AvataaarTypeMouthSmile.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthSmileFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.smile()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeMouthSmile);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return smile();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return smile?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (smile != null) {
      return smile();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return smile(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return smile?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (smile != null) {
      return smile(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthSmileToJson(this);
  }
}

abstract class AvataaarTypeMouthSmile extends AvataaarMouth {
  const factory AvataaarTypeMouthSmile() = _$AvataaarTypeMouthSmile;
  const AvataaarTypeMouthSmile._() : super._();

  factory AvataaarTypeMouthSmile.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthSmile.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeMouthTongueCopyWith<$Res> {
  factory $AvataaarTypeMouthTongueCopyWith(AvataaarTypeMouthTongue value,
          $Res Function(AvataaarTypeMouthTongue) then) =
      _$AvataaarTypeMouthTongueCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthTongueCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthTongueCopyWith<$Res> {
  _$AvataaarTypeMouthTongueCopyWithImpl(AvataaarTypeMouthTongue _value,
      $Res Function(AvataaarTypeMouthTongue) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthTongue));

  @override
  AvataaarTypeMouthTongue get _value => super._value as AvataaarTypeMouthTongue;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthTongue extends AvataaarTypeMouthTongue {
  const _$AvataaarTypeMouthTongue({String? $type})
      : $type = $type ?? 'tongue',
        super._();

  factory _$AvataaarTypeMouthTongue.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthTongueFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.tongue()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeMouthTongue);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return tongue();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return tongue?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (tongue != null) {
      return tongue();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return tongue(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return tongue?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (tongue != null) {
      return tongue(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthTongueToJson(this);
  }
}

abstract class AvataaarTypeMouthTongue extends AvataaarMouth {
  const factory AvataaarTypeMouthTongue() = _$AvataaarTypeMouthTongue;
  const AvataaarTypeMouthTongue._() : super._();

  factory AvataaarTypeMouthTongue.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthTongue.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeMouthTwinkleCopyWith<$Res> {
  factory $AvataaarTypeMouthTwinkleCopyWith(AvataaarTypeMouthTwinkle value,
          $Res Function(AvataaarTypeMouthTwinkle) then) =
      _$AvataaarTypeMouthTwinkleCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthTwinkleCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthTwinkleCopyWith<$Res> {
  _$AvataaarTypeMouthTwinkleCopyWithImpl(AvataaarTypeMouthTwinkle _value,
      $Res Function(AvataaarTypeMouthTwinkle) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthTwinkle));

  @override
  AvataaarTypeMouthTwinkle get _value =>
      super._value as AvataaarTypeMouthTwinkle;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthTwinkle extends AvataaarTypeMouthTwinkle {
  const _$AvataaarTypeMouthTwinkle({String? $type})
      : $type = $type ?? 'twinkle',
        super._();

  factory _$AvataaarTypeMouthTwinkle.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthTwinkleFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.twinkle()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeMouthTwinkle);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return twinkle();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return twinkle?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (twinkle != null) {
      return twinkle();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return twinkle(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return twinkle?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (twinkle != null) {
      return twinkle(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthTwinkleToJson(this);
  }
}

abstract class AvataaarTypeMouthTwinkle extends AvataaarMouth {
  const factory AvataaarTypeMouthTwinkle() = _$AvataaarTypeMouthTwinkle;
  const AvataaarTypeMouthTwinkle._() : super._();

  factory AvataaarTypeMouthTwinkle.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthTwinkle.fromJson;
}

/// @nodoc
abstract class $AvataaarTypeMouthVomitCopyWith<$Res> {
  factory $AvataaarTypeMouthVomitCopyWith(AvataaarTypeMouthVomit value,
          $Res Function(AvataaarTypeMouthVomit) then) =
      _$AvataaarTypeMouthVomitCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeMouthVomitCopyWithImpl<$Res>
    extends _$AvataaarMouthCopyWithImpl<$Res>
    implements $AvataaarTypeMouthVomitCopyWith<$Res> {
  _$AvataaarTypeMouthVomitCopyWithImpl(AvataaarTypeMouthVomit _value,
      $Res Function(AvataaarTypeMouthVomit) _then)
      : super(_value, (v) => _then(v as AvataaarTypeMouthVomit));

  @override
  AvataaarTypeMouthVomit get _value => super._value as AvataaarTypeMouthVomit;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeMouthVomit extends AvataaarTypeMouthVomit {
  const _$AvataaarTypeMouthVomit({String? $type})
      : $type = $type ?? 'vomit',
        super._();

  factory _$AvataaarTypeMouthVomit.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeMouthVomitFromJson(json);

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarMouth.vomit()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeMouthVomit);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() concerned,
    required TResult Function() default0,
    required TResult Function() disbelief,
    required TResult Function() eating,
    required TResult Function() grimace,
    required TResult Function() sad,
    required TResult Function() screamOpen,
    required TResult Function() serious,
    required TResult Function() smile,
    required TResult Function() tongue,
    required TResult Function() twinkle,
    required TResult Function() vomit,
  }) {
    return vomit();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
  }) {
    return vomit?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? concerned,
    TResult Function()? default0,
    TResult Function()? disbelief,
    TResult Function()? eating,
    TResult Function()? grimace,
    TResult Function()? sad,
    TResult Function()? screamOpen,
    TResult Function()? serious,
    TResult Function()? smile,
    TResult Function()? tongue,
    TResult Function()? twinkle,
    TResult Function()? vomit,
    required TResult orElse(),
  }) {
    if (vomit != null) {
      return vomit();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeMouthConcerned value) concerned,
    required TResult Function(AvataaarTypeMouthDefault0 value) default0,
    required TResult Function(AvataaarTypeMouthDisbelief value) disbelief,
    required TResult Function(AvataaarTypeMouthEating value) eating,
    required TResult Function(AvataaarTypeMouthGrimace value) grimace,
    required TResult Function(AvataaarTypeMouthSad value) sad,
    required TResult Function(AvataaarTypeMouthScreamOpen value) screamOpen,
    required TResult Function(AvataaarTypeMouthSerious value) serious,
    required TResult Function(AvataaarTypeMouthSmile value) smile,
    required TResult Function(AvataaarTypeMouthTongue value) tongue,
    required TResult Function(AvataaarTypeMouthTwinkle value) twinkle,
    required TResult Function(AvataaarTypeMouthVomit value) vomit,
  }) {
    return vomit(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
  }) {
    return vomit?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeMouthConcerned value)? concerned,
    TResult Function(AvataaarTypeMouthDefault0 value)? default0,
    TResult Function(AvataaarTypeMouthDisbelief value)? disbelief,
    TResult Function(AvataaarTypeMouthEating value)? eating,
    TResult Function(AvataaarTypeMouthGrimace value)? grimace,
    TResult Function(AvataaarTypeMouthSad value)? sad,
    TResult Function(AvataaarTypeMouthScreamOpen value)? screamOpen,
    TResult Function(AvataaarTypeMouthSerious value)? serious,
    TResult Function(AvataaarTypeMouthSmile value)? smile,
    TResult Function(AvataaarTypeMouthTongue value)? tongue,
    TResult Function(AvataaarTypeMouthTwinkle value)? twinkle,
    TResult Function(AvataaarTypeMouthVomit value)? vomit,
    required TResult orElse(),
  }) {
    if (vomit != null) {
      return vomit(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeMouthVomitToJson(this);
  }
}

abstract class AvataaarTypeMouthVomit extends AvataaarMouth {
  const factory AvataaarTypeMouthVomit() = _$AvataaarTypeMouthVomit;
  const AvataaarTypeMouthVomit._() : super._();

  factory AvataaarTypeMouthVomit.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeMouthVomit.fromJson;
}

AvataaarNose _$AvataaarNoseFromJson(Map<String, dynamic> json) {
  return AvataaarTypeNoseDefault0.fromJson(json);
}

/// @nodoc
class _$AvataaarNoseTearOff {
  const _$AvataaarNoseTearOff();

  AvataaarTypeNoseDefault0 default0() {
    return const AvataaarTypeNoseDefault0();
  }

  AvataaarNose fromJson(Map<String, Object?> json) {
    return AvataaarNose.fromJson(json);
  }
}

/// @nodoc
const $AvataaarNose = _$AvataaarNoseTearOff();

/// @nodoc
mixin _$AvataaarNose {
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? default0,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeNoseDefault0 value) default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeNoseDefault0 value)? default0,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeNoseDefault0 value)? default0,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarNoseCopyWith<$Res> {
  factory $AvataaarNoseCopyWith(
          AvataaarNose value, $Res Function(AvataaarNose) then) =
      _$AvataaarNoseCopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarNoseCopyWithImpl<$Res> implements $AvataaarNoseCopyWith<$Res> {
  _$AvataaarNoseCopyWithImpl(this._value, this._then);

  final AvataaarNose _value;
  // ignore: unused_field
  final $Res Function(AvataaarNose) _then;
}

/// @nodoc
abstract class $AvataaarTypeNoseDefault0CopyWith<$Res> {
  factory $AvataaarTypeNoseDefault0CopyWith(AvataaarTypeNoseDefault0 value,
          $Res Function(AvataaarTypeNoseDefault0) then) =
      _$AvataaarTypeNoseDefault0CopyWithImpl<$Res>;
}

/// @nodoc
class _$AvataaarTypeNoseDefault0CopyWithImpl<$Res>
    extends _$AvataaarNoseCopyWithImpl<$Res>
    implements $AvataaarTypeNoseDefault0CopyWith<$Res> {
  _$AvataaarTypeNoseDefault0CopyWithImpl(AvataaarTypeNoseDefault0 _value,
      $Res Function(AvataaarTypeNoseDefault0) _then)
      : super(_value, (v) => _then(v as AvataaarTypeNoseDefault0));

  @override
  AvataaarTypeNoseDefault0 get _value =>
      super._value as AvataaarTypeNoseDefault0;
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeNoseDefault0 extends AvataaarTypeNoseDefault0 {
  const _$AvataaarTypeNoseDefault0() : super._();

  factory _$AvataaarTypeNoseDefault0.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeNoseDefault0FromJson(json);

  @override
  String toString() {
    return 'AvataaarNose.default0()';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType && other is AvataaarTypeNoseDefault0);
  }

  @override
  int get hashCode => runtimeType.hashCode;

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function() default0,
  }) {
    return default0();
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function()? default0,
  }) {
    return default0?.call();
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function()? default0,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0();
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeNoseDefault0 value) default0,
  }) {
    return default0(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeNoseDefault0 value)? default0,
  }) {
    return default0?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeNoseDefault0 value)? default0,
    required TResult orElse(),
  }) {
    if (default0 != null) {
      return default0(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeNoseDefault0ToJson(this);
  }
}

abstract class AvataaarTypeNoseDefault0 extends AvataaarNose {
  const factory AvataaarTypeNoseDefault0() = _$AvataaarTypeNoseDefault0;
  const AvataaarTypeNoseDefault0._() : super._();

  factory AvataaarTypeNoseDefault0.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeNoseDefault0.fromJson;
}

AvataaarSkin _$AvataaarSkinFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'tanned':
      return AvataaarTypeSkinTanned.fromJson(json);
    case 'yellow':
      return AvataaarTypeSkinYellow.fromJson(json);
    case 'pale':
      return AvataaarTypeSkinPale.fromJson(json);
    case 'light':
      return AvataaarTypeSkinWhite.fromJson(json);
    case 'brown':
      return AvataaarTypeSkinBrown.fromJson(json);
    case 'darkBrown':
      return AvataaarTypeSkinDarkBrown.fromJson(json);
    case 'black':
      return AvataaarTypeSkinBlack.fromJson(json);
    case 'custom':
      return AvataaarTypeSkinCustom.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarSkin',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarSkinTearOff {
  const _$AvataaarSkinTearOff();

  AvataaarTypeSkinTanned tanned(
      [@ColorSerialiser() Color color = const Color(0x00FD9841)]) {
    return AvataaarTypeSkinTanned(
      color,
    );
  }

  AvataaarTypeSkinYellow yellow(
      [@ColorSerialiser() Color color = const Color(0x00F8D25C)]) {
    return AvataaarTypeSkinYellow(
      color,
    );
  }

  AvataaarTypeSkinPale pale(
      [@ColorSerialiser() Color color = const Color(0x00FFDBB4)]) {
    return AvataaarTypeSkinPale(
      color,
    );
  }

  AvataaarTypeSkinWhite light(
      [@ColorSerialiser() Color color = const Color(0x00EDB98A)]) {
    return AvataaarTypeSkinWhite(
      color,
    );
  }

  AvataaarTypeSkinBrown brown(
      [@ColorSerialiser() Color color = const Color(0x00D08B5B)]) {
    return AvataaarTypeSkinBrown(
      color,
    );
  }

  AvataaarTypeSkinDarkBrown darkBrown(
      [@ColorSerialiser() Color color = const Color(0x00AE5D29)]) {
    return AvataaarTypeSkinDarkBrown(
      color,
    );
  }

  AvataaarTypeSkinBlack black(
      [@ColorSerialiser() Color color = const Color(0x00614335)]) {
    return AvataaarTypeSkinBlack(
      color,
    );
  }

  AvataaarTypeSkinCustom custom(
      [@ColorSerialiser() Color color = Colors.grey]) {
    return AvataaarTypeSkinCustom(
      color,
    );
  }

  AvataaarSkin fromJson(Map<String, Object?> json) {
    return AvataaarSkin.fromJson(json);
  }
}

/// @nodoc
const $AvataaarSkin = _$AvataaarSkinTearOff();

/// @nodoc
mixin _$AvataaarSkin {
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;

  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $AvataaarSkinCopyWith<AvataaarSkin> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarSkinCopyWith<$Res> {
  factory $AvataaarSkinCopyWith(
          AvataaarSkin value, $Res Function(AvataaarSkin) then) =
      _$AvataaarSkinCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarSkinCopyWithImpl<$Res> implements $AvataaarSkinCopyWith<$Res> {
  _$AvataaarSkinCopyWithImpl(this._value, this._then);

  final AvataaarSkin _value;
  // ignore: unused_field
  final $Res Function(AvataaarSkin) _then;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_value.copyWith(
      color: color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
abstract class $AvataaarTypeSkinTannedCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory $AvataaarTypeSkinTannedCopyWith(AvataaarTypeSkinTanned value,
          $Res Function(AvataaarTypeSkinTanned) then) =
      _$AvataaarTypeSkinTannedCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeSkinTannedCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements $AvataaarTypeSkinTannedCopyWith<$Res> {
  _$AvataaarTypeSkinTannedCopyWithImpl(AvataaarTypeSkinTanned _value,
      $Res Function(AvataaarTypeSkinTanned) _then)
      : super(_value, (v) => _then(v as AvataaarTypeSkinTanned));

  @override
  AvataaarTypeSkinTanned get _value => super._value as AvataaarTypeSkinTanned;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeSkinTanned(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinTanned extends AvataaarTypeSkinTanned {
  const _$AvataaarTypeSkinTanned(
      [@ColorSerialiser() this.color = const Color(0x00FD9841), String? $type])
      : $type = $type ?? 'tanned',
        super._();

  factory _$AvataaarTypeSkinTanned.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinTannedFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.tanned(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeSkinTanned &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeSkinTannedCopyWith<AvataaarTypeSkinTanned> get copyWith =>
      _$AvataaarTypeSkinTannedCopyWithImpl<AvataaarTypeSkinTanned>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return tanned(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return tanned?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (tanned != null) {
      return tanned(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return tanned(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return tanned?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (tanned != null) {
      return tanned(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinTannedToJson(this);
  }
}

abstract class AvataaarTypeSkinTanned extends AvataaarSkin {
  const factory AvataaarTypeSkinTanned([@ColorSerialiser() Color color]) =
      _$AvataaarTypeSkinTanned;
  const AvataaarTypeSkinTanned._() : super._();

  factory AvataaarTypeSkinTanned.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinTanned.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeSkinTannedCopyWith<AvataaarTypeSkinTanned> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeSkinYellowCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory $AvataaarTypeSkinYellowCopyWith(AvataaarTypeSkinYellow value,
          $Res Function(AvataaarTypeSkinYellow) then) =
      _$AvataaarTypeSkinYellowCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeSkinYellowCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements $AvataaarTypeSkinYellowCopyWith<$Res> {
  _$AvataaarTypeSkinYellowCopyWithImpl(AvataaarTypeSkinYellow _value,
      $Res Function(AvataaarTypeSkinYellow) _then)
      : super(_value, (v) => _then(v as AvataaarTypeSkinYellow));

  @override
  AvataaarTypeSkinYellow get _value => super._value as AvataaarTypeSkinYellow;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeSkinYellow(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinYellow extends AvataaarTypeSkinYellow {
  const _$AvataaarTypeSkinYellow(
      [@ColorSerialiser() this.color = const Color(0x00F8D25C), String? $type])
      : $type = $type ?? 'yellow',
        super._();

  factory _$AvataaarTypeSkinYellow.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinYellowFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.yellow(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeSkinYellow &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeSkinYellowCopyWith<AvataaarTypeSkinYellow> get copyWith =>
      _$AvataaarTypeSkinYellowCopyWithImpl<AvataaarTypeSkinYellow>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return yellow(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return yellow?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (yellow != null) {
      return yellow(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return yellow(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return yellow?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (yellow != null) {
      return yellow(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinYellowToJson(this);
  }
}

abstract class AvataaarTypeSkinYellow extends AvataaarSkin {
  const factory AvataaarTypeSkinYellow([@ColorSerialiser() Color color]) =
      _$AvataaarTypeSkinYellow;
  const AvataaarTypeSkinYellow._() : super._();

  factory AvataaarTypeSkinYellow.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinYellow.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeSkinYellowCopyWith<AvataaarTypeSkinYellow> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeSkinPaleCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory $AvataaarTypeSkinPaleCopyWith(AvataaarTypeSkinPale value,
          $Res Function(AvataaarTypeSkinPale) then) =
      _$AvataaarTypeSkinPaleCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeSkinPaleCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements $AvataaarTypeSkinPaleCopyWith<$Res> {
  _$AvataaarTypeSkinPaleCopyWithImpl(
      AvataaarTypeSkinPale _value, $Res Function(AvataaarTypeSkinPale) _then)
      : super(_value, (v) => _then(v as AvataaarTypeSkinPale));

  @override
  AvataaarTypeSkinPale get _value => super._value as AvataaarTypeSkinPale;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeSkinPale(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinPale extends AvataaarTypeSkinPale {
  const _$AvataaarTypeSkinPale(
      [@ColorSerialiser() this.color = const Color(0x00FFDBB4), String? $type])
      : $type = $type ?? 'pale',
        super._();

  factory _$AvataaarTypeSkinPale.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinPaleFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.pale(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeSkinPale &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeSkinPaleCopyWith<AvataaarTypeSkinPale> get copyWith =>
      _$AvataaarTypeSkinPaleCopyWithImpl<AvataaarTypeSkinPale>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return pale(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return pale?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (pale != null) {
      return pale(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return pale(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return pale?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (pale != null) {
      return pale(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinPaleToJson(this);
  }
}

abstract class AvataaarTypeSkinPale extends AvataaarSkin {
  const factory AvataaarTypeSkinPale([@ColorSerialiser() Color color]) =
      _$AvataaarTypeSkinPale;
  const AvataaarTypeSkinPale._() : super._();

  factory AvataaarTypeSkinPale.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinPale.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeSkinPaleCopyWith<AvataaarTypeSkinPale> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeSkinWhiteCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory $AvataaarTypeSkinWhiteCopyWith(AvataaarTypeSkinWhite value,
          $Res Function(AvataaarTypeSkinWhite) then) =
      _$AvataaarTypeSkinWhiteCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeSkinWhiteCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements $AvataaarTypeSkinWhiteCopyWith<$Res> {
  _$AvataaarTypeSkinWhiteCopyWithImpl(
      AvataaarTypeSkinWhite _value, $Res Function(AvataaarTypeSkinWhite) _then)
      : super(_value, (v) => _then(v as AvataaarTypeSkinWhite));

  @override
  AvataaarTypeSkinWhite get _value => super._value as AvataaarTypeSkinWhite;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeSkinWhite(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinWhite extends AvataaarTypeSkinWhite {
  const _$AvataaarTypeSkinWhite(
      [@ColorSerialiser() this.color = const Color(0x00EDB98A), String? $type])
      : $type = $type ?? 'light',
        super._();

  factory _$AvataaarTypeSkinWhite.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinWhiteFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.light(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeSkinWhite &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeSkinWhiteCopyWith<AvataaarTypeSkinWhite> get copyWith =>
      _$AvataaarTypeSkinWhiteCopyWithImpl<AvataaarTypeSkinWhite>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return light(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return light?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (light != null) {
      return light(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return light(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return light?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (light != null) {
      return light(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinWhiteToJson(this);
  }
}

abstract class AvataaarTypeSkinWhite extends AvataaarSkin {
  const factory AvataaarTypeSkinWhite([@ColorSerialiser() Color color]) =
      _$AvataaarTypeSkinWhite;
  const AvataaarTypeSkinWhite._() : super._();

  factory AvataaarTypeSkinWhite.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinWhite.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeSkinWhiteCopyWith<AvataaarTypeSkinWhite> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeSkinBrownCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory $AvataaarTypeSkinBrownCopyWith(AvataaarTypeSkinBrown value,
          $Res Function(AvataaarTypeSkinBrown) then) =
      _$AvataaarTypeSkinBrownCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeSkinBrownCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements $AvataaarTypeSkinBrownCopyWith<$Res> {
  _$AvataaarTypeSkinBrownCopyWithImpl(
      AvataaarTypeSkinBrown _value, $Res Function(AvataaarTypeSkinBrown) _then)
      : super(_value, (v) => _then(v as AvataaarTypeSkinBrown));

  @override
  AvataaarTypeSkinBrown get _value => super._value as AvataaarTypeSkinBrown;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeSkinBrown(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinBrown extends AvataaarTypeSkinBrown {
  const _$AvataaarTypeSkinBrown(
      [@ColorSerialiser() this.color = const Color(0x00D08B5B), String? $type])
      : $type = $type ?? 'brown',
        super._();

  factory _$AvataaarTypeSkinBrown.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinBrownFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.brown(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeSkinBrown &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeSkinBrownCopyWith<AvataaarTypeSkinBrown> get copyWith =>
      _$AvataaarTypeSkinBrownCopyWithImpl<AvataaarTypeSkinBrown>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return brown(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return brown?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (brown != null) {
      return brown(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return brown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return brown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (brown != null) {
      return brown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinBrownToJson(this);
  }
}

abstract class AvataaarTypeSkinBrown extends AvataaarSkin {
  const factory AvataaarTypeSkinBrown([@ColorSerialiser() Color color]) =
      _$AvataaarTypeSkinBrown;
  const AvataaarTypeSkinBrown._() : super._();

  factory AvataaarTypeSkinBrown.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinBrown.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeSkinBrownCopyWith<AvataaarTypeSkinBrown> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeSkinDarkBrownCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory $AvataaarTypeSkinDarkBrownCopyWith(AvataaarTypeSkinDarkBrown value,
          $Res Function(AvataaarTypeSkinDarkBrown) then) =
      _$AvataaarTypeSkinDarkBrownCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeSkinDarkBrownCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements $AvataaarTypeSkinDarkBrownCopyWith<$Res> {
  _$AvataaarTypeSkinDarkBrownCopyWithImpl(AvataaarTypeSkinDarkBrown _value,
      $Res Function(AvataaarTypeSkinDarkBrown) _then)
      : super(_value, (v) => _then(v as AvataaarTypeSkinDarkBrown));

  @override
  AvataaarTypeSkinDarkBrown get _value =>
      super._value as AvataaarTypeSkinDarkBrown;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeSkinDarkBrown(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinDarkBrown extends AvataaarTypeSkinDarkBrown {
  const _$AvataaarTypeSkinDarkBrown(
      [@ColorSerialiser() this.color = const Color(0x00AE5D29), String? $type])
      : $type = $type ?? 'darkBrown',
        super._();

  factory _$AvataaarTypeSkinDarkBrown.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinDarkBrownFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.darkBrown(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeSkinDarkBrown &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeSkinDarkBrownCopyWith<AvataaarTypeSkinDarkBrown> get copyWith =>
      _$AvataaarTypeSkinDarkBrownCopyWithImpl<AvataaarTypeSkinDarkBrown>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return darkBrown(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return darkBrown?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (darkBrown != null) {
      return darkBrown(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return darkBrown(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return darkBrown?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (darkBrown != null) {
      return darkBrown(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinDarkBrownToJson(this);
  }
}

abstract class AvataaarTypeSkinDarkBrown extends AvataaarSkin {
  const factory AvataaarTypeSkinDarkBrown([@ColorSerialiser() Color color]) =
      _$AvataaarTypeSkinDarkBrown;
  const AvataaarTypeSkinDarkBrown._() : super._();

  factory AvataaarTypeSkinDarkBrown.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinDarkBrown.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeSkinDarkBrownCopyWith<AvataaarTypeSkinDarkBrown> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeSkinBlackCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory $AvataaarTypeSkinBlackCopyWith(AvataaarTypeSkinBlack value,
          $Res Function(AvataaarTypeSkinBlack) then) =
      _$AvataaarTypeSkinBlackCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeSkinBlackCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements $AvataaarTypeSkinBlackCopyWith<$Res> {
  _$AvataaarTypeSkinBlackCopyWithImpl(
      AvataaarTypeSkinBlack _value, $Res Function(AvataaarTypeSkinBlack) _then)
      : super(_value, (v) => _then(v as AvataaarTypeSkinBlack));

  @override
  AvataaarTypeSkinBlack get _value => super._value as AvataaarTypeSkinBlack;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeSkinBlack(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinBlack extends AvataaarTypeSkinBlack {
  const _$AvataaarTypeSkinBlack(
      [@ColorSerialiser() this.color = const Color(0x00614335), String? $type])
      : $type = $type ?? 'black',
        super._();

  factory _$AvataaarTypeSkinBlack.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinBlackFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.black(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeSkinBlack &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeSkinBlackCopyWith<AvataaarTypeSkinBlack> get copyWith =>
      _$AvataaarTypeSkinBlackCopyWithImpl<AvataaarTypeSkinBlack>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return black(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return black?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (black != null) {
      return black(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return black(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return black?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (black != null) {
      return black(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinBlackToJson(this);
  }
}

abstract class AvataaarTypeSkinBlack extends AvataaarSkin {
  const factory AvataaarTypeSkinBlack([@ColorSerialiser() Color color]) =
      _$AvataaarTypeSkinBlack;
  const AvataaarTypeSkinBlack._() : super._();

  factory AvataaarTypeSkinBlack.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinBlack.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeSkinBlackCopyWith<AvataaarTypeSkinBlack> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeSkinCustomCopyWith<$Res>
    implements $AvataaarSkinCopyWith<$Res> {
  factory $AvataaarTypeSkinCustomCopyWith(AvataaarTypeSkinCustom value,
          $Res Function(AvataaarTypeSkinCustom) then) =
      _$AvataaarTypeSkinCustomCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeSkinCustomCopyWithImpl<$Res>
    extends _$AvataaarSkinCopyWithImpl<$Res>
    implements $AvataaarTypeSkinCustomCopyWith<$Res> {
  _$AvataaarTypeSkinCustomCopyWithImpl(AvataaarTypeSkinCustom _value,
      $Res Function(AvataaarTypeSkinCustom) _then)
      : super(_value, (v) => _then(v as AvataaarTypeSkinCustom));

  @override
  AvataaarTypeSkinCustom get _value => super._value as AvataaarTypeSkinCustom;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeSkinCustom(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeSkinCustom extends AvataaarTypeSkinCustom {
  const _$AvataaarTypeSkinCustom(
      [@ColorSerialiser() this.color = Colors.grey, String? $type])
      : $type = $type ?? 'custom',
        super._();

  factory _$AvataaarTypeSkinCustom.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeSkinCustomFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarSkin.custom(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeSkinCustom &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeSkinCustomCopyWith<AvataaarTypeSkinCustom> get copyWith =>
      _$AvataaarTypeSkinCustomCopyWithImpl<AvataaarTypeSkinCustom>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) tanned,
    required TResult Function(@ColorSerialiser() Color color) yellow,
    required TResult Function(@ColorSerialiser() Color color) pale,
    required TResult Function(@ColorSerialiser() Color color) light,
    required TResult Function(@ColorSerialiser() Color color) brown,
    required TResult Function(@ColorSerialiser() Color color) darkBrown,
    required TResult Function(@ColorSerialiser() Color color) black,
    required TResult Function(@ColorSerialiser() Color color) custom,
  }) {
    return custom(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
  }) {
    return custom?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? tanned,
    TResult Function(@ColorSerialiser() Color color)? yellow,
    TResult Function(@ColorSerialiser() Color color)? pale,
    TResult Function(@ColorSerialiser() Color color)? light,
    TResult Function(@ColorSerialiser() Color color)? brown,
    TResult Function(@ColorSerialiser() Color color)? darkBrown,
    TResult Function(@ColorSerialiser() Color color)? black,
    TResult Function(@ColorSerialiser() Color color)? custom,
    required TResult orElse(),
  }) {
    if (custom != null) {
      return custom(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeSkinTanned value) tanned,
    required TResult Function(AvataaarTypeSkinYellow value) yellow,
    required TResult Function(AvataaarTypeSkinPale value) pale,
    required TResult Function(AvataaarTypeSkinWhite value) light,
    required TResult Function(AvataaarTypeSkinBrown value) brown,
    required TResult Function(AvataaarTypeSkinDarkBrown value) darkBrown,
    required TResult Function(AvataaarTypeSkinBlack value) black,
    required TResult Function(AvataaarTypeSkinCustom value) custom,
  }) {
    return custom(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
  }) {
    return custom?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeSkinTanned value)? tanned,
    TResult Function(AvataaarTypeSkinYellow value)? yellow,
    TResult Function(AvataaarTypeSkinPale value)? pale,
    TResult Function(AvataaarTypeSkinWhite value)? light,
    TResult Function(AvataaarTypeSkinBrown value)? brown,
    TResult Function(AvataaarTypeSkinDarkBrown value)? darkBrown,
    TResult Function(AvataaarTypeSkinBlack value)? black,
    TResult Function(AvataaarTypeSkinCustom value)? custom,
    required TResult orElse(),
  }) {
    if (custom != null) {
      return custom(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeSkinCustomToJson(this);
  }
}

abstract class AvataaarTypeSkinCustom extends AvataaarSkin {
  const factory AvataaarTypeSkinCustom([@ColorSerialiser() Color color]) =
      _$AvataaarTypeSkinCustom;
  const AvataaarTypeSkinCustom._() : super._();

  factory AvataaarTypeSkinCustom.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeSkinCustom.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeSkinCustomCopyWith<AvataaarTypeSkinCustom> get copyWith =>
      throw _privateConstructorUsedError;
}

AvataaarStyle _$AvataaarStyleFromJson(Map<String, dynamic> json) {
  switch (json['runtimeType']) {
    case 'transparent':
      return AvataaarTypeStyleTransparent.fromJson(json);
    case 'circle':
      return AvataaarTypeStyleCircle.fromJson(json);

    default:
      throw CheckedFromJsonException(json, 'runtimeType', 'AvataaarStyle',
          'Invalid union type "${json['runtimeType']}"!');
  }
}

/// @nodoc
class _$AvataaarStyleTearOff {
  const _$AvataaarStyleTearOff();

  AvataaarTypeStyleTransparent transparent(
      [@ColorSerialiser() Color color = Colors.transparent]) {
    return AvataaarTypeStyleTransparent(
      color,
    );
  }

  AvataaarTypeStyleCircle circle(
      [@ColorSerialiser() Color color = const Color(0x0065C9FF)]) {
    return AvataaarTypeStyleCircle(
      color,
    );
  }

  AvataaarStyle fromJson(Map<String, Object?> json) {
    return AvataaarStyle.fromJson(json);
  }
}

/// @nodoc
const $AvataaarStyle = _$AvataaarStyleTearOff();

/// @nodoc
mixin _$AvataaarStyle {
  @ColorSerialiser()
  Color get color => throw _privateConstructorUsedError;

  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) transparent,
    required TResult Function(@ColorSerialiser() Color color) circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeStyleTransparent value) transparent,
    required TResult Function(AvataaarTypeStyleCircle value) circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
  }) =>
      throw _privateConstructorUsedError;
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
    required TResult orElse(),
  }) =>
      throw _privateConstructorUsedError;
  Map<String, dynamic> toJson() => throw _privateConstructorUsedError;
  @JsonKey(ignore: true)
  $AvataaarStyleCopyWith<AvataaarStyle> get copyWith =>
      throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarStyleCopyWith<$Res> {
  factory $AvataaarStyleCopyWith(
          AvataaarStyle value, $Res Function(AvataaarStyle) then) =
      _$AvataaarStyleCopyWithImpl<$Res>;
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarStyleCopyWithImpl<$Res>
    implements $AvataaarStyleCopyWith<$Res> {
  _$AvataaarStyleCopyWithImpl(this._value, this._then);

  final AvataaarStyle _value;
  // ignore: unused_field
  final $Res Function(AvataaarStyle) _then;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(_value.copyWith(
      color: color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
abstract class $AvataaarTypeStyleTransparentCopyWith<$Res>
    implements $AvataaarStyleCopyWith<$Res> {
  factory $AvataaarTypeStyleTransparentCopyWith(
          AvataaarTypeStyleTransparent value,
          $Res Function(AvataaarTypeStyleTransparent) then) =
      _$AvataaarTypeStyleTransparentCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeStyleTransparentCopyWithImpl<$Res>
    extends _$AvataaarStyleCopyWithImpl<$Res>
    implements $AvataaarTypeStyleTransparentCopyWith<$Res> {
  _$AvataaarTypeStyleTransparentCopyWithImpl(
      AvataaarTypeStyleTransparent _value,
      $Res Function(AvataaarTypeStyleTransparent) _then)
      : super(_value, (v) => _then(v as AvataaarTypeStyleTransparent));

  @override
  AvataaarTypeStyleTransparent get _value =>
      super._value as AvataaarTypeStyleTransparent;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeStyleTransparent(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeStyleTransparent extends AvataaarTypeStyleTransparent {
  const _$AvataaarTypeStyleTransparent(
      [@ColorSerialiser() this.color = Colors.transparent, String? $type])
      : $type = $type ?? 'transparent',
        super._();

  factory _$AvataaarTypeStyleTransparent.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeStyleTransparentFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarStyle.transparent(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeStyleTransparent &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeStyleTransparentCopyWith<AvataaarTypeStyleTransparent>
      get copyWith => _$AvataaarTypeStyleTransparentCopyWithImpl<
          AvataaarTypeStyleTransparent>(this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) transparent,
    required TResult Function(@ColorSerialiser() Color color) circle,
  }) {
    return transparent(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
  }) {
    return transparent?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
    required TResult orElse(),
  }) {
    if (transparent != null) {
      return transparent(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeStyleTransparent value) transparent,
    required TResult Function(AvataaarTypeStyleCircle value) circle,
  }) {
    return transparent(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
  }) {
    return transparent?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
    required TResult orElse(),
  }) {
    if (transparent != null) {
      return transparent(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeStyleTransparentToJson(this);
  }
}

abstract class AvataaarTypeStyleTransparent extends AvataaarStyle {
  const factory AvataaarTypeStyleTransparent([@ColorSerialiser() Color color]) =
      _$AvataaarTypeStyleTransparent;
  const AvataaarTypeStyleTransparent._() : super._();

  factory AvataaarTypeStyleTransparent.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeStyleTransparent.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeStyleTransparentCopyWith<AvataaarTypeStyleTransparent>
      get copyWith => throw _privateConstructorUsedError;
}

/// @nodoc
abstract class $AvataaarTypeStyleCircleCopyWith<$Res>
    implements $AvataaarStyleCopyWith<$Res> {
  factory $AvataaarTypeStyleCircleCopyWith(AvataaarTypeStyleCircle value,
          $Res Function(AvataaarTypeStyleCircle) then) =
      _$AvataaarTypeStyleCircleCopyWithImpl<$Res>;
  @override
  $Res call({@ColorSerialiser() Color color});
}

/// @nodoc
class _$AvataaarTypeStyleCircleCopyWithImpl<$Res>
    extends _$AvataaarStyleCopyWithImpl<$Res>
    implements $AvataaarTypeStyleCircleCopyWith<$Res> {
  _$AvataaarTypeStyleCircleCopyWithImpl(AvataaarTypeStyleCircle _value,
      $Res Function(AvataaarTypeStyleCircle) _then)
      : super(_value, (v) => _then(v as AvataaarTypeStyleCircle));

  @override
  AvataaarTypeStyleCircle get _value => super._value as AvataaarTypeStyleCircle;

  @override
  $Res call({
    Object? color = freezed,
  }) {
    return _then(AvataaarTypeStyleCircle(
      color == freezed
          ? _value.color
          : color // ignore: cast_nullable_to_non_nullable
              as Color,
    ));
  }
}

/// @nodoc
@JsonSerializable()
class _$AvataaarTypeStyleCircle extends AvataaarTypeStyleCircle {
  const _$AvataaarTypeStyleCircle(
      [@ColorSerialiser() this.color = const Color(0x0065C9FF), String? $type])
      : $type = $type ?? 'circle',
        super._();

  factory _$AvataaarTypeStyleCircle.fromJson(Map<String, dynamic> json) =>
      _$$AvataaarTypeStyleCircleFromJson(json);

  @JsonKey()
  @override
  @ColorSerialiser()
  final Color color;

  @JsonKey(name: 'runtimeType')
  final String $type;

  @override
  String toString() {
    return 'AvataaarStyle.circle(color: $color)';
  }

  @override
  bool operator ==(dynamic other) {
    return identical(this, other) ||
        (other.runtimeType == runtimeType &&
            other is AvataaarTypeStyleCircle &&
            const DeepCollectionEquality().equals(other.color, color));
  }

  @override
  int get hashCode =>
      Object.hash(runtimeType, const DeepCollectionEquality().hash(color));

  @JsonKey(ignore: true)
  @override
  $AvataaarTypeStyleCircleCopyWith<AvataaarTypeStyleCircle> get copyWith =>
      _$AvataaarTypeStyleCircleCopyWithImpl<AvataaarTypeStyleCircle>(
          this, _$identity);

  @override
  @optionalTypeArgs
  TResult when<TResult extends Object?>({
    required TResult Function(@ColorSerialiser() Color color) transparent,
    required TResult Function(@ColorSerialiser() Color color) circle,
  }) {
    return circle(color);
  }

  @override
  @optionalTypeArgs
  TResult? whenOrNull<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
  }) {
    return circle?.call(color);
  }

  @override
  @optionalTypeArgs
  TResult maybeWhen<TResult extends Object?>({
    TResult Function(@ColorSerialiser() Color color)? transparent,
    TResult Function(@ColorSerialiser() Color color)? circle,
    required TResult orElse(),
  }) {
    if (circle != null) {
      return circle(color);
    }
    return orElse();
  }

  @override
  @optionalTypeArgs
  TResult map<TResult extends Object?>({
    required TResult Function(AvataaarTypeStyleTransparent value) transparent,
    required TResult Function(AvataaarTypeStyleCircle value) circle,
  }) {
    return circle(this);
  }

  @override
  @optionalTypeArgs
  TResult? mapOrNull<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
  }) {
    return circle?.call(this);
  }

  @override
  @optionalTypeArgs
  TResult maybeMap<TResult extends Object?>({
    TResult Function(AvataaarTypeStyleTransparent value)? transparent,
    TResult Function(AvataaarTypeStyleCircle value)? circle,
    required TResult orElse(),
  }) {
    if (circle != null) {
      return circle(this);
    }
    return orElse();
  }

  @override
  Map<String, dynamic> toJson() {
    return _$$AvataaarTypeStyleCircleToJson(this);
  }
}

abstract class AvataaarTypeStyleCircle extends AvataaarStyle {
  const factory AvataaarTypeStyleCircle([@ColorSerialiser() Color color]) =
      _$AvataaarTypeStyleCircle;
  const AvataaarTypeStyleCircle._() : super._();

  factory AvataaarTypeStyleCircle.fromJson(Map<String, dynamic> json) =
      _$AvataaarTypeStyleCircle.fromJson;

  @override
  @ColorSerialiser()
  Color get color;
  @override
  @JsonKey(ignore: true)
  $AvataaarTypeStyleCircleCopyWith<AvataaarTypeStyleCircle> get copyWith =>
      throw _privateConstructorUsedError;
}
